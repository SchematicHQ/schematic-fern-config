info:
  title: Schematic API
  version: "0.1"
  description: Schematic API
openapi: 3.0.0
security:
  - ApiKeyAuth: []
servers:
  - url: https://api.schematichq.com
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Schematic-Api-Key
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    ServerError:
      description: Server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    UnprocessableEntity:
      description: Unprocessable entity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
  schemas:
    ApiError:
      type: object
      properties:
        error:
          type: string
          description: Error message
      required:
        - error
    ApiKeyCreateResponseData:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        description:
          type: string
          nullable: true
        environment_id:
          type: string
          nullable: true
        id:
          type: string
        last_used_at:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
        scopes:
          type: array
          items:
            type: string
        secret:
          type: string
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - scopes
        - created_at
        - updated_at
        - secret
      title: ApiKeyCreateResponseData
    ApiKeyRequestListResponseData:
      type: object
      properties:
        api_key_id:
          type: string
        ended_at:
          type: string
          format: date-time
          nullable: true
        environment_id:
          type: string
          nullable: true
        id:
          type: string
        method:
          type: string
        req_body:
          type: string
          nullable: true
        request_type:
          type: string
          nullable: true
        resource_id:
          type: integer
          nullable: true
        resource_id_string:
          type: string
          nullable: true
        resource_name:
          type: string
          nullable: true
        resource_type:
          type: string
          nullable: true
        resp_code:
          type: integer
          nullable: true
        secondary_resource:
          type: string
          nullable: true
        started_at:
          type: string
          format: date-time
        url:
          type: string
        user_name:
          type: string
          nullable: true
      required:
        - api_key_id
        - method
        - id
        - started_at
        - url
      title: ApiKeyRequestListResponseData
    ApiKeyRequestResponseData:
      type: object
      properties:
        api_key:
          $ref: '#/components/schemas/ApiKeyResponseData'
        api_key_id:
          type: string
        ended_at:
          type: string
          format: date-time
          nullable: true
        environment_id:
          type: string
          nullable: true
        id:
          type: string
        method:
          type: string
        req_body:
          type: string
          nullable: true
        request_type:
          type: string
          nullable: true
        resource_id:
          type: integer
          nullable: true
        resource_id_string:
          type: string
          nullable: true
        resource_name:
          type: string
          nullable: true
        resource_type:
          type: string
          nullable: true
        resp_body:
          type: string
          nullable: true
        resp_code:
          type: integer
          nullable: true
        secondary_resource:
          type: string
          nullable: true
        started_at:
          type: string
          format: date-time
        url:
          type: string
        user_agent:
          type: string
          nullable: true
        user_id:
          type: string
          nullable: true
        user_name:
          type: string
          nullable: true
      required:
        - api_key_id
        - method
        - id
        - started_at
        - url
      title: ApiKeyRequestResponseData
    ApiKeyResponseData:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        description:
          type: string
          nullable: true
        environment_id:
          type: string
          nullable: true
        id:
          type: string
        last_used_at:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
        scopes:
          type: array
          items:
            type: string
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - scopes
        - created_at
        - updated_at
      title: ApiKeyResponseData
    AudienceRequestBody:
      type: object
      properties:
        condition_groups:
          type: array
          items:
            $ref: '#/components/schemas/CreateOrUpdateConditionGroupRequestBody'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/CreateOrUpdateConditionRequestBody'
        limit:
          type: integer
          description: Page limit (default 100)
          nullable: true
          example: "100"
        offset:
          type: integer
          description: Page offset (default 0)
          nullable: true
          example: "0"
        q:
          type: string
          nullable: true
      required:
        - conditions
        - condition_groups
      title: AudienceRequestBody
    BillingCouponResponseData:
      type: object
      properties:
        account_id:
          type: string
        amount_off:
          type: integer
          nullable: true
        currency:
          type: string
          nullable: true
        duration:
          type: string
          nullable: true
        duration_in_months:
          type: integer
          nullable: true
        environment_id:
          type: string
        external_id:
          type: string
        id:
          type: string
        is_active:
          type: boolean
        max_redemptions:
          type: integer
          nullable: true
        metadata:
          type: object
        name:
          type: string
        percent_off:
          type: number
          nullable: true
        times_redeemed:
          type: integer
        valid_from:
          type: string
          format: date-time
          nullable: true
        valid_until:
          type: string
          format: date-time
          nullable: true
      required:
        - id
        - account_id
        - environment_id
        - external_id
        - name
        - times_redeemed
        - is_active
        - metadata
      title: BillingCouponResponseData
    BillingCreditBundleResponseData:
      type: object
      properties:
        billing_invoice_id:
          type: string
          nullable: true
        bundle_type:
          type: string
        created_at:
          type: string
          format: date-time
        credit_description:
          type: string
        credit_icon:
          type: string
          nullable: true
        credit_id:
          type: string
        credit_name:
          type: string
        expiry_type:
          type: string
        expiry_unit:
          type: string
        expiry_unit_count:
          type: integer
          nullable: true
        has_grants:
          type: boolean
        id:
          type: string
        name:
          type: string
        plural_name:
          type: string
          nullable: true
        price:
          $ref: '#/components/schemas/BillingPriceResponseData'
        quantity:
          type: integer
          nullable: true
        singular_name:
          type: string
          nullable: true
        status:
          type: string
        unit_price:
          $ref: '#/components/schemas/BillingPriceResponseData'
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - credit_id
        - name
        - status
        - bundle_type
        - expiry_unit
        - expiry_type
        - credit_name
        - has_grants
        - created_at
        - updated_at
      title: BillingCreditBundleResponseData
    BillingCreditBundleView:
      type: object
      properties:
        billing_invoice_id:
          type: string
          nullable: true
        bundle_type:
          type: string
        created_at:
          type: string
          format: date-time
        credit_description:
          type: string
        credit_icon:
          type: string
          nullable: true
        credit_id:
          type: string
        credit_name:
          type: string
        expiry_type:
          type: string
        expiry_unit:
          type: string
        expiry_unit_count:
          type: integer
          nullable: true
        has_grants:
          type: boolean
        id:
          type: string
        name:
          type: string
        plural_name:
          type: string
          nullable: true
        price:
          $ref: '#/components/schemas/BillingProductPriceResponseData'
        quantity:
          type: integer
          nullable: true
        singular_name:
          type: string
          nullable: true
        status:
          type: string
        unit_price:
          $ref: '#/components/schemas/BillingProductPriceResponseData'
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - credit_id
        - name
        - status
        - bundle_type
        - expiry_unit
        - expiry_type
        - credit_name
        - has_grants
        - created_at
        - updated_at
      title: BillingCreditBundleView
    BillingCreditGrantResponseData:
      type: object
      properties:
        company_id:
          type: string
        company_name:
          type: string
        created_at:
          type: string
          format: date-time
        credit_icon:
          type: string
          nullable: true
        credit_id:
          type: string
        credit_name:
          type: string
        expires_at:
          type: string
          format: date-time
          nullable: true
        grant_reason:
          type: string
        id:
          type: string
        plan_id:
          type: string
          nullable: true
        plan_name:
          type: string
          nullable: true
        price:
          $ref: '#/components/schemas/BillingPriceResponseData'
        quantity:
          type: integer
        quantity_remaining:
          type: number
        quantity_used:
          type: number
        source_label:
          type: string
        updated_at:
          type: string
          format: date-time
        valid_from:
          type: string
          format: date-time
          nullable: true
        zeroed_out_date:
          type: string
          format: date-time
          nullable: true
        zeroed_out_reason:
          type: string
          nullable: true
      required:
        - id
        - quantity
        - quantity_remaining
        - quantity_used
        - company_id
        - company_name
        - credit_id
        - credit_name
        - source_label
        - created_at
        - updated_at
        - grant_reason
      title: BillingCreditGrantResponseData
    BillingCreditLedgerResponseData:
      type: object
      properties:
        description:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
        id:
          type: string
        name:
          type: string
        plural_name:
          type: string
          nullable: true
        singular_name:
          type: string
          nullable: true
      required:
        - id
        - name
      title: BillingCreditLedgerResponseData
    BillingCreditResponseData:
      type: object
      properties:
        burn_strategy:
          type: string
        created_at:
          type: string
          format: date-time
        default_expiry_unit:
          type: string
        default_expiry_unit_count:
          type: integer
          nullable: true
        default_rollover_policy:
          type: string
        description:
          type: string
        icon:
          type: string
          nullable: true
        id:
          type: string
        name:
          type: string
        plural_name:
          type: string
          nullable: true
        price:
          $ref: '#/components/schemas/BillingPriceResponseData'
        product:
          $ref: '#/components/schemas/BillingProductResponseData'
        singular_name:
          type: string
          nullable: true
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - description
        - default_expiry_unit
        - default_rollover_policy
        - burn_strategy
        - created_at
        - updated_at
      title: BillingCreditResponseData
    BillingCustomerResponseData:
      type: object
      properties:
        company_id:
          type: string
          nullable: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        email:
          type: string
        external_id:
          type: string
        failed_to_import:
          type: boolean
        id:
          type: string
        name:
          type: string
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - external_id
        - name
        - failed_to_import
        - email
        - updated_at
      title: BillingCustomerResponseData
    BillingCustomerSubscription:
      type: object
      properties:
        currency:
          type: string
        expired_at:
          type: string
          format: date-time
          nullable: true
        interval:
          type: string
        metered_usage:
          type: boolean
        per_unit_price:
          type: integer
        total_price:
          type: integer
      required:
        - total_price
        - interval
        - metered_usage
        - per_unit_price
        - currency
      title: BillingCustomerSubscription
    BillingCustomerWithSubscriptionsResponseData:
      type: object
      properties:
        company_id:
          type: string
          nullable: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
        email:
          type: string
        external_id:
          type: string
        failed_to_import:
          type: boolean
        id:
          type: string
        name:
          type: string
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/BillingCustomerSubscription'
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - external_id
        - name
        - failed_to_import
        - email
        - subscriptions
        - updated_at
      title: BillingCustomerWithSubscriptionsResponseData
    BillingMeterResponseData:
      type: object
      properties:
        dispaly_name:
          type: string
        event_name:
          type: string
        event_payload_key:
          type: string
        external_price_id:
          type: string
        id:
          type: string
      required:
        - id
        - external_price_id
        - dispaly_name
        - event_name
        - event_payload_key
      title: BillingMeterResponseData
    BillingPlanCreditGrantResponseData:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        credit_amount:
          type: integer
        credit_id:
          type: string
        credit_name:
          type: string
        credit_plural_name:
          type: string
          nullable: true
        credit_singular_name:
          type: string
          nullable: true
        expiry_type:
          type: string
          nullable: true
        expiry_unit:
          type: string
          nullable: true
        expiry_unit_count:
          type: integer
          nullable: true
        id:
          type: string
        plan_id:
          type: string
        plan_name:
          type: string
        reset_cadence:
          type: string
        reset_start:
          type: string
        reset_type:
          type: string
          nullable: true
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - credit_id
        - plan_id
        - plan_name
        - credit_amount
        - credit_name
        - reset_cadence
        - reset_start
        - created_at
        - updated_at
      title: BillingPlanCreditGrantResponseData
    BillingPriceResponseData:
      type: object
      properties:
        currency:
          type: string
        external_price_id:
          type: string
        id:
          type: string
        interval:
          type: string
        price:
          type: integer
        price_decimal:
          type: string
          nullable: true
        scheme:
          type: string
      required:
        - id
        - external_price_id
        - price
        - currency
        - scheme
        - interval
      title: BillingPriceResponseData
    BillingPriceView:
      type: object
      properties:
        billing_scheme:
          type: string
        created_at:
          type: string
          format: date-time
        currency:
          type: string
        id:
          type: string
        interval:
          type: string
        is_active:
          type: boolean
        meter_event_name:
          type: string
          nullable: true
        meter_event_payload_key:
          type: string
          nullable: true
        meter_id:
          type: string
          nullable: true
        package_size:
          type: integer
        price:
          type: integer
        price_decimal:
          type: string
          nullable: true
        price_external_id:
          type: string
        price_id:
          type: string
        price_tier:
          type: array
          items:
            $ref: '#/components/schemas/BillingProductPriceTierResponseData'
        product_external_id:
          type: string
        product_id:
          type: string
        product_name:
          type: string
        tiers_mode:
          type: string
          nullable: true
        updated_at:
          type: string
          format: date-time
        usage_type:
          type: string
      required:
        - id
        - price_external_id
        - product_external_id
        - interval
        - billing_scheme
        - usage_type
        - price
        - package_size
        - is_active
        - currency
        - created_at
        - updated_at
        - price_id
        - product_id
        - product_name
        - price_tier
      title: BillingPriceView
    BillingProductDetailResponseData:
      type: object
      properties:
        account_id:
          type: string
        created_at:
          type: string
          format: date-time
        currency:
          type: string
          description: Deprecated; currencies are associated with prices, not products
          nullable: true
          deprecated: true
        environment_id:
          type: string
        external_id:
          type: string
        is_active:
          type: boolean
        name:
          type: string
        price:
          type: number
        price_decimal:
          type: string
          nullable: true
        prices:
          type: array
          items:
            $ref: '#/components/schemas/BillingPriceResponseData'
        product_id:
          type: string
        quantity:
          type: number
        subscription_count:
          type: integer
        updated_at:
          type: string
          format: date-time
      required:
        - product_id
        - external_id
        - account_id
        - environment_id
        - name
        - price
        - quantity
        - is_active
        - created_at
        - updated_at
        - prices
        - subscription_count
      title: BillingProductDetailResponseData
    BillingProductForSubscriptionResponseData:
      type: object
      properties:
        billing_scheme:
          type: string
        billing_threshold:
          type: integer
          nullable: true
        created_at:
          type: string
          format: date-time
        currency:
          type: string
        environment_id:
          type: string
        external_id:
          type: string
        id:
          type: string
        interval:
          type: string
        meter_id:
          type: string
          nullable: true
        name:
          type: string
        package_size:
          type: integer
        price:
          type: integer
        price_decimal:
          type: string
          nullable: true
        price_external_id:
          type: string
        price_id:
          type: string
        price_tier:
          type: array
          items:
            $ref: '#/components/schemas/BillingProductPriceTierResponseData'
        quantity:
          type: number
        subscription_id:
          type: string
        subscription_item_external_id:
          type: string
          nullable: true
        updated_at:
          type: string
          format: date-time
        usage_type:
          type: string
      required:
        - id
        - environment_id
        - external_id
        - name
        - quantity
        - currency
        - price
        - package_size
        - price_id
        - price_external_id
        - interval
        - subscription_id
        - usage_type
        - billing_scheme
        - price_tier
        - created_at
        - updated_at
      title: BillingProductForSubscriptionResponseData
    BillingProductPlanResponseData:
      type: object
      properties:
        account_id:
          type: string
        billing_product_id:
          type: string
        charge_type:
          type: string
        controlled_by:
          type: string
        environment_id:
          type: string
        is_trialable:
          type: boolean
        monthly_price_id:
          type: string
          nullable: true
        one_time_price_id:
          type: string
          nullable: true
        plan_id:
          type: string
        trial_days:
          type: integer
          nullable: true
        yearly_price_id:
          type: string
          nullable: true
      required:
        - account_id
        - charge_type
        - environment_id
        - plan_id
        - billing_product_id
        - controlled_by
        - is_trialable
      title: BillingProductPlanResponseData
    BillingProductPriceResponseData:
      type: object
      properties:
        billing_scheme:
          type: string
        created_at:
          type: string
          format: date-time
        currency:
          type: string
        id:
          type: string
        interval:
          type: string
        is_active:
          type: boolean
        meter_id:
          type: string
          nullable: true
        package_size:
          type: integer
        price:
          type: integer
        price_decimal:
          type: string
          nullable: true
        price_external_id:
          type: string
        product_external_id:
          type: string
        tiers_mode:
          type: string
          nullable: true
        updated_at:
          type: string
          format: date-time
        usage_type:
          type: string
      required:
        - id
        - price_external_id
        - product_external_id
        - interval
        - billing_scheme
        - usage_type
        - price
        - package_size
        - is_active
        - currency
        - created_at
        - updated_at
      title: BillingProductPriceResponseData
    BillingProductPriceTierResponseData:
      type: object
      properties:
        flat_amount:
          type: integer
          nullable: true
        per_unit_price:
          type: integer
          nullable: true
        per_unit_price_decimal:
          type: string
          nullable: true
        up_to:
          type: integer
          nullable: true
      title: BillingProductPriceTierResponseData
    BillingProductPricing:
      type: object
      properties:
        billing_threshold:
          type: integer
          nullable: true
        currency:
          type: string
        interval:
          type: string
        meter_id:
          type: string
          nullable: true
        package_size:
          type: integer
          nullable: true
        price:
          type: integer
        price_decimal:
          type: string
          nullable: true
        price_external_id:
          type: string
        product_external_id:
          type: string
        quantity:
          type: integer
        subscription_item_external_id:
          type: string
          nullable: true
        usage_type:
          type: string
          enum:
            - licensed
            - metered
      required:
        - product_external_id
        - price
        - quantity
        - interval
        - currency
        - usage_type
        - price_external_id
      title: BillingProductPricing
    BillingProductResponseData:
      type: object
      properties:
        account_id:
          type: string
        created_at:
          type: string
          format: date-time
        currency:
          type: string
          description: Deprecated; currencies are associated with prices, not products
          nullable: true
          deprecated: true
        environment_id:
          type: string
        external_id:
          type: string
        is_active:
          type: boolean
        name:
          type: string
        price:
          type: number
        price_decimal:
          type: string
          nullable: true
        product_id:
          type: string
        quantity:
          type: number
        updated_at:
          type: string
          format: date-time
      required:
        - product_id
        - external_id
        - account_id
        - environment_id
        - name
        - price
        - quantity
        - is_active
        - created_at
        - updated_at
      title: BillingProductResponseData
    BillingSubscriptionDiscount:
      type: object
      properties:
        coupon_external_id:
          type: string
        customer_facing_code:
          type: string
          nullable: true
        ended_at:
          type: string
          format: date-time
          nullable: true
        external_id:
          type: string
        is_active:
          type: boolean
        promo_code_external_id:
          type: string
          nullable: true
        started_at:
          type: string
          format: date-time
      required:
        - external_id
        - started_at
        - is_active
        - coupon_external_id
      title: BillingSubscriptionDiscount
    BillingSubscriptionDiscountView:
      type: object
      properties:
        amount_off:
          type: integer
          nullable: true
        coupon_id:
          type: string
        coupon_name:
          type: string
        currency:
          type: string
          nullable: true
        customer_facing_code:
          type: string
          nullable: true
        discount_external_id:
          type: string
        duration:
          type: string
        duration_in_months:
          type: integer
          nullable: true
        ended_at:
          type: string
          format: date-time
          nullable: true
        is_active:
          type: boolean
        percent_off:
          type: number
          nullable: true
        promo_code_external_id:
          type: string
          nullable: true
        started_at:
          type: string
          format: date-time
        subscription_external_id:
          type: string
      required:
        - discount_external_id
        - subscription_external_id
        - coupon_id
        - started_at
        - coupon_name
        - duration
        - is_active
      title: BillingSubscriptionDiscountView
    BillingSubscriptionResponseData:
      type: object
      properties:
        cancel_at:
          type: integer
          nullable: true
        cancel_at_period_end:
          type: boolean
        company_id:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        currency:
          type: string
        customer_external_id:
          type: string
        default_payment_method_id:
          type: string
          nullable: true
        expired_at:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
        interval:
          type: string
        metadata:
          type: object
        period_end:
          type: integer
        period_start:
          type: integer
        status:
          type: string
        subscription_external_id:
          type: string
        total_price:
          type: integer
        trial_end:
          type: integer
          nullable: true
        trial_end_setting:
          type: string
          nullable: true
      required:
        - created_at
        - currency
        - customer_external_id
        - period_start
        - period_end
        - subscription_external_id
        - id
        - interval
        - total_price
        - status
        - cancel_at_period_end
      title: BillingSubscriptionResponseData
    BillingSubscriptionView:
      type: object
      properties:
        cancel_at:
          type: integer
          nullable: true
        cancel_at_period_end:
          type: boolean
        company_id:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        currency:
          type: string
        customer_external_id:
          type: string
        default_payment_method_id:
          type: string
          nullable: true
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/BillingSubscriptionDiscountView'
        expired_at:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
        interval:
          type: string
        latest_invoice:
          $ref: '#/components/schemas/InvoiceResponseData'
        metadata:
          type: object
        payment_method:
          $ref: '#/components/schemas/PaymentMethodResponseData'
        period_end:
          type: integer
        period_start:
          type: integer
        products:
          type: array
          items:
            $ref: '#/components/schemas/BillingProductForSubscriptionResponseData'
        status:
          type: string
        subscription_external_id:
          type: string
        total_price:
          type: integer
        trial_end:
          type: integer
          nullable: true
        trial_end_setting:
          type: string
          nullable: true
      required:
        - created_at
        - currency
        - customer_external_id
        - period_start
        - period_end
        - subscription_external_id
        - id
        - interval
        - total_price
        - status
        - cancel_at_period_end
        - products
        - discounts
      title: BillingSubscriptionView
    ChangeSubscriptionInternalRequestBody:
      type: object
      properties:
        add_on_ids:
          type: array
          items:
            $ref: '#/components/schemas/UpdateAddOnRequestBody'
        company_id:
          type: string
        coupon_external_id:
          type: string
          nullable: true
        credit_bundles:
          type: array
          items:
            $ref: '#/components/schemas/UpdateCreditBundleRequestBody'
        new_plan_id:
          type: string
        new_price_id:
          type: string
        pay_in_advance:
          type: array
          items:
            $ref: '#/components/schemas/UpdatePayInAdvanceRequestBody'
        payment_method_id:
          type: string
          nullable: true
        promo_code:
          type: string
          nullable: true
        skip_trial:
          type: boolean
      required:
        - add_on_ids
        - pay_in_advance
        - credit_bundles
        - new_plan_id
        - new_price_id
        - skip_trial
        - company_id
      title: ChangeSubscriptionInternalRequestBody
    ChangeSubscriptionRequestBody:
      type: object
      properties:
        add_on_ids:
          type: array
          items:
            $ref: '#/components/schemas/UpdateAddOnRequestBody'
        coupon_external_id:
          type: string
          nullable: true
        credit_bundles:
          type: array
          items:
            $ref: '#/components/schemas/UpdateCreditBundleRequestBody'
        new_plan_id:
          type: string
        new_price_id:
          type: string
        pay_in_advance:
          type: array
          items:
            $ref: '#/components/schemas/UpdatePayInAdvanceRequestBody'
        payment_method_id:
          type: string
          nullable: true
        promo_code:
          type: string
          nullable: true
        skip_trial:
          type: boolean
      required:
        - add_on_ids
        - pay_in_advance
        - credit_bundles
        - new_plan_id
        - new_price_id
        - skip_trial
      title: ChangeSubscriptionRequestBody
    CheckFlagRequestBody:
      type: object
      properties:
        company:
          additionalProperties:
            type: string
          type: object
          nullable: true
        user:
          additionalProperties:
            type: string
          type: object
          nullable: true
      title: CheckFlagRequestBody
    CheckFlagResponseData:
      type: object
      properties:
        company_id:
          type: string
          description: If company keys were provided and matched a company, its ID
          nullable: true
        error:
          type: string
          description: If an error occurred while checking the flag, the error message
          nullable: true
        feature_allocation:
          type: integer
          description: If a numeric feature entitlement rule was matched, its allocation
          nullable: true
        feature_usage:
          type: integer
          description: If a numeric feature entitlement rule was matched, the company's usage
          nullable: true
        feature_usage_event:
          type: string
          description: If an event-based numeric feature entitlement rule was matched, the event used to track its usage
          nullable: true
        feature_usage_period:
          type: string
          description: For event-based feature entitlement rules, the period over which usage is tracked (current_month, current_day, current_week, all_time)
          nullable: true
        feature_usage_reset_at:
          type: string
          description: For event-based feature entitlement rules, when the usage period will reset
          format: date-time
          nullable: true
        flag:
          type: string
          description: The key used to check the flag
        flag_id:
          type: string
          description: If a flag was found, its ID
          nullable: true
        reason:
          type: string
          description: A human-readable explanation of the result
        rule_id:
          type: string
          description: If a rule was found, its ID
          nullable: true
        rule_type:
          type: string
          description: If a rule was found, its type
          nullable: true
        user_id:
          type: string
          description: If user keys were provided and matched a user, its ID
          nullable: true
        value:
          type: boolean
          description: A boolean flag check result; for feature entitlements, this represents whether further consumption of the feature is permitted
      required:
        - flag
        - reason
        - value
      title: CheckFlagResponseData
    CheckFlagsResponseData:
      type: object
      properties:
        flags:
          type: array
          items:
            $ref: '#/components/schemas/CheckFlagResponseData'
      required:
        - flags
      title: CheckFlagsResponseData
    CheckoutDataRequestBody:
      type: object
      properties:
        company_id:
          type: string
        selected_plan_id:
          type: string
          nullable: true
      required:
        - company_id
      title: CheckoutDataRequestBody
    CheckoutDataResponseData:
      type: object
      properties:
        active_add_ons:
          type: array
          items:
            $ref: '#/components/schemas/PlanDetailResponseData'
        active_plan:
          $ref: '#/components/schemas/PlanDetailResponseData'
        active_usage_based_entitlements:
          type: array
          items:
            $ref: '#/components/schemas/UsageBasedEntitlementResponseData'
        available_credit_bundles:
          type: array
          items:
            $ref: '#/components/schemas/BillingCreditBundleResponseData'
        company:
          $ref: '#/components/schemas/CompanyDetailResponseData'
        feature_usage:
          $ref: '#/components/schemas/FeatureUsageDetailResponseData'
        selected_credit_bundles:
          type: array
          items:
            $ref: '#/components/schemas/CreditBundlePurchaseResponseData'
        selected_plan:
          $ref: '#/components/schemas/PlanDetailResponseData'
        selected_usage_based_entitlements:
          type: array
          items:
            $ref: '#/components/schemas/UsageBasedEntitlementResponseData'
        subscription:
          $ref: '#/components/schemas/CompanySubscriptionResponseData'
      required:
        - active_add_ons
        - active_usage_based_entitlements
        - selected_usage_based_entitlements
        - available_credit_bundles
        - selected_credit_bundles
      title: CheckoutDataResponseData
    CheckoutSettingsResponseData:
      type: object
      properties:
        collect_address:
          type: boolean
        collect_email:
          type: boolean
        collect_phone:
          type: boolean
      required:
        - collect_address
        - collect_email
        - collect_phone
      title: CheckoutSettingsResponseData
    CheckoutSubscription:
      type: object
      properties:
        cancel_at:
          type: integer
          nullable: true
        cancel_at_period_end:
          type: boolean
        company_id:
          type: string
          nullable: true
        confirm_payment_intent_client_secret:
          type: string
          nullable: true
        confirm_payment_intent_id:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        currency:
          type: string
        customer_external_id:
          type: string
        default_payment_method_id:
          type: string
          nullable: true
        expired_at:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
        interval:
          type: string
        metadata:
          type: object
        period_end:
          type: integer
        period_start:
          type: integer
        status:
          type: string
        subscription_external_id:
          type: string
        total_price:
          type: integer
        trial_end:
          type: integer
          nullable: true
        trial_end_setting:
          type: string
          nullable: true
      required:
        - created_at
        - currency
        - customer_external_id
        - period_start
        - period_end
        - subscription_external_id
        - id
        - interval
        - total_price
        - status
        - cancel_at_period_end
      title: CheckoutSubscription
    CompanyCrmDealsResponseData:
      type: object
      properties:
        deal_arr:
          type: string
        deal_external_id:
          type: string
        deal_mrr:
          type: string
        deal_name:
          type: string
          nullable: true
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/CrmDealLineItem'
      required:
        - deal_external_id
        - deal_arr
        - deal_mrr
        - line_items
      title: CompanyCrmDealsResponseData
    CompanyDetailResponseData:
      type: object
      properties:
        add_ons:
          type: array
          items:
            $ref: '#/components/schemas/CompanyPlanWithBillingSubView'
        billing_credit_balances:
          additionalProperties:
            type: number
          type: object
          nullable: true
        billing_subscription:
          $ref: '#/components/schemas/BillingSubscriptionView'
        billing_subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/BillingSubscriptionView'
        created_at:
          type: string
          format: date-time
        default_payment_method:
          $ref: '#/components/schemas/PaymentMethodResponseData'
        entity_traits:
          type: array
          items:
            $ref: '#/components/schemas/EntityTraitDetailResponseData'
        environment_id:
          type: string
        id:
          type: string
        keys:
          type: array
          items:
            $ref: '#/components/schemas/EntityKeyDetailResponseData'
        last_seen_at:
          type: string
          format: date-time
          nullable: true
        logo_url:
          type: string
          nullable: true
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/CompanyEventPeriodMetricsResponseData'
        name:
          type: string
        payment_methods:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethodResponseData'
        plan:
          $ref: '#/components/schemas/CompanyPlanWithBillingSubView'
        plans:
          type: array
          items:
            $ref: '#/components/schemas/GenericPreviewObject'
        rules:
          type: array
          items:
            $ref: '#/components/schemas/Rule'
        traits:
          type: object
          description: A map of trait names to trait values
        updated_at:
          type: string
          format: date-time
        user_count:
          type: integer
      required:
        - created_at
        - environment_id
        - id
        - name
        - updated_at
        - add_ons
        - billing_subscriptions
        - entity_traits
        - keys
        - metrics
        - payment_methods
        - plans
        - rules
        - user_count
      title: CompanyDetailResponseData
    CompanyEventPeriodMetricsResponseData:
      type: object
      properties:
        account_id:
          type: string
        captured_at_max:
          type: string
          format: date-time
        captured_at_min:
          type: string
          format: date-time
        company_id:
          type: string
        created_at:
          type: string
          format: date-time
        environment_id:
          type: string
        event_subtype:
          type: string
        month_reset:
          type: string
        period:
          type: string
        valid_until:
          type: string
          format: date-time
          nullable: true
        value:
          type: integer
      required:
        - account_id
        - environment_id
        - company_id
        - event_subtype
        - period
        - month_reset
        - captured_at_min
        - captured_at_max
        - value
        - created_at
      title: CompanyEventPeriodMetricsResponseData
    CompanyLedgerResponseData:
      type: object
      properties:
        id:
          type: string
        logo_url:
          type: string
          nullable: true
        name:
          type: string
      required:
        - id
        - name
      title: CompanyLedgerResponseData
    CompanyMembershipDetailResponseData:
      type: object
      properties:
        company:
          $ref: '#/components/schemas/CompanyResponseData'
        company_id:
          type: string
        created_at:
          type: string
          format: date-time
        id:
          type: string
        updated_at:
          type: string
          format: date-time
        user_id:
          type: string
      required:
        - id
        - company_id
        - user_id
        - created_at
        - updated_at
      title: CompanyMembershipDetailResponseData
    CompanyMembershipResponseData:
      type: object
      properties:
        company_id:
          type: string
        created_at:
          type: string
          format: date-time
        id:
          type: string
        updated_at:
          type: string
          format: date-time
        user_id:
          type: string
      required:
        - id
        - company_id
        - user_id
        - created_at
        - updated_at
      title: CompanyMembershipResponseData
    CompanyOverrideNoteResponseData:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        external_user_id:
          type: string
        external_user_name:
          type: string
        id:
          type: string
        note:
          type: string
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - external_user_id
        - external_user_name
        - note
        - created_at
        - updated_at
      title: CompanyOverrideNoteResponseData
    CompanyOverrideResponseData:
      type: object
      properties:
        company:
          $ref: '#/components/schemas/CompanyDetailResponseData'
        company_id:
          type: string
        consumption_rate:
          type: number
          nullable: true
        created_at:
          type: string
          format: date-time
        environment_id:
          type: string
        expiration_date:
          type: string
          format: date-time
          nullable: true
        feature:
          $ref: '#/components/schemas/FeatureResponseData'
        feature_id:
          type: string
        id:
          type: string
        metric_period:
          type: string
          nullable: true
        metric_period_month_reset:
          type: string
          nullable: true
        notes:
          type: array
          items:
            $ref: '#/components/schemas/CompanyOverrideNoteResponseData'
        rule_id:
          type: string
          nullable: true
        rule_id_usage_exceeded:
          type: string
          nullable: true
        updated_at:
          type: string
          format: date-time
        value_bool:
          type: boolean
          nullable: true
        value_numeric:
          type: integer
          nullable: true
        value_trait:
          $ref: '#/components/schemas/EntityTraitDefinitionResponseData'
        value_trait_id:
          type: string
          nullable: true
        value_type:
          type: string
      required:
        - company_id
        - created_at
        - environment_id
        - feature_id
        - id
        - updated_at
        - value_type
        - notes
      title: CompanyOverrideResponseData
    CompanyPlanDetailResponseData:
      type: object
      properties:
        audience_type:
          type: string
          nullable: true
        billing_product:
          $ref: '#/components/schemas/BillingProductDetailResponseData'
        charge_type:
          type: string
        company_can_trial:
          type: boolean
        company_count:
          type: integer
        compatible_plan_ids:
          type: array
          items:
            type: string
        controlled_by:
          type: string
        created_at:
          type: string
          format: date-time
        current:
          type: boolean
        custom:
          type: boolean
        custom_plan_config:
          $ref: '#/components/schemas/CustomPlanConfig'
        description:
          type: string
        entitlements:
          type: array
          items:
            $ref: '#/components/schemas/PlanEntitlementResponseData'
        features:
          type: array
          items:
            $ref: '#/components/schemas/FeatureDetailResponseData'
        icon:
          type: string
        id:
          type: string
        included_credit_grants:
          type: array
          items:
            $ref: '#/components/schemas/PlanCreditGrantView'
        is_custom:
          type: boolean
        is_default:
          type: boolean
          deprecated: true
        is_free:
          type: boolean
        is_trialable:
          type: boolean
        monthly_price:
          $ref: '#/components/schemas/BillingPriceResponseData'
        name:
          type: string
        one_time_price:
          $ref: '#/components/schemas/BillingPriceResponseData'
        plan_type:
          type: string
        trial_days:
          type: integer
          nullable: true
        updated_at:
          type: string
          format: date-time
        usage_violations:
          type: array
          items:
            $ref: '#/components/schemas/FeatureUsageResponseData'
        valid:
          type: boolean
        yearly_price:
          $ref: '#/components/schemas/BillingPriceResponseData'
      required:
        - created_at
        - description
        - id
        - icon
        - name
        - plan_type
        - updated_at
        - charge_type
        - company_count
        - features
        - is_default
        - is_trialable
        - controlled_by
        - is_free
        - is_custom
        - entitlements
        - compatible_plan_ids
        - current
        - custom
        - included_credit_grants
        - valid
        - usage_violations
        - company_can_trial
      title: CompanyPlanDetailResponseData
    CompanyPlanWithBillingSubView:
      type: object
      properties:
        added_on:
          type: string
          format: date-time
          nullable: true
        billing_product_external_id:
          type: string
          nullable: true
        billing_product_id:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        id:
          type: string
        image_url:
          type: string
          nullable: true
        name:
          type: string
        plan_period:
          type: string
          nullable: true
        plan_price:
          type: integer
          nullable: true
      required:
        - id
        - name
      title: CompanyPlanWithBillingSubView
    CompanyResponseData:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        environment_id:
          type: string
        id:
          type: string
        last_seen_at:
          type: string
          format: date-time
          nullable: true
        logo_url:
          type: string
          nullable: true
        name:
          type: string
        updated_at:
          type: string
          format: date-time
      required:
        - created_at
        - environment_id
        - id
        - name
        - updated_at
      title: CompanyResponseData
    CompanySubscriptionResponseData:
      type: object
      properties:
        cancel_at:
          type: string
          format: date-time
          nullable: true
        cancel_at_period_end:
          type: boolean
        currency:
          type: string
        customer_external_id:
          type: string
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/BillingSubscriptionDiscountView'
        expired_at:
          type: string
          format: date-time
          nullable: true
        interval:
          type: string
        latest_invoice:
          $ref: '#/components/schemas/InvoiceResponseData'
        payment_method:
          $ref: '#/components/schemas/PaymentMethodResponseData'
        products:
          type: array
          items:
            $ref: '#/components/schemas/BillingProductForSubscriptionResponseData'
        status:
          type: string
        subscription_external_id:
          type: string
        total_price:
          type: integer
        trial_end:
          type: string
          format: date-time
          nullable: true
      required:
        - customer_external_id
        - interval
        - products
        - discounts
        - subscription_external_id
        - total_price
        - status
        - currency
        - cancel_at_period_end
      title: CompanySubscriptionResponseData
    CompanyViewWithFeatureUsageResponseData:
      type: object
      properties:
        add_ons:
          type: array
          items:
            $ref: '#/components/schemas/CompanyPlanWithBillingSubView'
        billing_credit_balances:
          additionalProperties:
            type: number
          type: object
          nullable: true
        billing_subscription:
          $ref: '#/components/schemas/BillingSubscriptionView'
        billing_subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/BillingSubscriptionView'
        created_at:
          type: string
          format: date-time
        default_payment_method:
          $ref: '#/components/schemas/PaymentMethodResponseData'
        entity_traits:
          type: array
          items:
            $ref: '#/components/schemas/EntityTraitDetailResponseData'
        environment_id:
          type: string
        feature_usage:
          type: array
          items:
            $ref: '#/components/schemas/FeatureUsageDataResponseData'
        id:
          type: string
        keys:
          type: array
          items:
            $ref: '#/components/schemas/EntityKeyDetailResponseData'
        last_seen_at:
          type: string
          format: date-time
          nullable: true
        logo_url:
          type: string
          nullable: true
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/CompanyEventPeriodMetricsResponseData'
        name:
          type: string
        payment_methods:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethodResponseData'
        plan:
          $ref: '#/components/schemas/CompanyPlanWithBillingSubView'
        plans:
          type: array
          items:
            $ref: '#/components/schemas/GenericPreviewObject'
        rules:
          type: array
          items:
            $ref: '#/components/schemas/Rule'
        traits:
          type: object
          description: A map of trait names to trait values
        updated_at:
          type: string
          format: date-time
        user_count:
          type: integer
      required:
        - created_at
        - environment_id
        - id
        - name
        - updated_at
        - add_ons
        - billing_subscriptions
        - entity_traits
        - keys
        - metrics
        - payment_methods
        - plans
        - rules
        - user_count
        - feature_usage
      title: CompanyViewWithFeatureUsageResponseData
    CompatiblePlans:
      type: object
      properties:
        compatible_plan_ids:
          type: array
          items:
            type: string
        source_plan_id:
          type: string
      required:
        - source_plan_id
        - compatible_plan_ids
      title: CompatiblePlans
    CompatiblePlansResponseData:
      type: object
      properties:
        compatible_plan_ids:
          type: array
          items:
            type: string
        source_plan_id:
          type: string
      required:
        - source_plan_id
        - compatible_plan_ids
      title: CompatiblePlansResponseData
    ComponentCapabilities:
      type: object
      properties:
        badge_visibility:
          type: boolean
        checkout:
          type: boolean
      required:
        - checkout
        - badge_visibility
      title: ComponentCapabilities
    ComponentCheckoutSettings:
      type: object
      properties:
        collect_address:
          type: boolean
        collect_email:
          type: boolean
        collect_phone:
          type: boolean
        tax_collection_enabled:
          type: boolean
      required:
        - collect_email
        - collect_address
        - collect_phone
        - tax_collection_enabled
      title: ComponentCheckoutSettings
    ComponentHydrateResponseData:
      type: object
      properties:
        active_add_ons:
          type: array
          items:
            $ref: '#/components/schemas/CompanyPlanDetailResponseData'
        active_plans:
          type: array
          items:
            $ref: '#/components/schemas/CompanyPlanDetailResponseData'
        active_usage_based_entitlements:
          type: array
          items:
            $ref: '#/components/schemas/UsageBasedEntitlementResponseData'
        add_on_compatibilities:
          type: array
          items:
            $ref: '#/components/schemas/CompatiblePlans'
        capabilities:
          $ref: '#/components/schemas/ComponentCapabilities'
        checkout_settings:
          $ref: '#/components/schemas/ComponentCheckoutSettings'
        company:
          $ref: '#/components/schemas/CompanyDetailResponseData'
        component:
          $ref: '#/components/schemas/ComponentResponseData'
        credit_bundles:
          type: array
          items:
            $ref: '#/components/schemas/BillingCreditBundleView'
        credit_grants:
          type: array
          items:
            $ref: '#/components/schemas/CreditCompanyGrantView'
        default_plan:
          $ref: '#/components/schemas/PlanDetailResponseData'
        feature_usage:
          $ref: '#/components/schemas/FeatureUsageDetailResponseData'
        post_trial_plan:
          $ref: '#/components/schemas/PlanDetailResponseData'
        show_credits:
          type: boolean
        show_period_toggle:
          type: boolean
        show_zero_price_as_free:
          type: boolean
        stripe_embed:
          $ref: '#/components/schemas/StripeEmbedInfo'
        subscription:
          $ref: '#/components/schemas/CompanySubscriptionResponseData'
        trial_payment_method_required:
          type: boolean
          nullable: true
        upcoming_invoice:
          $ref: '#/components/schemas/InvoiceResponseData'
      required:
        - active_add_ons
        - active_plans
        - active_usage_based_entitlements
        - add_on_compatibilities
        - credit_bundles
        - credit_grants
        - show_period_toggle
        - show_credits
        - show_zero_price_as_free
        - checkout_settings
      title: ComponentHydrateResponseData
    ComponentPreviewResponseData:
      type: object
      properties:
        active_add_ons:
          type: array
          items:
            $ref: '#/components/schemas/CompanyPlanDetailResponseData'
        active_plans:
          type: array
          items:
            $ref: '#/components/schemas/CompanyPlanDetailResponseData'
        active_usage_based_entitlements:
          type: array
          items:
            $ref: '#/components/schemas/UsageBasedEntitlementResponseData'
        add_on_compatibilities:
          type: array
          items:
            $ref: '#/components/schemas/CompatiblePlans'
        capabilities:
          $ref: '#/components/schemas/ComponentCapabilities'
        checkout_settings:
          $ref: '#/components/schemas/ComponentCheckoutSettings'
        company:
          $ref: '#/components/schemas/CompanyDetailResponseData'
        component:
          $ref: '#/components/schemas/ComponentResponseData'
        credit_bundles:
          type: array
          items:
            $ref: '#/components/schemas/BillingCreditBundleView'
        credit_grants:
          type: array
          items:
            $ref: '#/components/schemas/CreditCompanyGrantView'
        default_plan:
          $ref: '#/components/schemas/PlanDetailResponseData'
        feature_usage:
          $ref: '#/components/schemas/FeatureUsageDetailResponseData'
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceResponseData'
        post_trial_plan:
          $ref: '#/components/schemas/PlanDetailResponseData'
        show_credits:
          type: boolean
        show_period_toggle:
          type: boolean
        show_zero_price_as_free:
          type: boolean
        stripe_embed:
          $ref: '#/components/schemas/StripeEmbedInfo'
        subscription:
          $ref: '#/components/schemas/CompanySubscriptionResponseData'
        trial_payment_method_required:
          type: boolean
          nullable: true
        upcoming_invoice:
          $ref: '#/components/schemas/InvoiceResponseData'
      required:
        - active_add_ons
        - active_plans
        - active_usage_based_entitlements
        - add_on_compatibilities
        - credit_bundles
        - credit_grants
        - show_period_toggle
        - show_credits
        - show_zero_price_as_free
        - checkout_settings
        - invoices
      title: ComponentPreviewResponseData
    ComponentResponseData:
      type: object
      properties:
        ast:
          additionalProperties:
            type: number
          type: object
        created_at:
          type: string
          format: date-time
        id:
          type: string
        name:
          type: string
        state:
          type: string
        type:
          type: string
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - type
        - state
        - created_at
        - updated_at
      title: ComponentResponseData
    Condition:
      type: object
      properties:
        account_id:
          type: string
        comparison_trait_definition:
          $ref: '#/components/schemas/TraitDefinition'
        condition_type:
          type: string
        consumption_rate:
          type: number
          nullable: true
        credit_id:
          type: string
          nullable: true
        environment_id:
          type: string
        event_subtype:
          type: string
          nullable: true
        id:
          type: string
        metric_period:
          type: string
          nullable: true
        metric_period_month_reset:
          type: string
          nullable: true
        metric_value:
          type: integer
          nullable: true
        operator:
          type: string
        resource_ids:
          type: array
          items:
            type: string
        trait_definition:
          $ref: '#/components/schemas/TraitDefinition'
        trait_value:
          type: string
      required:
        - id
        - account_id
        - environment_id
        - condition_type
        - operator
        - resource_ids
        - trait_value
      title: Condition
    ConditionGroup:
      type: object
      properties:
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/Condition'
      required:
        - conditions
      title: ConditionGroup
    CountResponse:
      type: object
      properties:
        count:
          type: integer
          description: The number of resources
    CouponRequestBody:
      type: object
      properties:
        amount_off:
          type: integer
        currency:
          type: string
          nullable: true
        duration:
          type: string
        duration_in_months:
          type: integer
        max_redemptions:
          type: integer
        name:
          type: string
        percent_off:
          type: number
        times_redeemed:
          type: integer
      required:
        - name
        - percent_off
        - amount_off
        - times_redeemed
        - max_redemptions
        - duration
        - duration_in_months
      title: CouponRequestBody
    CreateApiKeyRequestBody:
      type: object
      properties:
        description:
          type: string
          nullable: true
        environment_id:
          type: string
          nullable: true
        name:
          type: string
      required:
        - name
      title: CreateApiKeyRequestBody
    CreateBillingCreditRequestBody:
      type: object
      properties:
        burn_strategy:
          type: string
          nullable: true
          enum:
            - plan_first_then_credit_bundles_first_in_first_out
            - first_in_first_out
            - last_in_first_out
            - expiration_priority
        currency:
          type: string
        default_expiry_unit:
          type: string
          nullable: true
        default_expiry_unit_count:
          type: integer
          nullable: true
        default_rollover_policy:
          type: string
          nullable: true
          enum:
            - none
            - rollover
            - expire
        description:
          type: string
        icon:
          type: string
          nullable: true
        name:
          type: string
        per_unit_price:
          type: integer
          nullable: true
        per_unit_price_decimal:
          type: string
          nullable: true
        plural_name:
          type: string
          nullable: true
        singular_name:
          type: string
          nullable: true
      required:
        - name
        - description
        - currency
      title: CreateBillingCreditRequestBody
    CreateBillingCustomerRequestBody:
      type: object
      properties:
        company_id:
          type: string
          nullable: true
        default_payment_method_id:
          type: string
          nullable: true
        email:
          type: string
        external_id:
          type: string
        failed_to_import:
          type: boolean
        meta:
          additionalProperties:
            type: string
          type: object
        name:
          type: string
      required:
        - external_id
        - name
        - email
        - failed_to_import
        - meta
      title: CreateBillingCustomerRequestBody
    CreateBillingPlanCreditGrantRequestBody:
      type: object
      properties:
        credit_amount:
          type: integer
        credit_id:
          type: string
        expiry_type:
          type: string
          nullable: true
          enum:
            - duration
            - no_expiry
            - end_of_trial
            - end_of_billing_period
            - end_of_next_billing_period
        expiry_unit:
          type: string
          nullable: true
          enum:
            - days
            - billing_periods
        expiry_unit_count:
          type: integer
          nullable: true
        plan_id:
          type: string
        reset_cadence:
          type: string
          enum:
            - monthly
            - yearly
            - daily
            - weekly
        reset_start:
          type: string
          enum:
            - billing_period
            - first_of_month
        reset_type:
          type: string
          nullable: true
          enum:
            - plan_period
            - no_reset
      required:
        - credit_id
        - plan_id
        - credit_amount
        - reset_cadence
        - reset_start
      title: CreateBillingPlanCreditGrantRequestBody
    CreateBillingPriceRequestBody:
      type: object
      properties:
        billing_scheme:
          type: string
          enum:
            - per_unit
            - tiered
        currency:
          type: string
        external_account_id:
          type: string
        interval:
          type: string
        is_active:
          type: boolean
        meter_id:
          type: string
          nullable: true
        package_size:
          type: integer
          nullable: true
        price:
          type: integer
        price_decimal:
          type: string
          nullable: true
        price_external_id:
          type: string
        price_tiers:
          type: array
          items:
            $ref: '#/components/schemas/CreateBillingPriceTierRequestBody'
        product_external_id:
          type: string
        tiers_mode:
          type: string
          nullable: true
          enum:
            - volume
            - graduated
        usage_type:
          type: string
          enum:
            - licensed
            - metered
      required:
        - external_account_id
        - product_external_id
        - price_external_id
        - interval
        - is_active
        - price
        - billing_scheme
        - currency
        - usage_type
        - price_tiers
      title: CreateBillingPriceRequestBody
    CreateBillingPriceTierRequestBody:
      type: object
      properties:
        flat_amount:
          type: integer
          nullable: true
        per_unit_decimal:
          type: string
          nullable: true
        per_unit_price:
          type: integer
          nullable: true
        price_external_id:
          type: string
        up_to:
          type: integer
          nullable: true
      required:
        - price_external_id
      title: CreateBillingPriceTierRequestBody
    CreateBillingProductRequestBody:
      type: object
      properties:
        external_id:
          type: string
        is_active:
          type: boolean
          nullable: true
        name:
          type: string
        price:
          type: number
      required:
        - external_id
        - name
        - price
      title: CreateBillingProductRequestBody
    CreateBillingSubscriptionRequestBody:
      type: object
      properties:
        cancel_at:
          type: integer
          nullable: true
        cancel_at_period_end:
          type: boolean
        currency:
          type: string
        customer_external_id:
          type: string
        default_payment_method_external_id:
          type: string
          nullable: true
        default_payment_method_id:
          type: string
          nullable: true
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/BillingSubscriptionDiscount'
        expired_at:
          type: string
          format: date-time
        interval:
          type: string
          nullable: true
        metadata:
          type: object
          nullable: true
        period_end:
          type: integer
          nullable: true
        period_start:
          type: integer
          nullable: true
        product_external_ids:
          type: array
          items:
            $ref: '#/components/schemas/BillingProductPricing'
        status:
          type: string
          nullable: true
        subscription_external_id:
          type: string
        total_price:
          type: integer
        trial_end:
          type: integer
          nullable: true
        trial_end_setting:
          type: string
          nullable: true
          enum:
            - subscribe
            - cancel
      required:
        - customer_external_id
        - subscription_external_id
        - total_price
        - currency
        - expired_at
        - product_external_ids
        - discounts
        - cancel_at_period_end
      title: CreateBillingSubscriptionRequestBody
    CreateCompanyCreditGrant:
      type: object
      properties:
        billing_periods_count:
          type: integer
          nullable: true
        company_id:
          type: string
        credit_id:
          type: string
        expires_at:
          type: string
          format: date-time
          nullable: true
        expiry_type:
          type: string
          nullable: true
          enum:
            - duration
            - no_expiry
            - end_of_trial
            - end_of_billing_period
            - end_of_next_billing_period
        expiry_unit:
          type: string
          nullable: true
          enum:
            - days
            - billing_periods
        expiry_unit_count:
          type: integer
          nullable: true
        quantity:
          type: integer
        reason:
          type: string
      required:
        - company_id
        - credit_id
        - quantity
        - reason
      title: CreateCompanyCreditGrant
    CreateCompanyOverrideRequestBody:
      type: object
      properties:
        company_id:
          type: string
        credit_consumption_rate:
          type: number
          nullable: true
        expiration_date:
          type: string
          format: date-time
          nullable: true
        feature_id:
          type: string
        metric_period:
          type: string
          nullable: true
          enum:
            - all_time
            - current_month
            - current_week
            - current_day
        metric_period_month_reset:
          type: string
          nullable: true
          enum:
            - first_of_month
            - billing_cycle
        note:
          type: string
          nullable: true
        value_bool:
          type: boolean
          nullable: true
        value_credit_id:
          type: string
          nullable: true
        value_numeric:
          type: integer
          nullable: true
        value_trait_id:
          type: string
          nullable: true
        value_type:
          type: string
          enum:
            - boolean
            - credit
            - numeric
            - trait
            - unlimited
      required:
        - company_id
        - feature_id
        - value_type
      title: CreateCompanyOverrideRequestBody
    CreateComponentRequestBody:
      type: object
      properties:
        ast:
          additionalProperties:
            type: number
          type: object
        entity_type:
          type: string
          enum:
            - entitlement
            - billing
        name:
          type: string
      required:
        - name
        - entity_type
      title: CreateComponentRequestBody
    CreateCouponRequestBody:
      type: object
      properties:
        amount_off:
          type: integer
        currency:
          type: string
          nullable: true
        duration:
          type: string
        duration_in_months:
          type: integer
        external_id:
          type: string
        max_redemptions:
          type: integer
        name:
          type: string
        percent_off:
          type: number
        times_redeemed:
          type: integer
      required:
        - external_id
        - name
        - percent_off
        - amount_off
        - times_redeemed
        - max_redemptions
        - duration
        - duration_in_months
      title: CreateCouponRequestBody
    CreateCreditBundleRequestBody:
      type: object
      properties:
        bundle_name:
          type: string
        bundle_type:
          type: string
          nullable: true
          enum:
            - fixed
        credit_id:
          type: string
        currency:
          type: string
        expiry_type:
          type: string
          nullable: true
          enum:
            - duration
            - no_expiry
            - end_of_trial
            - end_of_billing_period
            - end_of_next_billing_period
        expiry_unit:
          type: string
          nullable: true
          enum:
            - days
            - billing_periods
        expiry_unit_count:
          type: integer
          nullable: true
        price_per_unit:
          type: integer
        price_per_unit_decimal:
          type: string
          nullable: true
        quantity:
          type: integer
          nullable: true
        status:
          type: string
          nullable: true
          enum:
            - active
            - inactive
      required:
        - credit_id
        - currency
        - bundle_name
        - price_per_unit
      title: CreateCreditBundleRequestBody
    CreateCrmDealLineItemAssociationRequestBody:
      type: object
      properties:
        deal_external_id:
          type: string
        line_item_external_id:
          type: string
      required:
        - deal_external_id
        - line_item_external_id
      title: CreateCrmDealLineItemAssociationRequestBody
    CreateCrmDealRequestBody:
      type: object
      properties:
        arr:
          type: string
          nullable: true
        crm_company_id:
          type: string
          nullable: true
        crm_company_key:
          type: string
        crm_product_id:
          type: string
          nullable: true
        crm_type:
          type: string
        deal_external_id:
          type: string
        deal_name:
          type: string
          nullable: true
        deal_stage:
          type: string
          nullable: true
        mrr:
          type: string
          nullable: true
      required:
        - deal_external_id
        - crm_type
        - crm_company_key
      title: CreateCrmDealRequestBody
    CreateCrmLineItemRequestBody:
      type: object
      properties:
        amount:
          type: string
        discount_percentage:
          type: string
          nullable: true
        interval:
          type: string
        line_item_external_id:
          type: string
        product_external_id:
          type: string
        quantity:
          type: integer
        term_month:
          type: integer
          nullable: true
        total_discount:
          type: string
          nullable: true
      required:
        - product_external_id
        - line_item_external_id
        - amount
        - quantity
        - interval
      title: CreateCrmLineItemRequestBody
    CreateCrmProductRequestBody:
      type: object
      properties:
        currency:
          type: string
        description:
          type: string
        external_id:
          type: string
        interval:
          type: string
        name:
          type: string
        price:
          type: string
        quantity:
          type: integer
        sku:
          type: string
      required:
        - external_id
        - name
        - price
        - description
        - sku
        - currency
        - quantity
        - interval
      title: CreateCrmProductRequestBody
    CreateDataExportRequestBody:
      type: object
      properties:
        export_type:
          type: string
          enum:
            - company-feature-usage
        metadata:
          type: string
        output_file_type:
          type: string
          enum:
            - csv
      required:
        - export_type
        - output_file_type
        - metadata
      title: CreateDataExportRequestBody
    CreateEntitlementReqCommon:
      type: object
      properties:
        credit_consumption_rate:
          type: number
          nullable: true
        feature_id:
          type: string
        metric_period:
          type: string
          nullable: true
          enum:
            - all_time
            - current_month
            - current_week
            - current_day
        metric_period_month_reset:
          type: string
          nullable: true
          enum:
            - first_of_month
            - billing_cycle
        value_bool:
          type: boolean
          nullable: true
        value_credit_id:
          type: string
          nullable: true
        value_numeric:
          type: integer
          nullable: true
        value_trait_id:
          type: string
          nullable: true
        value_type:
          type: string
          enum:
            - boolean
            - credit
            - numeric
            - trait
            - unlimited
      required:
        - feature_id
        - value_type
      title: CreateEntitlementReqCommon
    CreateEntityTraitDefinitionRequestBody:
      type: object
      properties:
        display_name:
          type: string
          nullable: true
        entity_type:
          type: string
          enum:
            - company
            - user
        hierarchy:
          type: array
          items:
            type: string
        trait_type:
          type: string
          enum:
            - boolean
            - currency
            - date
            - number
            - string
            - url
      required:
        - entity_type
        - hierarchy
        - trait_type
      title: CreateEntityTraitDefinitionRequestBody
    CreateEnvironmentRequestBody:
      type: object
      properties:
        environment_type:
          type: string
          enum:
            - development
            - staging
            - production
        name:
          type: string
      required:
        - name
        - environment_type
      title: CreateEnvironmentRequestBody
    CreateEventBatchRequestBody:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/CreateEventRequestBody'
      required:
        - events
      title: CreateEventBatchRequestBody
    CreateEventRequestBody:
      type: object
      properties:
        body:
          type: object
          oneOf:
            - type: object
              properties:
                company:
                  additionalProperties:
                    type: string
                  type: object
                  description: Key-value pairs to identify company associated with track event
                event:
                  type: string
                  description: The name of the type of track event
                quantity:
                  type: integer
                  description: Optionally specify the quantity of the event
                traits:
                  type: object
                  description: A map of trait names to trait values
                user:
                  additionalProperties:
                    type: string
                  type: object
                  description: Key-value pairs to identify user associated with track event
              required:
                - event
              title: EventBodyTrack
            - type: object
              properties:
                company_id:
                  type: string
                  description: Schematic company ID (starting with 'comp_') of the company evaluated, if any
                  nullable: true
                error:
                  type: string
                  description: Report an error that occurred during the flag check
                  nullable: true
                flag_id:
                  type: string
                  description: Schematic flag ID (starting with 'flag_') for the flag matching the key, if any
                  nullable: true
                flag_key:
                  type: string
                  description: The key of the flag being checked
                reason:
                  type: string
                  description: The reason why the value was returned
                req_company:
                  additionalProperties:
                    type: string
                  type: object
                  description: Key-value pairs used to to identify company for which the flag was checked
                  nullable: true
                req_user:
                  additionalProperties:
                    type: string
                  type: object
                  description: Key-value pairs used to to identify user for which the flag was checked
                  nullable: true
                rule_id:
                  type: string
                  description: Schematic rule ID (starting with 'rule_') of the rule that matched for the flag, if any
                  nullable: true
                user_id:
                  type: string
                  description: Schematic user ID (starting with 'user_') of the user evaluated, if any
                  nullable: true
                value:
                  type: boolean
                  description: The value of the flag for the given company and/or user
              required:
                - flag_key
                - reason
                - value
              title: EventBodyFlagCheck
            - type: object
              properties:
                company:
                  type: object
                  description: Information about the company associated with the user; required only if it is a new user
                  properties:
                    keys:
                      additionalProperties:
                        type: string
                      type: object
                      description: Key-value pairs to identify the company
                    name:
                      type: string
                      description: The display name of the company; required only if it is a new company
                    traits:
                      type: object
                      description: A map of trait names to trait values
                  required:
                    - keys
                  title: EventBodyIdentifyCompany
                keys:
                  additionalProperties:
                    type: string
                  type: object
                  description: Key-value pairs to identify the user
                name:
                  type: string
                  description: The display name of the user being identified; required only if it is a new user
                traits:
                  type: object
                  description: A map of trait names to trait values
              required:
                - keys
              title: EventBodyIdentify
          title: EventBody
        event_type:
          type: string
          description: Either 'identify' or 'track'
          enum:
            - identify
            - track
            - flag_check
        sent_at:
          type: string
          description: Optionally provide a timestamp at which the event was sent to Schematic
          format: date-time
          nullable: true
      required:
        - event_type
      title: CreateEventRequestBody
    CreateFeatureRequestBody:
      type: object
      properties:
        description:
          type: string
        event_subtype:
          type: string
          nullable: true
        feature_type:
          type: string
          enum:
            - boolean
            - event
            - trait
        flag:
          $ref: '#/components/schemas/CreateOrUpdateFlagRequestBody'
        icon:
          type: string
          nullable: true
        lifecycle_phase:
          type: string
          nullable: true
          enum:
            - add_on
            - alpha
            - beta
            - deprecated
            - ga
            - in_plan
            - inactive
            - internal_testing
            - legacy
        maintainer_id:
          type: string
          nullable: true
        name:
          type: string
        plural_name:
          type: string
          nullable: true
        singular_name:
          type: string
          nullable: true
        trait_id:
          type: string
          nullable: true
      required:
        - description
        - feature_type
        - name
      title: CreateFeatureRequestBody
    CreateFlagRequestBody:
      type: object
      properties:
        default_value:
          type: boolean
        description:
          type: string
        feature_id:
          type: string
          nullable: true
        flag_type:
          type: string
          enum:
            - boolean
        key:
          type: string
        maintainer_id:
          type: string
          nullable: true
        name:
          type: string
      required:
        - default_value
        - description
        - flag_type
        - key
        - name
      title: CreateFlagRequestBody
    CreateInvoiceRequestBody:
      type: object
      properties:
        amount_due:
          type: integer
        amount_paid:
          type: integer
        amount_remaining:
          type: integer
        collection_method:
          type: string
        currency:
          type: string
        customer_external_id:
          type: string
        due_date:
          type: string
          format: date-time
          nullable: true
        external_id:
          type: string
          nullable: true
        payment_method_external_id:
          type: string
          nullable: true
        subscription_external_id:
          type: string
          nullable: true
        subtotal:
          type: integer
        url:
          type: string
          nullable: true
      required:
        - amount_due
        - amount_paid
        - amount_remaining
        - collection_method
        - currency
        - customer_external_id
        - subtotal
      title: CreateInvoiceRequestBody
    CreateMeterRequestBody:
      type: object
      properties:
        display_name:
          type: string
        event_name:
          type: string
        event_payload_key:
          type: string
        external_id:
          type: string
      required:
        - external_id
        - display_name
        - event_name
        - event_payload_key
      title: CreateMeterRequestBody
    CreateOrUpdateConditionGroupRequestBody:
      type: object
      properties:
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/CreateOrUpdateConditionRequestBody'
        flag_id:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
        plan_id:
          type: string
          nullable: true
      required:
        - conditions
      title: CreateOrUpdateConditionGroupRequestBody
    CreateOrUpdateConditionRequestBody:
      type: object
      properties:
        comparison_trait_id:
          type: string
          description: Optionally provide a trait ID to compare a metric or trait value against instead of a value
          nullable: true
        condition_type:
          type: string
          enum:
            - company
            - metric
            - trait
            - user
            - plan
            - billing_product
            - crm_product
            - base_plan
        credit_cost:
          type: number
          description: Cost of credit to use to measure this condition
          nullable: true
        credit_id:
          type: string
          description: ID of credit to use to measure this condition
          nullable: true
        event_subtype:
          type: string
          description: Name of track event type used to measure this condition
          nullable: true
        id:
          type: string
          nullable: true
        metric_period:
          type: string
          description: Period of time over which to measure the track event metric
          nullable: true
          enum:
            - all_time
            - current_month
            - current_week
            - current_day
        metric_period_month_reset:
          type: string
          description: When metric_period=current_month, specify whether the month restarts based on the calendar month or the billing period
          nullable: true
          enum:
            - first_of_month
            - billing_cycle
        metric_value:
          type: integer
          description: Value to compare the track event metric against
          nullable: true
        operator:
          type: string
          enum:
            - eq
            - ne
            - gt
            - gte
            - lt
            - lte
            - is_empty
            - not_empty
        resource_ids:
          type: array
          description: List of resource IDs (companies, users, or plans) targeted by this condition
          items:
            type: string
        trait_id:
          type: string
          description: ID of trait to use to measure this condition
          nullable: true
        trait_value:
          type: string
          description: Value to compare the trait value against
          nullable: true
      required:
        - condition_type
        - operator
        - resource_ids
      title: CreateOrUpdateConditionRequestBody
    CreateOrUpdateFlagRequestBody:
      type: object
      properties:
        default_value:
          type: boolean
        description:
          type: string
        feature_id:
          type: string
          nullable: true
        flag_type:
          type: string
          enum:
            - boolean
        id:
          type: string
          nullable: true
        key:
          type: string
        maintainer_id:
          type: string
          nullable: true
        name:
          type: string
      required:
        - default_value
        - description
        - flag_type
        - key
        - name
      title: CreateOrUpdateFlagRequestBody
    CreateOrUpdateRuleRequestBody:
      type: object
      properties:
        condition_groups:
          type: array
          items:
            $ref: '#/components/schemas/CreateOrUpdateConditionGroupRequestBody'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/CreateOrUpdateConditionRequestBody'
        id:
          type: string
          nullable: true
        name:
          type: string
        priority:
          type: integer
        rule_type:
          type: string
          nullable: true
          enum:
            - global_override
            - company_override
            - plan_entitlement
            - standard
            - default
            - plan_audience
        value:
          type: boolean
      required:
        - condition_groups
        - conditions
        - name
        - priority
        - value
      title: CreateOrUpdateRuleRequestBody
    CreatePaymentMethodRequestBody:
      type: object
      properties:
        account_last4:
          type: string
          nullable: true
        account_name:
          type: string
          nullable: true
        bank_name:
          type: string
          nullable: true
        billing_email:
          type: string
          nullable: true
        billing_name:
          type: string
          nullable: true
        card_brand:
          type: string
          nullable: true
        card_exp_month:
          type: integer
          nullable: true
        card_exp_year:
          type: integer
          nullable: true
        card_last4:
          type: string
          nullable: true
        customer_external_id:
          type: string
        external_id:
          type: string
        payment_method_type:
          type: string
      required:
        - external_id
        - customer_external_id
        - payment_method_type
      title: CreatePaymentMethodRequestBody
    CreatePlanEntitlementRequestBody:
      type: object
      properties:
        billing_product_id:
          type: string
          nullable: true
        billing_threshold:
          type: integer
          nullable: true
        credit_consumption_rate:
          type: number
          nullable: true
        currency:
          type: string
          nullable: true
        feature_id:
          type: string
        metric_period:
          type: string
          nullable: true
          enum:
            - all_time
            - current_month
            - current_week
            - current_day
        metric_period_month_reset:
          type: string
          nullable: true
          enum:
            - first_of_month
            - billing_cycle
        monthly_metered_price_id:
          type: string
          nullable: true
          deprecated: true
        monthly_price_tiers:
          type: array
          items:
            $ref: '#/components/schemas/CreatePriceTierRequestBody'
          nullable: true
        monthly_unit_price:
          type: integer
          nullable: true
        monthly_unit_price_decimal:
          type: string
          nullable: true
        overage_billing_product_id:
          type: string
          nullable: true
          deprecated: true
        plan_id:
          type: string
        price_behavior:
          type: string
          nullable: true
          enum:
            - pay_as_you_go
            - pay_in_advance
            - overage
            - credit_burndown
            - tier
        price_tiers:
          type: array
          description: Use MonthlyPriceTiers or YearlyPriceTiers instead
          items:
            $ref: '#/components/schemas/CreatePriceTierRequestBody'
          nullable: true
          deprecated: true
        soft_limit:
          type: integer
          nullable: true
        tier_mode:
          type: string
          nullable: true
        value_bool:
          type: boolean
          nullable: true
        value_credit_id:
          type: string
          nullable: true
        value_numeric:
          type: integer
          nullable: true
        value_trait_id:
          type: string
          nullable: true
        value_type:
          type: string
          enum:
            - boolean
            - credit
            - numeric
            - trait
            - unlimited
        yearly_metered_price_id:
          type: string
          nullable: true
          deprecated: true
        yearly_price_tiers:
          type: array
          items:
            $ref: '#/components/schemas/CreatePriceTierRequestBody'
          nullable: true
        yearly_unit_price:
          type: integer
          nullable: true
        yearly_unit_price_decimal:
          type: string
          nullable: true
      required:
        - plan_id
        - feature_id
        - value_type
      title: CreatePlanEntitlementRequestBody
    CreatePlanGroupRequestBody:
      type: object
      properties:
        add_on_compatibilities:
          type: array
          items:
            $ref: '#/components/schemas/CompatiblePlans'
          nullable: true
        add_on_ids:
          type: array
          description: Use OrderedAddOns instead
          items:
            type: string
          deprecated: true
        checkout_collect_address:
          type: boolean
        checkout_collect_email:
          type: boolean
        checkout_collect_phone:
          type: boolean
        custom_plan_config:
          $ref: '#/components/schemas/CustomPlanConfig'
        custom_plan_id:
          type: string
          nullable: true
        default_plan_id:
          type: string
          nullable: true
        enable_tax_collection:
          type: boolean
        fallback_plan_id:
          type: string
          nullable: true
        initial_plan_id:
          type: string
          nullable: true
        initial_plan_price_id:
          type: string
          nullable: true
        ordered_add_ons:
          type: array
          items:
            $ref: '#/components/schemas/OrderedPlansInGroup'
        ordered_bundle_list:
          type: array
          items:
            $ref: '#/components/schemas/PlanGroupBundleOrder'
        ordered_plans:
          type: array
          items:
            $ref: '#/components/schemas/OrderedPlansInGroup'
        prevent_downgrades_when_over_limit:
          type: boolean
        show_credits:
          type: boolean
        show_period_toggle:
          type: boolean
        show_zero_price_as_free:
          type: boolean
        sync_customer_billing_details_for_tax:
          type: boolean
        trial_days:
          type: integer
          nullable: true
        trial_expiry_plan_id:
          type: string
          nullable: true
        trial_expiry_plan_price_id:
          type: string
          nullable: true
        trial_payment_method_required:
          type: boolean
          nullable: true
      required:
        - add_on_ids
        - checkout_collect_address
        - checkout_collect_email
        - checkout_collect_phone
        - enable_tax_collection
        - ordered_add_ons
        - ordered_bundle_list
        - ordered_plans
        - prevent_downgrades_when_over_limit
        - show_credits
        - show_period_toggle
        - show_zero_price_as_free
        - sync_customer_billing_details_for_tax
      title: CreatePlanGroupRequestBody
    CreatePlanRequestBody:
      type: object
      properties:
        description:
          type: string
        icon:
          type: string
          nullable: true
        name:
          type: string
        plan_type:
          type: string
          enum:
            - plan
            - add_on
      required:
        - description
        - name
        - plan_type
      title: CreatePlanRequestBody
    CreatePlanTraitRequestBody:
      type: object
      properties:
        plan_id:
          type: string
        trait_id:
          type: string
        trait_value:
          type: string
      required:
        - plan_id
        - trait_id
        - trait_value
      title: CreatePlanTraitRequestBody
    CreatePriceTierRequestBody:
      type: object
      properties:
        flat_amount:
          type: integer
          nullable: true
        per_unit_price:
          type: integer
          nullable: true
        per_unit_price_decimal:
          type: string
          nullable: true
        up_to:
          type: integer
          nullable: true
      title: CreatePriceTierRequestBody
    CreateWebhookRequestBody:
      type: object
      properties:
        credit_trigger_configs:
          type: array
          items:
            $ref: '#/components/schemas/CreditTriggerConfig'
          nullable: true
        entitlement_trigger_configs:
          type: array
          items:
            $ref: '#/components/schemas/EntitlementTriggerConfig'
          nullable: true
        name:
          type: string
        request_types:
          type: array
          items:
            type: string
            enum:
              - company.updated
              - user.updated
              - plan.updated
              - plan.entitlement.updated
              - company.override.updated
              - feature.updated
              - flag.updated
              - flag_rules.updated
              - company.created
              - user.created
              - plan.created
              - plan.entitlement.created
              - company.override.created
              - feature.created
              - flag.created
              - company.deleted
              - user.deleted
              - plan.deleted
              - plan.entitlement.deleted
              - company.override.deleted
              - feature.deleted
              - flag.deleted
              - test.send
              - subscription.trial.ended
              - entitlement.limit.warning
              - entitlement.limit.reached
              - entitlement.soft_limit.warning
              - entitlement.soft_limit.reached
              - entitlement.tier_limit.warning
              - entitlement.tier_limit.reached
              - credit.limit.warning
              - credit.limit.reached
        url:
          type: string
      required:
        - name
        - url
        - request_types
      title: CreateWebhookRequestBody
    CreditBundlePurchaseResponseData:
      type: object
      properties:
        bundle:
          $ref: '#/components/schemas/BillingCreditBundleResponseData'
        quantity:
          type: integer
        total:
          type: integer
      required:
        - quantity
        - total
      title: CreditBundlePurchaseResponseData
    CreditCompanyGrantView:
      type: object
      properties:
        billing_credit_bundle_id:
          type: string
          nullable: true
        billing_credit_id:
          type: string
        company_id:
          type: string
        company_name:
          type: string
        created_at:
          type: string
          format: date-time
        credit_description:
          type: string
        credit_icon:
          type: string
          nullable: true
        credit_name:
          type: string
        expires_at:
          type: string
          format: date-time
          nullable: true
        expiry_type:
          type: string
          nullable: true
        expiry_unit:
          type: string
          nullable: true
        expiry_unit_count:
          type: integer
          nullable: true
        grant_reason:
          type: string
        id:
          type: string
        plan_id:
          type: string
          nullable: true
        plan_name:
          type: string
          nullable: true
        plural_name:
          type: string
          nullable: true
        price:
          $ref: '#/components/schemas/BillingProductPriceResponseData'
        quantity:
          type: integer
        quantity_remaining:
          type: number
        quantity_used:
          type: number
        singular_name:
          type: string
          nullable: true
        source_label:
          type: string
        updated_at:
          type: string
          format: date-time
        valid_from:
          type: string
          format: date-time
          nullable: true
        zeroed_out_date:
          type: string
          format: date-time
          nullable: true
        zeroed_out_reason:
          type: string
          nullable: true
      required:
        - id
        - quantity
        - quantity_remaining
        - quantity_used
        - company_id
        - company_name
        - billing_credit_id
        - credit_name
        - credit_description
        - source_label
        - created_at
        - updated_at
        - grant_reason
      title: CreditCompanyGrantView
    CreditGrantDetail:
      type: object
      properties:
        credit_type_icon:
          type: string
          nullable: true
        expires_at:
          type: string
          format: date-time
          nullable: true
        grant_reason:
          type: string
          enum:
            - free
            - plan
            - purchased
        quantity:
          type: number
      required:
        - grant_reason
        - quantity
      title: CreditGrantDetail
    CreditLedgerEnrichedEntryResponseData:
      type: object
      properties:
        billing_credit_id:
          type: string
        company:
          $ref: '#/components/schemas/CompanyLedgerResponseData'
        company_id:
          type: string
        credit:
          $ref: '#/components/schemas/BillingCreditLedgerResponseData'
        expired_grant_count:
          type: integer
        feature:
          $ref: '#/components/schemas/FeatureLedgerResponseData'
        feature_id:
          type: string
          nullable: true
        first_transaction_at:
          type: string
          format: date-time
        free_grant_count:
          type: integer
        grant_count:
          type: integer
        last_transaction_at:
          type: string
          format: date-time
        manually_zeroed_count:
          type: integer
        net_change:
          type: number
        plan_grant_count:
          type: integer
        purchased_grant_count:
          type: integer
        time_bucket:
          type: string
          format: date-time
        total_consumed:
          type: number
        total_granted:
          type: number
        transaction_count:
          type: integer
        usage_count:
          type: integer
        zeroed_out_count:
          type: integer
      required:
        - company_id
        - billing_credit_id
        - time_bucket
        - total_granted
        - total_consumed
        - net_change
        - transaction_count
        - grant_count
        - usage_count
        - zeroed_out_count
        - first_transaction_at
        - last_transaction_at
        - expired_grant_count
        - manually_zeroed_count
        - plan_grant_count
        - purchased_grant_count
        - free_grant_count
      title: CreditLedgerEnrichedEntryResponseData
    CreditTriggerConfig:
      type: object
      properties:
        credit_id:
          type: string
      required:
        - credit_id
      title: CreditTriggerConfig
    CreditUsage:
      type: object
      properties:
        credit_consumption_rate:
          type: number
          nullable: true
        credit_grant_counts:
          additionalProperties:
            type: number
          type: object
        credit_grant_details:
          type: array
          items:
            $ref: '#/components/schemas/CreditGrantDetail'
        credit_remaining:
          type: number
          nullable: true
        credit_total:
          type: number
          nullable: true
        credit_type_icon:
          type: string
          nullable: true
        credit_type_name:
          type: string
          nullable: true
        credit_used:
          type: number
          nullable: true
      title: CreditUsage
    CreditUsageResponseData:
      type: object
      properties:
        credit_consumption_rate:
          type: number
          nullable: true
        credit_grant_counts:
          additionalProperties:
            type: number
          type: object
        credit_grant_details:
          type: array
          items:
            $ref: '#/components/schemas/CreditGrantDetail'
        credit_remaining:
          type: number
          nullable: true
        credit_total:
          type: number
          nullable: true
        credit_type_icon:
          type: string
          nullable: true
        credit_type_name:
          type: string
          nullable: true
        credit_used:
          type: number
          nullable: true
      required:
        - credit_grant_details
      title: CreditUsageResponseData
    CrmDealLineItem:
      type: object
      properties:
        billing_frequency:
          type: string
        created_at:
          type: string
          format: date-time
        currency:
          type: string
        description:
          type: string
        discount_percentage:
          $ref: '#/components/schemas/Decimal'
        id:
          type: string
        name:
          type: string
        price:
          type: number
        quantity:
          type: integer
        term_month:
          type: integer
          nullable: true
        total_discount:
          $ref: '#/components/schemas/Decimal'
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - price
        - billing_frequency
        - quantity
        - currency
        - description
        - created_at
        - updated_at
      title: CrmDealLineItem
    CrmDealResponseData:
      type: object
      properties:
        account_id:
          type: string
        arr:
          type: string
        company_external_id:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        deal_external_id:
          type: string
        deal_id:
          type: string
        environment_id:
          type: string
        mrr:
          type: string
        name:
          type: string
          nullable: true
        product_external_id:
          type: string
          nullable: true
        updated_at:
          type: string
          format: date-time
      required:
        - deal_id
        - deal_external_id
        - account_id
        - environment_id
        - mrr
        - arr
        - created_at
        - updated_at
      title: CrmDealResponseData
    CrmLineItemResponseData:
      type: object
      properties:
        account_id:
          type: string
        created_at:
          type: string
          format: date-time
        deal_id:
          type: string
          nullable: true
        environment_id:
          type: string
        product_external_id:
          type: string
          nullable: true
        updated_at:
          type: string
          format: date-time
      required:
        - account_id
        - environment_id
        - created_at
        - updated_at
      title: CrmLineItemResponseData
    CrmProductResponseData:
      type: object
      properties:
        account_id:
          type: string
        created_at:
          type: string
          format: date-time
        currency:
          type: string
        environment_id:
          type: string
        external_id:
          type: string
        name:
          type: string
        price:
          type: string
        product_id:
          type: string
        quantity:
          type: number
        updated_at:
          type: string
          format: date-time
      required:
        - product_id
        - external_id
        - account_id
        - environment_id
        - name
        - price
        - currency
        - quantity
        - created_at
        - updated_at
      title: CrmProductResponseData
    CustomPlanConfig:
      type: object
      properties:
        cta_text:
          type: string
        cta_web_site:
          type: string
        price_text:
          type: string
      required:
        - cta_web_site
        - cta_text
        - price_text
      title: CustomPlanConfig
    CustomPlanViewConfigResponseData:
      type: object
      properties:
        cta_text:
          type: string
        cta_web_site:
          type: string
        price_text:
          type: string
      required:
        - cta_web_site
        - cta_text
        - price_text
      title: CustomPlanViewConfigResponseData
    DataExportResponseData:
      type: object
      properties:
        account_id:
          type: string
        created_at:
          type: string
          format: date-time
        environment_id:
          type: string
        export_type:
          type: string
        id:
          type: string
        metadata:
          type: string
        output_file_type:
          type: string
        status:
          type: string
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - account_id
        - environment_id
        - export_type
        - status
        - metadata
        - output_file_type
        - created_at
        - updated_at
      title: DataExportResponseData
    Decimal:
      type: object
      title: Decimal
    DeleteResponse:
      type: object
      properties:
        deleted:
          type: boolean
          description: Whether the delete was successful
    EntitlementTriggerConfig:
      type: object
      properties:
        feature_id:
          type: string
      required:
        - feature_id
      title: EntitlementTriggerConfig
    EntitlementsInPlan:
      type: object
      properties:
        entitlement_id:
          type: string
        visible:
          type: boolean
          nullable: true
      required:
        - entitlement_id
      title: EntitlementsInPlan
    EntityKeyDefinitionResponseData:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        entity_type:
          type: string
        id:
          type: string
        key:
          type: string
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - entity_type
        - key
        - created_at
        - updated_at
      title: EntityKeyDefinitionResponseData
    EntityKeyDetailResponseData:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        definition:
          $ref: '#/components/schemas/EntityKeyDefinitionResponseData'
        definition_id:
          type: string
        entity_id:
          type: string
        entity_type:
          type: string
        environment_id:
          type: string
        id:
          type: string
        key:
          type: string
        updated_at:
          type: string
          format: date-time
        value:
          type: string
      required:
        - id
        - environment_id
        - definition_id
        - entity_type
        - entity_id
        - key
        - value
        - created_at
        - updated_at
      title: EntityKeyDetailResponseData
    EntityKeyResponseData:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        definition_id:
          type: string
        entity_id:
          type: string
        entity_type:
          type: string
        environment_id:
          type: string
        id:
          type: string
        key:
          type: string
        updated_at:
          type: string
          format: date-time
        value:
          type: string
      required:
        - id
        - environment_id
        - definition_id
        - entity_type
        - entity_id
        - key
        - value
        - created_at
        - updated_at
      title: EntityKeyResponseData
    EntityTraitDefinitionResponseData:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        display_name:
          type: string
        entity_type:
          type: string
        hierarchy:
          type: array
          items:
            type: string
        id:
          type: string
        trait_type:
          type: string
        updated_at:
          type: string
          format: date-time
      required:
        - created_at
        - display_name
        - entity_type
        - hierarchy
        - id
        - trait_type
        - updated_at
      title: EntityTraitDefinitionResponseData
    EntityTraitDetailResponseData:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        definition:
          $ref: '#/components/schemas/EntityTraitDefinitionResponseData'
        definition_id:
          type: string
        environment_id:
          type: string
        id:
          type: string
        updated_at:
          type: string
          format: date-time
        value:
          type: string
      required:
        - id
        - environment_id
        - definition_id
        - value
        - created_at
        - updated_at
      title: EntityTraitDetailResponseData
    EntityTraitResponseData:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        definition_id:
          type: string
        environment_id:
          type: string
        id:
          type: string
        updated_at:
          type: string
          format: date-time
        value:
          type: string
      required:
        - id
        - environment_id
        - definition_id
        - value
        - created_at
        - updated_at
      title: EntityTraitResponseData
    EntityTraitValue:
      type: object
      properties:
        definition_id:
          type: string
        value:
          type: string
      required:
        - definition_id
        - value
      title: EntityTraitValue
    EnvironmentDetailResponseData:
      type: object
      properties:
        api_keys:
          type: array
          items:
            $ref: '#/components/schemas/ApiKeyResponseData'
        created_at:
          type: string
          format: date-time
        environment_type:
          type: string
        id:
          type: string
        name:
          type: string
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - environment_type
        - created_at
        - updated_at
        - api_keys
      title: EnvironmentDetailResponseData
    EnvironmentResponseData:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        environment_type:
          type: string
        id:
          type: string
        name:
          type: string
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - environment_type
        - created_at
        - updated_at
      title: EnvironmentResponseData
    EventDetailResponseData:
      type: object
      properties:
        api_key:
          type: string
          nullable: true
        body:
          type: object
        body_preview:
          type: string
        captured_at:
          type: string
          format: date-time
        company:
          $ref: '#/components/schemas/PreviewObject'
        company_id:
          type: string
          nullable: true
        enriched_at:
          type: string
          format: date-time
          nullable: true
        environment_id:
          type: string
          nullable: true
        error_message:
          type: string
          nullable: true
        feature_ids:
          type: array
          items:
            type: string
        features:
          type: array
          items:
            $ref: '#/components/schemas/PreviewObject'
        id:
          type: string
        loaded_at:
          type: string
          format: date-time
          nullable: true
        processed_at:
          type: string
          format: date-time
          nullable: true
        quantity:
          type: integer
        sent_at:
          type: string
          format: date-time
          nullable: true
        status:
          type: string
        subtype:
          type: string
          nullable: true
        type:
          type: string
        updated_at:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/PreviewObject'
        user_id:
          type: string
          nullable: true
      required:
        - body
        - body_preview
        - captured_at
        - type
        - feature_ids
        - id
        - quantity
        - status
        - updated_at
        - features
      title: EventDetailResponseData
    EventResponseData:
      type: object
      properties:
        api_key:
          type: string
          nullable: true
        body:
          type: object
        body_preview:
          type: string
        captured_at:
          type: string
          format: date-time
        company_id:
          type: string
          nullable: true
        enriched_at:
          type: string
          format: date-time
          nullable: true
        environment_id:
          type: string
          nullable: true
        error_message:
          type: string
          nullable: true
        feature_ids:
          type: array
          items:
            type: string
        id:
          type: string
        loaded_at:
          type: string
          format: date-time
          nullable: true
        processed_at:
          type: string
          format: date-time
          nullable: true
        quantity:
          type: integer
        sent_at:
          type: string
          format: date-time
          nullable: true
        status:
          type: string
        subtype:
          type: string
          nullable: true
        type:
          type: string
        updated_at:
          type: string
          format: date-time
        user_id:
          type: string
          nullable: true
      required:
        - body
        - body_preview
        - captured_at
        - type
        - feature_ids
        - id
        - quantity
        - status
        - updated_at
      title: EventResponseData
    EventSummaryResponseData:
      type: object
      properties:
        company_count:
          type: integer
        environment_id:
          type: string
        event_count:
          type: integer
        event_subtype:
          type: string
        last_seen_at:
          type: string
          format: date-time
          nullable: true
        user_count:
          type: integer
      required:
        - company_count
        - environment_id
        - event_count
        - event_subtype
        - user_count
      title: EventSummaryResponseData
    FeatureCompanyResponseData:
      type: object
      properties:
        access:
          type: boolean
          description: Whether further usage is permitted.
        allocation:
          type: integer
          description: The maximum amount of usage that is permitted; a null value indicates that unlimited usage is permitted.
          nullable: true
        allocation_type:
          type: string
          description: The type of allocation that is being used.
          enum:
            - boolean
            - numeric
            - trait
            - unlimited
        company:
          $ref: '#/components/schemas/CompanyDetailResponseData'
        company_override:
          $ref: '#/components/schemas/CompanyOverrideResponseData'
        credit_consumption_rate:
          type: number
          description: The rate at which credits are consumed per unit of usage
          nullable: true
        credit_grant_counts:
          additionalProperties:
            type: number
          type: object
        credit_grant_details:
          type: array
          items:
            $ref: '#/components/schemas/CreditGrantDetail'
        credit_grant_reason:
          type: string
          description: Reason for the credit grant
          nullable: true
          enum:
            - free
            - plan
            - purchased
        credit_remaining:
          type: number
          nullable: true
        credit_total:
          type: number
          nullable: true
        credit_type_icon:
          type: string
          description: Icon identifier for the credit type
          nullable: true
        credit_usage:
          $ref: '#/components/schemas/CreditUsage'
        credit_used:
          type: number
          nullable: true
        effective_limit:
          type: integer
          description: Effective limit for usage calculations. For overage pricing, this is the soft limit where overage charges begin. For tiered pricing, this is the first tier boundary. For other pricing models, this is the base allocation. Used to calculate usage percentages and determine access thresholds.
          nullable: true
        effective_price:
          type: number
          description: Per-unit price for current usage scenario
          nullable: true
        entitlement_expiration_date:
          type: string
          format: date-time
          nullable: true
        entitlement_id:
          type: string
        entitlement_source:
          type: string
          description: Source of the entitlement (plan or company_override)
          nullable: true
        entitlement_type:
          type: string
        feature:
          $ref: '#/components/schemas/FeatureDetailResponseData'
        has_valid_allocation:
          type: boolean
          description: Whether a valid allocation exists
          nullable: true
        is_unlimited:
          type: boolean
          description: Whether this is an unlimited allocation
          nullable: true
        metric_reset_at:
          type: string
          description: The time at which the metric will reset.
          format: date-time
          nullable: true
        month_reset:
          type: string
          description: If the period is current_month, when the month resets.
          nullable: true
        monthly_usage_based_price:
          $ref: '#/components/schemas/BillingPriceView'
        overuse:
          type: integer
          description: Amount of usage exceeding soft limit (overage pricing only)
          nullable: true
        percent_used:
          type: number
          description: Percentage of allocation consumed (0-100+)
          nullable: true
        period:
          type: string
          description: The period over which usage is measured.
          nullable: true
        plan:
          $ref: '#/components/schemas/PlanResponseData'
        plan_entitlement:
          $ref: '#/components/schemas/PlanEntitlementResponseData'
        price_behavior:
          type: string
          nullable: true
        soft_limit:
          type: integer
          description: The soft limit for the feature usage. Available only for overage price behavior
          nullable: true
        usage:
          type: integer
          description: The amount of usage that has been consumed; a null value indicates that usage is not being measured.
          nullable: true
        yearly_usage_based_price:
          $ref: '#/components/schemas/BillingPriceView'
      required:
        - access
        - allocation_type
        - entitlement_id
        - entitlement_type
      title: FeatureCompanyResponseData
    FeatureCompanyUserResponseData:
      type: object
      properties:
        access:
          type: boolean
          description: Whether further usage is permitted.
        allocation:
          type: integer
          description: The maximum amount of usage that is permitted; a null value indicates that unlimited usage is permitted.
          nullable: true
        allocation_type:
          type: string
          description: The type of allocation that is being used.
          enum:
            - boolean
            - numeric
            - trait
            - unlimited
            - unknown
        company:
          $ref: '#/components/schemas/CompanyDetailResponseData'
        entitlement_id:
          type: string
        entitlement_type:
          type: string
        feature:
          $ref: '#/components/schemas/FeatureDetailResponseData'
        metric_reset_at:
          type: string
          description: The time at which the metric will resets.
          format: date-time
          nullable: true
        month_reset:
          type: string
          description: If the period is current_month, when the month resets.
          nullable: true
        period:
          type: string
          description: The period over which usage is measured.
          nullable: true
        plan:
          $ref: '#/components/schemas/PlanResponseData'
        usage:
          type: integer
          description: The amount of usage that has been consumed; a null value indicates that usage is not being measured.
          nullable: true
        user:
          $ref: '#/components/schemas/UserResponseData'
      required:
        - access
        - allocation_type
        - entitlement_id
        - entitlement_type
      title: FeatureCompanyUserResponseData
    FeatureDetailResponseData:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        description:
          type: string
        event_subtype:
          type: string
          nullable: true
        event_summary:
          $ref: '#/components/schemas/EventSummaryResponseData'
        feature_type:
          type: string
        flags:
          type: array
          items:
            $ref: '#/components/schemas/FlagDetailResponseData'
        icon:
          type: string
        id:
          type: string
        lifecycle_phase:
          type: string
          nullable: true
        maintainer_id:
          type: string
          nullable: true
        name:
          type: string
        plans:
          type: array
          items:
            $ref: '#/components/schemas/PreviewObject'
        plural_name:
          type: string
          nullable: true
        singular_name:
          type: string
          nullable: true
        trait:
          $ref: '#/components/schemas/EntityTraitDefinitionResponseData'
        trait_id:
          type: string
          nullable: true
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - description
        - feature_type
        - icon
        - created_at
        - updated_at
        - flags
        - plans
      title: FeatureDetailResponseData
    FeatureLedgerResponseData:
      type: object
      properties:
        description:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
      title: FeatureLedgerResponseData
    FeatureResponseData:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        description:
          type: string
        event_subtype:
          type: string
          nullable: true
        feature_type:
          type: string
        icon:
          type: string
        id:
          type: string
        lifecycle_phase:
          type: string
          nullable: true
        maintainer_id:
          type: string
          nullable: true
        name:
          type: string
        plural_name:
          type: string
          nullable: true
        singular_name:
          type: string
          nullable: true
        trait_id:
          type: string
          nullable: true
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - description
        - feature_type
        - icon
        - created_at
        - updated_at
      title: FeatureResponseData
    FeatureUsageDataResponseData:
      type: object
      properties:
        credit_type_id:
          type: string
          nullable: true
        credit_usage:
          $ref: '#/components/schemas/CreditUsageResponseData'
        entitlement_source:
          type: string
        entitlement_value_type:
          type: string
        feature_id:
          type: string
        feature_name:
          type: string
        feature_type:
          type: string
        hard_limit:
          type: string
        has_access:
          type: boolean
        metric_reset_at:
          type: string
          format: date-time
          nullable: true
        monthly_usage_based_price:
          $ref: '#/components/schemas/BillingPriceView'
        price_behavior:
          type: string
          nullable: true
        soft_limit:
          type: string
        usage:
          type: string
        value_numeric:
          type: integer
          nullable: true
        yearly_usage_based_price:
          $ref: '#/components/schemas/BillingPriceView'
      required:
        - entitlement_source
        - entitlement_value_type
        - feature_id
        - feature_name
        - feature_type
        - hard_limit
        - has_access
        - soft_limit
        - usage
      title: FeatureUsageDataResponseData
    FeatureUsageDetailResponseData:
      type: object
      properties:
        features:
          type: array
          items:
            $ref: '#/components/schemas/FeatureUsageResponseData'
      required:
        - features
      title: FeatureUsageDetailResponseData
    FeatureUsageResponseData:
      type: object
      properties:
        access:
          type: boolean
          description: Whether further usage is permitted.
        allocation:
          type: integer
          description: The maximum amount of usage that is permitted; a null value indicates that unlimited usage is permitted.
          nullable: true
        allocation_type:
          type: string
          description: The type of allocation that is being used.
          enum:
            - boolean
            - numeric
            - trait
            - unlimited
        company_override:
          $ref: '#/components/schemas/CompanyOverrideResponseData'
        credit_consumption_rate:
          type: number
          description: The rate at which credits are consumed per unit of usage
          nullable: true
        credit_grant_counts:
          additionalProperties:
            type: number
          type: object
        credit_grant_details:
          type: array
          items:
            $ref: '#/components/schemas/CreditGrantDetail'
        credit_grant_reason:
          type: string
          description: Reason for the credit grant
          nullable: true
          enum:
            - free
            - plan
            - purchased
        credit_remaining:
          type: number
          nullable: true
        credit_total:
          type: number
          nullable: true
        credit_type_icon:
          type: string
          description: Icon identifier for the credit type
          nullable: true
        credit_used:
          type: number
          nullable: true
        effective_limit:
          type: integer
          description: Effective limit for usage calculations. For overage pricing, this is the soft limit where overage charges begin. For tiered pricing, this is the first tier boundary. For other pricing models, this is the base allocation. Used to calculate usage percentages and determine access thresholds.
          nullable: true
        effective_price:
          type: number
          description: Per-unit price for current usage scenario
          nullable: true
        entitlement_expiration_date:
          type: string
          format: date-time
          nullable: true
        entitlement_id:
          type: string
        entitlement_source:
          type: string
          description: Source of the entitlement (plan or company_override)
          nullable: true
        entitlement_type:
          type: string
        feature:
          $ref: '#/components/schemas/FeatureDetailResponseData'
        has_valid_allocation:
          type: boolean
          description: Whether a valid allocation exists
          nullable: true
        is_unlimited:
          type: boolean
          description: Whether this is an unlimited allocation
          nullable: true
        metric_reset_at:
          type: string
          description: The time at which the metric will reset.
          format: date-time
          nullable: true
        month_reset:
          type: string
          description: If the period is current_month, when the month resets.
          nullable: true
        monthly_usage_based_price:
          $ref: '#/components/schemas/BillingPriceView'
        overuse:
          type: integer
          description: Amount of usage exceeding soft limit (overage pricing only)
          nullable: true
        percent_used:
          type: number
          description: Percentage of allocation consumed (0-100+)
          nullable: true
        period:
          type: string
          description: The period over which usage is measured.
          nullable: true
        plan:
          $ref: '#/components/schemas/PlanResponseData'
        plan_entitlement:
          $ref: '#/components/schemas/PlanEntitlementResponseData'
        price_behavior:
          type: string
          nullable: true
        soft_limit:
          type: integer
          description: The soft limit for the feature usage. Available only for overage price behavior
          nullable: true
        usage:
          type: integer
          description: The amount of usage that has been consumed; a null value indicates that usage is not being measured.
          nullable: true
        yearly_usage_based_price:
          $ref: '#/components/schemas/BillingPriceView'
      required:
        - access
        - allocation_type
        - entitlement_id
        - entitlement_type
      title: FeatureUsageResponseData
    FlagDetailResponseData:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        default_value:
          type: boolean
        description:
          type: string
        feature:
          $ref: '#/components/schemas/FeatureResponseData'
        feature_id:
          type: string
          nullable: true
        flag_type:
          type: string
        id:
          type: string
        key:
          type: string
        last_checked_at:
          type: string
          format: date-time
          nullable: true
        maintainer_id:
          type: string
          nullable: true
        name:
          type: string
        rules:
          type: array
          items:
            $ref: '#/components/schemas/RuleDetailResponseData'
        updated_at:
          type: string
          format: date-time
      required:
        - created_at
        - default_value
        - description
        - flag_type
        - id
        - key
        - name
        - updated_at
        - rules
      title: FlagDetailResponseData
    FlagResponseData:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        default_value:
          type: boolean
        description:
          type: string
        feature_id:
          type: string
          nullable: true
        flag_type:
          type: string
        id:
          type: string
        key:
          type: string
        maintainer_id:
          type: string
          nullable: true
        name:
          type: string
        updated_at:
          type: string
          format: date-time
      required:
        - created_at
        - default_value
        - description
        - flag_type
        - id
        - key
        - name
        - updated_at
      title: FlagResponseData
    GenericPreviewObject:
      type: object
      properties:
        description:
          type: string
          nullable: true
        id:
          type: string
        image_url:
          type: string
          nullable: true
        name:
          type: string
      required:
        - id
        - name
      title: GenericPreviewObject
    GetOrCreateCompanyMembershipRequestBody:
      type: object
      properties:
        company_id:
          type: string
        user_id:
          type: string
      required:
        - company_id
        - user_id
      title: GetOrCreateCompanyMembershipRequestBody
    InvoiceRequestBody:
      type: object
      properties:
        amount_due:
          type: integer
        amount_paid:
          type: integer
        amount_remaining:
          type: integer
        collection_method:
          type: string
        currency:
          type: string
        customer_external_id:
          type: string
        due_date:
          type: string
          format: date-time
          nullable: true
        payment_method_external_id:
          type: string
          nullable: true
        subscription_external_id:
          type: string
          nullable: true
        subtotal:
          type: integer
        url:
          type: string
          nullable: true
      required:
        - amount_due
        - amount_paid
        - amount_remaining
        - collection_method
        - currency
        - customer_external_id
        - subtotal
      title: InvoiceRequestBody
    InvoiceResponseData:
      type: object
      properties:
        amount_due:
          type: integer
        amount_paid:
          type: integer
        amount_remaining:
          type: integer
        collection_method:
          type: string
        company_id:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        currency:
          type: string
        customer_external_id:
          type: string
        due_date:
          type: string
          format: date-time
          nullable: true
        environment_id:
          type: string
        external_id:
          type: string
          nullable: true
        id:
          type: string
        payment_method_external_id:
          type: string
          nullable: true
        subscription_external_id:
          type: string
          nullable: true
        subtotal:
          type: integer
        updated_at:
          type: string
          format: date-time
        url:
          type: string
          nullable: true
      required:
        - id
        - environment_id
        - customer_external_id
        - created_at
        - updated_at
        - amount_due
        - amount_paid
        - amount_remaining
        - collection_method
        - currency
        - subtotal
      title: InvoiceResponseData
    IssueTemporaryAccessTokenRequestBody:
      type: object
      properties:
        lookup:
          additionalProperties:
            type: string
          type: object
        resource_type:
          type: string
          enum:
            - company
      required:
        - resource_type
        - lookup
      title: IssueTemporaryAccessTokenRequestBody
    IssueTemporaryAccessTokenResponseData:
      type: object
      properties:
        api_key_id:
          type: string
        created_at:
          type: string
          format: date-time
        environment_id:
          type: string
        expired_at:
          type: string
          format: date-time
        id:
          type: string
        resource_type:
          type: string
        token:
          type: string
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - environment_id
        - resource_type
        - api_key_id
        - expired_at
        - created_at
        - updated_at
        - token
      title: IssueTemporaryAccessTokenResponseData
    KeysRequestBody:
      type: object
      properties:
        keys:
          additionalProperties:
            type: string
          type: object
      required:
        - keys
      title: KeysRequestBody
    ManagePlanPreviewResponseResponseData:
      type: object
      properties:
        subscription_change_preview:
          $ref: '#/components/schemas/PreviewSubscriptionChangeResponseData'
      title: ManagePlanPreviewResponseResponseData
    ManagePlanRequest:
      type: object
      properties:
        add_on_selections:
          type: array
          items:
            $ref: '#/components/schemas/PlanSelection'
        base_plan_id:
          type: string
          nullable: true
        base_plan_price_id:
          type: string
          nullable: true
        company_id:
          type: string
        coupon_external_id:
          type: string
          nullable: true
        credit_bundles:
          type: array
          items:
            $ref: '#/components/schemas/UpdateCreditBundleRequestBody'
        pay_in_advance_entitlements:
          type: array
          items:
            $ref: '#/components/schemas/UpdatePayInAdvanceRequestBody'
        payment_method_external_id:
          type: string
          nullable: true
        promo_code:
          type: string
          nullable: true
      required:
        - add_on_selections
        - company_id
        - credit_bundles
        - pay_in_advance_entitlements
      title: ManagePlanRequest
    ManagePlanResponseResponseData:
      type: object
      properties:
        company:
          $ref: '#/components/schemas/CompanyDetailResponseData'
        success:
          type: boolean
      required:
        - success
      title: ManagePlanResponseResponseData
    MeterRequestBody:
      type: object
      properties:
        display_name:
          type: string
        event_name:
          type: string
        event_payload_key:
          type: string
      required:
        - display_name
        - event_name
        - event_payload_key
      title: MeterRequestBody
    OrderedPlansInGroup:
      type: object
      properties:
        entitlements:
          type: array
          items:
            $ref: '#/components/schemas/EntitlementsInPlan'
          nullable: true
        plan_id:
          type: string
      required:
        - plan_id
      title: OrderedPlansInGroup
    PaginationFilter:
      type: object
      properties:
        limit:
          type: integer
          description: Page limit (default 100)
          nullable: true
          example: "100"
        offset:
          type: integer
          description: Page offset (default 0)
          nullable: true
          example: "0"
      title: PaginationFilter
    PaymentMethodRequestBody:
      type: object
      properties:
        account_last4:
          type: string
          nullable: true
        account_name:
          type: string
          nullable: true
        bank_name:
          type: string
          nullable: true
        billing_email:
          type: string
          nullable: true
        billing_name:
          type: string
          nullable: true
        card_brand:
          type: string
          nullable: true
        card_exp_month:
          type: integer
          nullable: true
        card_exp_year:
          type: integer
          nullable: true
        card_last4:
          type: string
          nullable: true
        customer_external_id:
          type: string
        payment_method_type:
          type: string
      required:
        - customer_external_id
        - payment_method_type
      title: PaymentMethodRequestBody
    PaymentMethodResponseData:
      type: object
      properties:
        account_last4:
          type: string
          nullable: true
        account_name:
          type: string
          nullable: true
        bank_name:
          type: string
          nullable: true
        billing_email:
          type: string
          nullable: true
        billing_name:
          type: string
          nullable: true
        card_brand:
          type: string
          nullable: true
        card_exp_month:
          type: integer
          nullable: true
        card_exp_year:
          type: integer
          nullable: true
        card_last4:
          type: string
          nullable: true
        company_id:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        customer_external_id:
          type: string
        environment_id:
          type: string
        external_id:
          type: string
        id:
          type: string
        payment_method_type:
          type: string
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - environment_id
        - customer_external_id
        - external_id
        - created_at
        - updated_at
        - payment_method_type
      title: PaymentMethodResponseData
    PlanAudienceDetailResponseData:
      type: object
      properties:
        condition_groups:
          type: array
          items:
            $ref: '#/components/schemas/RuleConditionGroupDetailResponseData'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/RuleConditionDetailResponseData'
        created_at:
          type: string
          format: date-time
        environment_id:
          type: string
        flag_id:
          type: string
          nullable: true
        id:
          type: string
        name:
          type: string
        plan_id:
          type: string
          nullable: true
        priority:
          type: integer
        rule_type:
          type: string
        updated_at:
          type: string
          format: date-time
        value:
          type: boolean
      required:
        - id
        - environment_id
        - priority
        - name
        - rule_type
        - value
        - created_at
        - updated_at
        - conditions
        - condition_groups
      title: PlanAudienceDetailResponseData
    PlanAudienceResponseData:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        environment_id:
          type: string
        flag_id:
          type: string
          nullable: true
        id:
          type: string
        name:
          type: string
        plan_id:
          type: string
          nullable: true
        priority:
          type: integer
        rule_type:
          type: string
        updated_at:
          type: string
          format: date-time
        value:
          type: boolean
      required:
        - id
        - environment_id
        - priority
        - name
        - rule_type
        - value
        - created_at
        - updated_at
      title: PlanAudienceResponseData
    PlanCreditGrantView:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        credit_amount:
          type: integer
        credit_description:
          type: string
        credit_icon:
          type: string
          nullable: true
        credit_id:
          type: string
        credit_name:
          type: string
        expiry_type:
          type: string
          nullable: true
        expiry_unit:
          type: string
          nullable: true
        expiry_unit_count:
          type: integer
          nullable: true
        id:
          type: string
        plan_id:
          type: string
        plan_name:
          type: string
        plural_name:
          type: string
          nullable: true
        reset_cadence:
          type: string
        reset_start:
          type: string
        reset_type:
          type: string
        singular_name:
          type: string
          nullable: true
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - credit_id
        - plan_id
        - plan_name
        - credit_amount
        - credit_name
        - credit_description
        - reset_cadence
        - reset_start
        - reset_type
        - created_at
        - updated_at
      title: PlanCreditGrantView
    PlanDetailResponseData:
      type: object
      properties:
        audience_type:
          type: string
          nullable: true
        billing_product:
          $ref: '#/components/schemas/BillingProductDetailResponseData'
        charge_type:
          type: string
        company_count:
          type: integer
        controlled_by:
          type: string
        created_at:
          type: string
          format: date-time
        description:
          type: string
        features:
          type: array
          items:
            $ref: '#/components/schemas/FeatureDetailResponseData'
        icon:
          type: string
        id:
          type: string
        included_credit_grants:
          type: array
          items:
            $ref: '#/components/schemas/BillingPlanCreditGrantResponseData'
        is_default:
          type: boolean
          deprecated: true
        is_free:
          type: boolean
        is_trialable:
          type: boolean
        monthly_price:
          $ref: '#/components/schemas/BillingPriceResponseData'
        name:
          type: string
        one_time_price:
          $ref: '#/components/schemas/BillingPriceResponseData'
        plan_type:
          type: string
        trial_days:
          type: integer
          nullable: true
        updated_at:
          type: string
          format: date-time
        yearly_price:
          $ref: '#/components/schemas/BillingPriceResponseData'
      required:
        - created_at
        - description
        - id
        - icon
        - name
        - plan_type
        - updated_at
        - charge_type
        - company_count
        - features
        - is_default
        - is_trialable
        - controlled_by
        - is_free
      title: PlanDetailResponseData
    PlanEntitlementResponseData:
      type: object
      properties:
        billing_threshold:
          type: integer
          nullable: true
        consumption_rate:
          type: number
          nullable: true
        created_at:
          type: string
          format: date-time
        environment_id:
          type: string
        feature:
          $ref: '#/components/schemas/FeatureResponseData'
        feature_id:
          type: string
        id:
          type: string
        metered_monthly_price:
          $ref: '#/components/schemas/BillingPriceView'
        metered_yearly_price:
          $ref: '#/components/schemas/BillingPriceView'
        metric_period:
          type: string
          nullable: true
        metric_period_month_reset:
          type: string
          nullable: true
        plan:
          $ref: '#/components/schemas/PlanResponseData'
        plan_id:
          type: string
        price_behavior:
          type: string
          nullable: true
        rule_id:
          type: string
        rule_id_usage_exceeded:
          type: string
          nullable: true
        soft_limit:
          type: integer
          nullable: true
        updated_at:
          type: string
          format: date-time
        usage_based_product:
          $ref: '#/components/schemas/BillingProductResponseData'
        value_bool:
          type: boolean
          nullable: true
        value_credit:
          $ref: '#/components/schemas/BillingCreditResponseData'
        value_numeric:
          type: integer
          nullable: true
        value_trait:
          $ref: '#/components/schemas/EntityTraitDefinitionResponseData'
        value_trait_id:
          type: string
          nullable: true
        value_type:
          type: string
      required:
        - created_at
        - environment_id
        - feature_id
        - id
        - plan_id
        - rule_id
        - updated_at
        - value_type
      title: PlanEntitlementResponseData
    PlanEntitlementsOrder:
      type: object
      properties:
        plan_entitlement_id:
          type: string
        visible:
          type: boolean
          nullable: true
      required:
        - plan_entitlement_id
      title: PlanEntitlementsOrder
    PlanGroupBundleOrder:
      type: object
      properties:
        bundleId:
          type: string
      required:
        - bundleId
      title: PlanGroupBundleOrder
    PlanGroupDetailResponseData:
      type: object
      properties:
        add_ons:
          type: array
          items:
            $ref: '#/components/schemas/PlanGroupPlanDetailResponseData'
        checkout_settings:
          $ref: '#/components/schemas/CheckoutSettingsResponseData'
        custom_plan_config:
          $ref: '#/components/schemas/CustomPlanViewConfigResponseData'
        custom_plan_id:
          type: string
          nullable: true
        default_plan:
          $ref: '#/components/schemas/PlanGroupPlanDetailResponseData'
        default_plan_id:
          type: string
          nullable: true
        fallback_plan:
          $ref: '#/components/schemas/PlanGroupPlanDetailResponseData'
        fallback_plan_id:
          type: string
          nullable: true
        id:
          type: string
        initial_plan:
          $ref: '#/components/schemas/PlanGroupPlanDetailResponseData'
        initial_plan_id:
          type: string
          nullable: true
        initial_plan_price:
          $ref: '#/components/schemas/BillingPriceResponseData'
        initial_plan_price_id:
          type: string
          nullable: true
        ordered_add_on_list:
          type: array
          items:
            $ref: '#/components/schemas/PlanGroupPlanEntitlementsOrder'
        ordered_bundle_list:
          type: array
          items:
            $ref: '#/components/schemas/PlanGroupBundleOrder'
        ordered_plan_list:
          type: array
          items:
            $ref: '#/components/schemas/PlanGroupPlanEntitlementsOrder'
        plans:
          type: array
          items:
            $ref: '#/components/schemas/PlanGroupPlanDetailResponseData'
        prevent_downgrades_when_over_limit:
          type: boolean
        show_credits:
          type: boolean
        show_period_toggle:
          type: boolean
        show_zero_price_as_free:
          type: boolean
        sync_customer_billing_details_for_tax:
          type: boolean
        tax_collection_enabled:
          type: boolean
        trial_days:
          type: integer
          nullable: true
        trial_expiry_plan:
          $ref: '#/components/schemas/PlanGroupPlanDetailResponseData'
        trial_expiry_plan_id:
          type: string
          nullable: true
        trial_expiry_plan_price:
          $ref: '#/components/schemas/BillingPriceResponseData'
        trial_expiry_plan_price_id:
          type: string
          nullable: true
        trial_payment_method_required:
          type: boolean
          nullable: true
      required:
        - add_ons
        - id
        - plans
        - ordered_plan_list
        - ordered_bundle_list
        - ordered_add_on_list
        - show_period_toggle
        - show_credits
        - show_zero_price_as_free
        - checkout_settings
        - tax_collection_enabled
        - sync_customer_billing_details_for_tax
        - prevent_downgrades_when_over_limit
      title: PlanGroupDetailResponseData
    PlanGroupPlanDetailResponseData:
      type: object
      properties:
        audience_type:
          type: string
          nullable: true
        billing_product:
          $ref: '#/components/schemas/BillingProductDetailResponseData'
        charge_type:
          type: string
        company_count:
          type: integer
        compatible_plan_ids:
          type: array
          items:
            type: string
        controlled_by:
          type: string
        created_at:
          type: string
          format: date-time
        custom_plan_config:
          $ref: '#/components/schemas/CustomPlanViewConfigResponseData'
        description:
          type: string
        entitlements:
          type: array
          items:
            $ref: '#/components/schemas/PlanEntitlementResponseData'
        features:
          type: array
          items:
            $ref: '#/components/schemas/FeatureDetailResponseData'
        icon:
          type: string
        id:
          type: string
        included_credit_grants:
          type: array
          items:
            $ref: '#/components/schemas/BillingPlanCreditGrantResponseData'
        is_custom:
          type: boolean
        is_default:
          type: boolean
          deprecated: true
        is_free:
          type: boolean
        is_trialable:
          type: boolean
        monthly_price:
          $ref: '#/components/schemas/BillingPriceResponseData'
        name:
          type: string
        one_time_price:
          $ref: '#/components/schemas/BillingPriceResponseData'
        plan_type:
          type: string
        trial_days:
          type: integer
          nullable: true
        updated_at:
          type: string
          format: date-time
        yearly_price:
          $ref: '#/components/schemas/BillingPriceResponseData'
      required:
        - created_at
        - description
        - id
        - icon
        - name
        - plan_type
        - updated_at
        - charge_type
        - company_count
        - features
        - is_default
        - is_trialable
        - controlled_by
        - is_free
        - is_custom
        - entitlements
        - compatible_plan_ids
      title: PlanGroupPlanDetailResponseData
    PlanGroupPlanEntitlementsOrder:
      type: object
      properties:
        entitlements:
          type: array
          items:
            $ref: '#/components/schemas/PlanEntitlementsOrder'
          nullable: true
        plan_id:
          type: string
      required:
        - plan_id
      title: PlanGroupPlanEntitlementsOrder
    PlanGroupResponseData:
      type: object
      properties:
        add_on_compatibilities:
          type: array
          items:
            $ref: '#/components/schemas/CompatiblePlansResponseData'
        add_on_ids:
          type: array
          items:
            type: string
        checkout_settings:
          $ref: '#/components/schemas/CheckoutSettingsResponseData'
        default_plan_id:
          type: string
          nullable: true
        fallback_plan_id:
          type: string
          nullable: true
        id:
          type: string
        initial_plan_id:
          type: string
          nullable: true
        initial_plan_price_id:
          type: string
          nullable: true
        ordered_add_on_ids:
          type: array
          items:
            $ref: '#/components/schemas/OrderedPlansInGroup'
        plan_ids:
          type: array
          items:
            $ref: '#/components/schemas/OrderedPlansInGroup'
        prevent_downgrades_when_over_limit:
          type: boolean
        show_credits:
          type: boolean
        show_period_toggle:
          type: boolean
        show_zero_price_as_free:
          type: boolean
        sync_customer_billing_details_for_tax:
          type: boolean
        tax_collection_enabled:
          type: boolean
        trial_days:
          type: integer
          nullable: true
        trial_expiry_plan_id:
          type: string
          nullable: true
        trial_expiry_plan_price_id:
          type: string
          nullable: true
        trial_payment_method_required:
          type: boolean
          nullable: true
      required:
        - id
        - add_on_ids
        - plan_ids
        - ordered_add_on_ids
        - add_on_compatibilities
        - show_period_toggle
        - show_credits
        - show_zero_price_as_free
        - checkout_settings
        - tax_collection_enabled
        - sync_customer_billing_details_for_tax
        - prevent_downgrades_when_over_limit
      title: PlanGroupResponseData
    PlanIssueResponseData:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        detail:
          type: string
        id:
          type: string
      required:
        - code
        - description
      title: PlanIssueResponseData
    PlanResponseData:
      type: object
      properties:
        audience_type:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        description:
          type: string
        icon:
          type: string
        id:
          type: string
        name:
          type: string
        plan_type:
          type: string
        updated_at:
          type: string
          format: date-time
      required:
        - created_at
        - description
        - id
        - icon
        - name
        - plan_type
        - updated_at
      title: PlanResponseData
    PlanSelection:
      type: object
      properties:
        plan_id:
          type: string
        price_id:
          type: string
          nullable: true
      required:
        - plan_id
      title: PlanSelection
    PlanTraitResponseData:
      type: object
      properties:
        account_id:
          type: string
        created_at:
          type: string
          format: date-time
        environment_id:
          type: string
        id:
          type: string
        plan_id:
          type: string
        plan_type:
          type: string
        trait_id:
          type: string
        trait_value:
          type: string
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - account_id
        - environment_id
        - plan_id
        - plan_type
        - trait_id
        - trait_value
        - created_at
        - updated_at
      title: PlanTraitResponseData
    PreviewObject:
      type: object
      properties:
        description:
          type: string
          nullable: true
        id:
          type: string
        image_url:
          type: string
          nullable: true
        name:
          type: string
      required:
        - id
        - name
      title: PreviewObject
    PreviewObjectResponseData:
      type: object
      properties:
        description:
          type: string
          nullable: true
        id:
          type: string
        image_url:
          type: string
          nullable: true
        name:
          type: string
      required:
        - id
        - name
      title: PreviewObjectResponseData
    PreviewSubscriptionChangeResponseData:
      type: object
      properties:
        amount_off:
          type: integer
          deprecated: true
        due_now:
          type: integer
          deprecated: true
        finance:
          $ref: '#/components/schemas/PreviewSubscriptionFinanceResponseData'
        new_charges:
          type: integer
          deprecated: true
        payment_method_required:
          type: boolean
        percent_off:
          type: number
          deprecated: true
        period_start:
          type: string
          format: date-time
          deprecated: true
        promo_code_applied:
          type: boolean
          deprecated: true
        proration:
          type: integer
          deprecated: true
        trial_end:
          type: string
          format: date-time
          nullable: true
          deprecated: true
        usage_violations:
          type: array
          items:
            $ref: '#/components/schemas/FeatureUsageResponseData'
      required:
        - due_now
        - new_charges
        - proration
        - period_start
        - promo_code_applied
        - percent_off
        - amount_off
        - payment_method_required
        - usage_violations
      title: PreviewSubscriptionChangeResponseData
    PreviewSubscriptionFinanceResponseData:
      type: object
      properties:
        amount_off:
          type: integer
        due_now:
          type: integer
        new_charges:
          type: integer
        percent_off:
          type: number
        period_start:
          type: string
          format: date-time
        promo_code_applied:
          type: boolean
        proration:
          type: integer
        tax_amount:
          type: integer
          nullable: true
        tax_display_name:
          type: string
          nullable: true
        tax_require_billing_details:
          type: boolean
        trial_end:
          type: string
          format: date-time
          nullable: true
        upcoming_invoice_line_items:
          type: array
          items:
            $ref: '#/components/schemas/PreviewSubscriptionUpcomingInvoiceLineItems'
      required:
        - due_now
        - new_charges
        - proration
        - period_start
        - promo_code_applied
        - upcoming_invoice_line_items
        - percent_off
        - amount_off
        - tax_require_billing_details
      title: PreviewSubscriptionFinanceResponseData
    PreviewSubscriptionUpcomingInvoiceLineItems:
      type: object
      properties:
        amount:
          type: integer
        description:
          type: string
        price_id:
          type: string
        proration:
          type: boolean
        quantity:
          type: integer
      required:
        - price_id
        - quantity
        - proration
        - amount
        - description
      title: PreviewSubscriptionUpcomingInvoiceLineItems
    QuickstartResp:
      type: object
      properties:
        ok:
          type: boolean
      required:
        - ok
      title: QuickstartResp
    RawEventBatchResponseData:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/RawEventResponseData'
      required:
        - events
      title: RawEventBatchResponseData
    RawEventResponseData:
      type: object
      properties:
        captured_at:
          type: string
          format: date-time
        event_id:
          type: string
          nullable: true
        remote_addr:
          type: string
        remote_ip:
          type: string
        user_agent:
          type: string
      required:
        - captured_at
        - remote_addr
        - remote_ip
        - user_agent
      title: RawEventResponseData
    Rule:
      type: object
      properties:
        account_id:
          type: string
        condition_groups:
          type: array
          items:
            $ref: '#/components/schemas/ConditionGroup'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/Condition'
        environment_id:
          type: string
        flag_id:
          type: string
          nullable: true
        id:
          type: string
        name:
          type: string
        priority:
          type: integer
        rule_type:
          type: string
        value:
          type: boolean
      required:
        - id
        - account_id
        - environment_id
        - rule_type
        - name
        - priority
        - conditions
        - condition_groups
        - value
      title: Rule
    RuleConditionDetailResponseData:
      type: object
      properties:
        comparison_trait:
          $ref: '#/components/schemas/EntityTraitDefinitionResponseData'
        comparison_trait_id:
          type: string
          nullable: true
        condition_group_id:
          type: string
          nullable: true
        condition_type:
          type: string
        created_at:
          type: string
          format: date-time
        environment_id:
          type: string
        event_subtype:
          type: string
          nullable: true
        flag_id:
          type: string
          nullable: true
        id:
          type: string
        metric_period:
          type: string
          nullable: true
        metric_period_month_reset:
          type: string
          nullable: true
        metric_value:
          type: integer
          nullable: true
        operator:
          type: string
        plan_id:
          type: string
          nullable: true
        resource_ids:
          type: array
          items:
            type: string
        resources:
          type: array
          items:
            $ref: '#/components/schemas/PreviewObjectResponseData'
        rule_id:
          type: string
        trait:
          $ref: '#/components/schemas/EntityTraitDefinitionResponseData'
        trait_entity_type:
          type: string
          nullable: true
        trait_id:
          type: string
          nullable: true
        trait_value:
          type: string
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - environment_id
        - rule_id
        - condition_type
        - operator
        - created_at
        - updated_at
        - resource_ids
        - trait_value
        - resources
      title: RuleConditionDetailResponseData
    RuleConditionGroupDetailResponseData:
      type: object
      properties:
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/RuleConditionDetailResponseData'
        created_at:
          type: string
          format: date-time
        environment_id:
          type: string
        flag_id:
          type: string
          nullable: true
        id:
          type: string
        plan_id:
          type: string
          nullable: true
        rule_id:
          type: string
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - environment_id
        - rule_id
        - created_at
        - updated_at
        - conditions
      title: RuleConditionGroupDetailResponseData
    RuleConditionGroupResponseData:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        environment_id:
          type: string
        flag_id:
          type: string
          nullable: true
        id:
          type: string
        plan_id:
          type: string
          nullable: true
        rule_id:
          type: string
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - environment_id
        - rule_id
        - created_at
        - updated_at
      title: RuleConditionGroupResponseData
    RuleConditionResponseData:
      type: object
      properties:
        comparison_trait_id:
          type: string
          nullable: true
        condition_group_id:
          type: string
          nullable: true
        condition_type:
          type: string
        created_at:
          type: string
          format: date-time
        environment_id:
          type: string
        event_subtype:
          type: string
          nullable: true
        flag_id:
          type: string
          nullable: true
        id:
          type: string
        metric_period:
          type: string
          nullable: true
        metric_period_month_reset:
          type: string
          nullable: true
        metric_value:
          type: integer
          nullable: true
        operator:
          type: string
        plan_id:
          type: string
          nullable: true
        resource_ids:
          type: array
          items:
            type: string
        rule_id:
          type: string
        trait_entity_type:
          type: string
          nullable: true
        trait_id:
          type: string
          nullable: true
        trait_value:
          type: string
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - environment_id
        - rule_id
        - condition_type
        - operator
        - created_at
        - updated_at
        - resource_ids
        - trait_value
      title: RuleConditionResponseData
    RuleDetailResponseData:
      type: object
      properties:
        condition_groups:
          type: array
          items:
            $ref: '#/components/schemas/RuleConditionGroupDetailResponseData'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/RuleConditionDetailResponseData'
        created_at:
          type: string
          format: date-time
        environment_id:
          type: string
        flag_id:
          type: string
          nullable: true
        id:
          type: string
        name:
          type: string
        plan_id:
          type: string
          nullable: true
        priority:
          type: integer
        rule_type:
          type: string
        updated_at:
          type: string
          format: date-time
        value:
          type: boolean
      required:
        - id
        - environment_id
        - priority
        - name
        - rule_type
        - value
        - created_at
        - updated_at
        - conditions
        - condition_groups
      title: RuleDetailResponseData
    RuleResponseData:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        environment_id:
          type: string
        flag_id:
          type: string
          nullable: true
        id:
          type: string
        name:
          type: string
        plan_id:
          type: string
          nullable: true
        priority:
          type: integer
        rule_type:
          type: string
        updated_at:
          type: string
          format: date-time
        value:
          type: boolean
      required:
        - id
        - environment_id
        - priority
        - name
        - rule_type
        - value
        - created_at
        - updated_at
      title: RuleResponseData
    RulesDetailResponseData:
      type: object
      properties:
        flag:
          $ref: '#/components/schemas/FlagResponseData'
        rules:
          type: array
          items:
            $ref: '#/components/schemas/RuleDetailResponseData'
      required:
        - rules
      title: RulesDetailResponseData
    SegmentStatusResp:
      type: object
      properties:
        connected:
          type: boolean
        environment_id:
          type: string
        last_event_at:
          type: string
          format: date-time
          nullable: true
      required:
        - connected
        - environment_id
      title: SegmentStatusResp
    StripeEmbedInfo:
      type: object
      properties:
        account_id:
          type: string
          nullable: true
        publishable_key:
          type: string
          nullable: true
        schematic_publishable_key:
          type: string
        setup_intent_client_secret:
          type: string
          nullable: true
      required:
        - schematic_publishable_key
      title: StripeEmbedInfo
    TemporaryAccessTokenResponseData:
      type: object
      properties:
        api_key_id:
          type: string
        created_at:
          type: string
          format: date-time
        environment_id:
          type: string
        expired_at:
          type: string
          format: date-time
        id:
          type: string
        resource_type:
          type: string
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - environment_id
        - resource_type
        - api_key_id
        - expired_at
        - created_at
        - updated_at
      title: TemporaryAccessTokenResponseData
    TraitDefinition:
      type: object
      properties:
        comparable_type:
          type: string
        entity_type:
          type: string
        id:
          type: string
      required:
        - id
        - comparable_type
        - entity_type
      title: TraitDefinition
    UpdateAddOnRequestBody:
      type: object
      properties:
        add_on_id:
          type: string
        price_id:
          type: string
      required:
        - add_on_id
        - price_id
      title: UpdateAddOnRequestBody
    UpdateApiKeyRequestBody:
      type: object
      properties:
        description:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      title: UpdateApiKeyRequestBody
    UpdateAudienceRequestBody:
      type: object
      properties:
        condition_groups:
          type: array
          items:
            $ref: '#/components/schemas/CreateOrUpdateConditionGroupRequestBody'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/CreateOrUpdateConditionRequestBody'
      required:
        - conditions
        - condition_groups
      title: UpdateAudienceRequestBody
    UpdateBillingCreditRequestBody:
      type: object
      properties:
        burn_strategy:
          type: string
          nullable: true
          enum:
            - plan_first_then_credit_bundles_first_in_first_out
            - first_in_first_out
            - last_in_first_out
            - expiration_priority
        default_expiry_unit:
          type: string
          nullable: true
          enum:
            - days
        default_expiry_unit_count:
          type: integer
          nullable: true
        default_rollover_policy:
          type: string
          nullable: true
          enum:
            - none
            - rollover
            - expire
        description:
          type: string
        icon:
          type: string
          nullable: true
        name:
          type: string
        per_unit_price:
          type: integer
          nullable: true
        per_unit_price_decimal:
          type: string
          nullable: true
        plural_name:
          type: string
          nullable: true
        singular_name:
          type: string
          nullable: true
      required:
        - name
        - description
      title: UpdateBillingCreditRequestBody
    UpdateCompanyOverrideRequestBody:
      type: object
      properties:
        credit_consumption_rate:
          type: number
          nullable: true
        expiration_date:
          type: string
          format: date-time
          nullable: true
        metric_period:
          type: string
          nullable: true
          enum:
            - all_time
            - current_month
            - current_week
            - current_day
        metric_period_month_reset:
          type: string
          nullable: true
          enum:
            - first_of_month
            - billing_cycle
        note:
          type: string
          nullable: true
        value_bool:
          type: boolean
          nullable: true
        value_credit_id:
          type: string
          nullable: true
        value_numeric:
          type: integer
          nullable: true
        value_trait_id:
          type: string
          nullable: true
        value_type:
          type: string
          enum:
            - boolean
            - credit
            - numeric
            - trait
            - unlimited
      required:
        - value_type
      title: UpdateCompanyOverrideRequestBody
    UpdateCompanyPlansRequestBody:
      type: object
      properties:
        add_on_ids:
          type: array
          items:
            type: string
        base_plan_id:
          type: string
          nullable: true
      required:
        - add_on_ids
      title: UpdateCompanyPlansRequestBody
    UpdateComponentRequestBody:
      type: object
      properties:
        ast:
          additionalProperties:
            type: number
          type: object
        entity_type:
          type: string
          nullable: true
          enum:
            - entitlement
            - billing
        name:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
          enum:
            - draft
            - live
      title: UpdateComponentRequestBody
    UpdateCreditBundleDetailsRequestBody:
      type: object
      properties:
        bundle_name:
          type: string
        expiry_type:
          type: string
          nullable: true
          enum:
            - duration
            - no_expiry
            - end_of_trial
            - end_of_billing_period
            - end_of_next_billing_period
        expiry_unit:
          type: string
          nullable: true
          enum:
            - days
            - billing_periods
        expiry_unit_count:
          type: integer
          nullable: true
        price_per_unit:
          type: integer
        price_per_unit_decimal:
          type: string
          nullable: true
        quantity:
          type: integer
          nullable: true
        status:
          type: string
          nullable: true
          enum:
            - active
            - inactive
      required:
        - bundle_name
        - price_per_unit
      title: UpdateCreditBundleDetailsRequestBody
    UpdateCreditBundleRequestBody:
      type: object
      properties:
        bundle_id:
          type: string
        quantity:
          type: integer
      required:
        - bundle_id
        - quantity
      title: UpdateCreditBundleRequestBody
    UpdateEntitlementReqCommon:
      type: object
      properties:
        credit_consumption_rate:
          type: number
          nullable: true
        metric_period:
          type: string
          nullable: true
          enum:
            - all_time
            - current_month
            - current_week
            - current_day
        metric_period_month_reset:
          type: string
          nullable: true
          enum:
            - first_of_month
            - billing_cycle
        value_bool:
          type: boolean
          nullable: true
        value_credit_id:
          type: string
          nullable: true
        value_numeric:
          type: integer
          nullable: true
        value_trait_id:
          type: string
          nullable: true
        value_type:
          type: string
          enum:
            - boolean
            - credit
            - numeric
            - trait
            - unlimited
      required:
        - value_type
      title: UpdateEntitlementReqCommon
    UpdateEntityTraitDefinitionRequestBody:
      type: object
      properties:
        display_name:
          type: string
          nullable: true
        trait_type:
          type: string
          enum:
            - boolean
            - currency
            - date
            - number
            - string
            - url
      required:
        - trait_type
      title: UpdateEntityTraitDefinitionRequestBody
    UpdateEnvironmentRequestBody:
      type: object
      properties:
        environment_type:
          type: string
          nullable: true
          enum:
            - development
            - staging
            - production
        name:
          type: string
          nullable: true
      title: UpdateEnvironmentRequestBody
    UpdateFeatureRequestBody:
      type: object
      properties:
        description:
          type: string
          nullable: true
        event_subtype:
          type: string
          nullable: true
        feature_type:
          type: string
          nullable: true
          enum:
            - boolean
            - event
            - trait
        flag:
          $ref: '#/components/schemas/CreateOrUpdateFlagRequestBody'
        icon:
          type: string
          nullable: true
        lifecycle_phase:
          type: string
          nullable: true
          enum:
            - add_on
            - alpha
            - beta
            - deprecated
            - ga
            - in_plan
            - inactive
            - internal_testing
            - legacy
        maintainer_id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        plural_name:
          type: string
          nullable: true
        singular_name:
          type: string
          nullable: true
        trait_id:
          type: string
          nullable: true
      title: UpdateFeatureRequestBody
    UpdateFlagRulesRequestBody:
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/CreateOrUpdateRuleRequestBody'
      required:
        - rules
      title: UpdateFlagRulesRequestBody
    UpdatePayInAdvanceRequestBody:
      type: object
      properties:
        price_id:
          type: string
        quantity:
          type: integer
      required:
        - price_id
        - quantity
      title: UpdatePayInAdvanceRequestBody
    UpdatePlanEntitlementRequestBody:
      type: object
      properties:
        billing_product_id:
          type: string
          nullable: true
        billing_threshold:
          type: integer
          nullable: true
        credit_consumption_rate:
          type: number
          nullable: true
        currency:
          type: string
          nullable: true
        metric_period:
          type: string
          nullable: true
          enum:
            - all_time
            - current_month
            - current_week
            - current_day
        metric_period_month_reset:
          type: string
          nullable: true
          enum:
            - first_of_month
            - billing_cycle
        monthly_metered_price_id:
          type: string
          nullable: true
          deprecated: true
        monthly_price_tiers:
          type: array
          items:
            $ref: '#/components/schemas/CreatePriceTierRequestBody'
          nullable: true
        monthly_unit_price:
          type: integer
          nullable: true
        monthly_unit_price_decimal:
          type: string
          nullable: true
        overage_billing_product_id:
          type: string
          nullable: true
          deprecated: true
        price_behavior:
          type: string
          nullable: true
          enum:
            - pay_as_you_go
            - pay_in_advance
            - overage
            - credit_burndown
            - tier
        price_tiers:
          type: array
          description: Use MonthlyPriceTiers or YearlyPriceTiers instead
          items:
            $ref: '#/components/schemas/CreatePriceTierRequestBody'
          nullable: true
          deprecated: true
        soft_limit:
          type: integer
          nullable: true
        tier_mode:
          type: string
          nullable: true
        value_bool:
          type: boolean
          nullable: true
        value_credit_id:
          type: string
          nullable: true
        value_numeric:
          type: integer
          nullable: true
        value_trait_id:
          type: string
          nullable: true
        value_type:
          type: string
          enum:
            - boolean
            - credit
            - numeric
            - trait
            - unlimited
        yearly_metered_price_id:
          type: string
          nullable: true
          deprecated: true
        yearly_price_tiers:
          type: array
          items:
            $ref: '#/components/schemas/CreatePriceTierRequestBody'
          nullable: true
        yearly_unit_price:
          type: integer
          nullable: true
        yearly_unit_price_decimal:
          type: string
          nullable: true
      required:
        - value_type
      title: UpdatePlanEntitlementRequestBody
    UpdatePlanGroupRequestBody:
      type: object
      properties:
        add_on_compatibilities:
          type: array
          items:
            $ref: '#/components/schemas/CompatiblePlans'
          nullable: true
        add_on_ids:
          type: array
          description: Use OrderedAddOns instead
          items:
            type: string
          deprecated: true
        checkout_collect_address:
          type: boolean
        checkout_collect_email:
          type: boolean
        checkout_collect_phone:
          type: boolean
        custom_plan_config:
          $ref: '#/components/schemas/CustomPlanConfig'
        custom_plan_id:
          type: string
          nullable: true
        default_plan_id:
          type: string
          nullable: true
        enable_tax_collection:
          type: boolean
        fallback_plan_id:
          type: string
          nullable: true
        initial_plan_id:
          type: string
          nullable: true
        initial_plan_price_id:
          type: string
          nullable: true
        ordered_add_ons:
          type: array
          items:
            $ref: '#/components/schemas/OrderedPlansInGroup'
        ordered_bundle_list:
          type: array
          items:
            $ref: '#/components/schemas/PlanGroupBundleOrder'
        ordered_plans:
          type: array
          items:
            $ref: '#/components/schemas/OrderedPlansInGroup'
        prevent_downgrades_when_over_limit:
          type: boolean
        show_credits:
          type: boolean
        show_period_toggle:
          type: boolean
        show_zero_price_as_free:
          type: boolean
        sync_customer_billing_details_for_tax:
          type: boolean
        trial_days:
          type: integer
          nullable: true
        trial_expiry_plan_id:
          type: string
          nullable: true
        trial_expiry_plan_price_id:
          type: string
          nullable: true
        trial_payment_method_required:
          type: boolean
          nullable: true
      required:
        - add_on_ids
        - checkout_collect_address
        - checkout_collect_email
        - checkout_collect_phone
        - enable_tax_collection
        - ordered_add_ons
        - ordered_bundle_list
        - ordered_plans
        - prevent_downgrades_when_over_limit
        - show_credits
        - show_period_toggle
        - show_zero_price_as_free
        - sync_customer_billing_details_for_tax
      title: UpdatePlanGroupRequestBody
    UpdatePlanRequestBody:
      type: object
      properties:
        description:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
        name:
          type: string
      required:
        - name
      title: UpdatePlanRequestBody
    UpdatePlanTraitBulkRequestBody:
      type: object
      properties:
        plan_id:
          type: string
        traits:
          type: array
          items:
            $ref: '#/components/schemas/UpdatePlanTraitTraitRequestBody'
      required:
        - plan_id
        - traits
      title: UpdatePlanTraitBulkRequestBody
    UpdatePlanTraitRequestBody:
      type: object
      properties:
        plan_id:
          type: string
        trait_value:
          type: string
      required:
        - plan_id
        - trait_value
      title: UpdatePlanTraitRequestBody
    UpdatePlanTraitTraitRequestBody:
      type: object
      properties:
        trait_id:
          type: string
        trait_value:
          type: string
      required:
        - trait_id
        - trait_value
      title: UpdatePlanTraitTraitRequestBody
    UpdateRuleRequestBody:
      type: object
      properties:
        condition_groups:
          type: array
          items:
            $ref: '#/components/schemas/CreateOrUpdateConditionGroupRequestBody'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/CreateOrUpdateConditionRequestBody'
        name:
          type: string
        priority:
          type: integer
        value:
          type: boolean
      required:
        - condition_groups
        - conditions
        - name
        - priority
        - value
      title: UpdateRuleRequestBody
    UpdateTrialEndRequestBody:
      type: object
      properties:
        trial_end:
          type: string
          format: date-time
          nullable: true
      title: UpdateTrialEndRequestBody
    UpdateWebhookRequestBody:
      type: object
      properties:
        credit_trigger_configs:
          type: array
          items:
            $ref: '#/components/schemas/CreditTriggerConfig'
          nullable: true
        entitlement_trigger_configs:
          type: array
          items:
            $ref: '#/components/schemas/EntitlementTriggerConfig'
          nullable: true
        name:
          type: string
          nullable: true
        request_types:
          type: array
          items:
            type: string
            enum:
              - company.updated
              - user.updated
              - plan.updated
              - plan.entitlement.updated
              - company.override.updated
              - feature.updated
              - flag.updated
              - flag_rules.updated
              - company.created
              - user.created
              - plan.created
              - plan.entitlement.created
              - company.override.created
              - feature.created
              - flag.created
              - company.deleted
              - user.deleted
              - plan.deleted
              - plan.entitlement.deleted
              - company.override.deleted
              - feature.deleted
              - flag.deleted
              - test.send
              - subscription.trial.ended
              - entitlement.limit.warning
              - entitlement.limit.reached
              - entitlement.soft_limit.warning
              - entitlement.soft_limit.reached
              - entitlement.tier_limit.warning
              - entitlement.tier_limit.reached
              - credit.limit.warning
              - credit.limit.reached
          nullable: true
        status:
          type: string
          nullable: true
          enum:
            - active
            - inactive
        url:
          type: string
          nullable: true
      title: UpdateWebhookRequestBody
    UpsertBillingProductRequestBody:
      type: object
      properties:
        billing_product_id:
          type: string
          nullable: true
        charge_type:
          type: string
          enum:
            - one_time
            - recurring
            - free
        currency:
          type: string
          nullable: true
        is_trialable:
          type: boolean
        monthly_price:
          type: integer
          nullable: true
        monthly_price_id:
          type: string
          nullable: true
        one_time_price:
          type: integer
          nullable: true
        one_time_price_id:
          type: string
          nullable: true
        trial_days:
          type: integer
          nullable: true
        yearly_price:
          type: integer
          nullable: true
        yearly_price_id:
          type: string
          nullable: true
      required:
        - charge_type
        - is_trialable
      title: UpsertBillingProductRequestBody
    UpsertCompanyRequestBody:
      type: object
      properties:
        id:
          type: string
          description: If you know the Schematic ID, you can use that here instead of keys
          nullable: true
        keys:
          additionalProperties:
            type: string
          type: object
          description: See [Key Management](https://docs.schematichq.com/developer_resources/key_management) for more information
        last_seen_at:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
          nullable: true
        traits:
          type: object
          description: A map of trait names to trait values
        update_only:
          type: boolean
          nullable: true
      required:
        - keys
      title: UpsertCompanyRequestBody
    UpsertTraitRequestBody:
      type: object
      properties:
        incr:
          type: integer
          description: Amount to increment the trait by (positive or negative)
          nullable: true
        keys:
          additionalProperties:
            type: string
          type: object
          description: Key/value pairs to identify a company or user
        set:
          type: string
          description: Value to set the trait to
          nullable: true
        trait:
          type: string
          description: Name of the trait to update
        update_only:
          type: boolean
          description: Unless this is set, the company or user will be created if it does not already exist
          nullable: true
      required:
        - keys
        - trait
      title: UpsertTraitRequestBody
    UpsertUserRequestBody:
      type: object
      properties:
        companies:
          type: array
          description: Optionally specify companies using array of key/value pairs
          items:
            additionalProperties:
              type: string
            type: object
          nullable: true
        company:
          additionalProperties:
            type: string
          type: object
          description: Add user to this company. Takes priority over companies. For exhaustive list of companies, use companies
          nullable: true
        company_id:
          type: string
          description: Add user to this company. Takes priority over company_ids. For exhaustive list of companies, use company_ids
          nullable: true
        company_ids:
          type: array
          description: Optionally specify companies using Schematic company ID
          items:
            type: string
          nullable: true
        id:
          type: string
          description: If you know the Schematic ID, you can use that here instead of keys
          nullable: true
        keys:
          additionalProperties:
            type: string
          type: object
          description: See [Key Management](https://docs.schematichq.com/developer_resources/key_management) for more information
        last_seen_at:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
          nullable: true
        traits:
          type: object
          description: A map of trait names to trait values
        update_only:
          type: boolean
          nullable: true
      required:
        - keys
      title: UpsertUserRequestBody
    UpsertUserSubRequestBody:
      type: object
      properties:
        company_id:
          type: string
          description: Add user to this company. Takes priority over company_ids. For exhaustive list of companies, use company_ids
          nullable: true
        company_ids:
          type: array
          description: Optionally specify companies using Schematic company ID
          items:
            type: string
          nullable: true
        id:
          type: string
          description: If you know the Schematic ID, you can use that here instead of keys
          nullable: true
        keys:
          additionalProperties:
            type: string
          type: object
          description: See [Key Management](https://docs.schematichq.com/developer_resources/key_management) for more information
        last_seen_at:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
          nullable: true
        traits:
          type: object
          description: A map of trait names to trait values
        update_only:
          type: boolean
          nullable: true
      required:
        - keys
      title: UpsertUserSubRequestBody
    UsageBasedEntitlementRequestBody:
      type: object
      properties:
        billing_product_id:
          type: string
          nullable: true
        billing_threshold:
          type: integer
          nullable: true
        currency:
          type: string
          nullable: true
        monthly_metered_price_id:
          type: string
          nullable: true
          deprecated: true
        monthly_price_tiers:
          type: array
          items:
            $ref: '#/components/schemas/CreatePriceTierRequestBody'
          nullable: true
        monthly_unit_price:
          type: integer
          nullable: true
        monthly_unit_price_decimal:
          type: string
          nullable: true
        overage_billing_product_id:
          type: string
          nullable: true
          deprecated: true
        price_behavior:
          type: string
          nullable: true
          enum:
            - pay_as_you_go
            - pay_in_advance
            - overage
            - credit_burndown
            - tier
        price_tiers:
          type: array
          description: Use MonthlyPriceTiers or YearlyPriceTiers instead
          items:
            $ref: '#/components/schemas/CreatePriceTierRequestBody'
          nullable: true
          deprecated: true
        soft_limit:
          type: integer
          nullable: true
        tier_mode:
          type: string
          nullable: true
        yearly_metered_price_id:
          type: string
          nullable: true
          deprecated: true
        yearly_price_tiers:
          type: array
          items:
            $ref: '#/components/schemas/CreatePriceTierRequestBody'
          nullable: true
        yearly_unit_price:
          type: integer
          nullable: true
        yearly_unit_price_decimal:
          type: string
          nullable: true
      title: UsageBasedEntitlementRequestBody
    UsageBasedEntitlementResponseData:
      type: object
      properties:
        billing_threshold:
          type: integer
          nullable: true
        consumption_rate:
          type: number
          nullable: true
        feature_id:
          type: string
        metered_price:
          $ref: '#/components/schemas/BillingPriceView'
        metric_period:
          type: string
          nullable: true
        metric_period_month_reset:
          type: string
          nullable: true
        monthly_usage_based_price:
          $ref: '#/components/schemas/BillingPriceView'
        price_behavior:
          type: string
          nullable: true
        value_bool:
          type: boolean
          nullable: true
        value_numeric:
          type: integer
          nullable: true
        value_type:
          type: string
        yearly_usage_based_price:
          $ref: '#/components/schemas/BillingPriceView'
      required:
        - feature_id
        - value_type
      title: UsageBasedEntitlementResponseData
    UserDetailResponseData:
      type: object
      properties:
        company_memberships:
          type: array
          items:
            $ref: '#/components/schemas/CompanyMembershipDetailResponseData'
        created_at:
          type: string
          format: date-time
        entity_traits:
          type: array
          items:
            $ref: '#/components/schemas/EntityTraitDetailResponseData'
        environment_id:
          type: string
        id:
          type: string
        keys:
          type: array
          items:
            $ref: '#/components/schemas/EntityKeyDetailResponseData'
        last_seen_at:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
        traits:
          type: object
          description: A map of trait names to trait values
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - environment_id
        - name
        - created_at
        - updated_at
        - keys
        - entity_traits
        - company_memberships
      title: UserDetailResponseData
    UserResponseData:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        environment_id:
          type: string
        id:
          type: string
        last_seen_at:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - environment_id
        - name
        - created_at
        - updated_at
      title: UserResponseData
    WebhookEventDetailResponseData:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        id:
          type: string
        payload:
          type: string
          nullable: true
        request_type:
          type: string
        response_code:
          type: integer
          nullable: true
        sent_at:
          type: string
          format: date-time
          nullable: true
        status:
          type: string
        updated_at:
          type: string
          format: date-time
        webhook:
          $ref: '#/components/schemas/WebhookResponseData'
        webhook_id:
          type: string
      required:
        - id
        - webhook_id
        - request_type
        - status
        - created_at
        - updated_at
      title: WebhookEventDetailResponseData
    WebhookEventResponseData:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        id:
          type: string
        payload:
          type: string
          nullable: true
        request_type:
          type: string
        response_code:
          type: integer
          nullable: true
        sent_at:
          type: string
          format: date-time
          nullable: true
        status:
          type: string
        updated_at:
          type: string
          format: date-time
        webhook_id:
          type: string
      required:
        - id
        - webhook_id
        - request_type
        - status
        - created_at
        - updated_at
      title: WebhookEventResponseData
    WebhookResponseData:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        credit_trigger_configs:
          type: array
          items:
            $ref: '#/components/schemas/CreditTriggerConfig'
          nullable: true
        entitlement_trigger_configs:
          type: array
          items:
            $ref: '#/components/schemas/EntitlementTriggerConfig'
          nullable: true
        id:
          type: string
        name:
          type: string
        request_types:
          type: array
          items:
            type: string
        secret:
          type: string
        status:
          type: string
        updated_at:
          type: string
          format: date-time
        url:
          type: string
      required:
        - created_at
        - id
        - name
        - request_types
        - secret
        - status
        - url
        - updated_at
      title: WebhookResponseData
    ZeroOutGrantRequestBody:
      type: object
      properties:
        reason:
          type: string
          nullable: true
          enum:
            - plan_change
            - manual
            - plan_period_reset
            - expired
      title: ZeroOutGrantRequestBody
paths:
  /api-keys:
    get:
      operationId: listApiKeys
      summary: List api keys
      tags:
        - accounts
      parameters:
        - name: environment_id
          in: query
          schema:
            type: string
        - name: require_environment
          in: query
          required: true
          schema:
            type: boolean
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApiKeyResponseData'
                    title: ListApiKeysResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      environment_id:
                        type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      require_environment:
                        type: boolean
                    title: ListApiKeysParams
                required:
                  - data
                  - params
                title: ListApiKeysResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    post:
      operationId: createApiKey
      summary: Create api key
      tags:
        - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiKeyRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ApiKeyCreateResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: CreateApiKeyParams
                required:
                  - data
                  - params
                title: CreateApiKeyResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /api-keys/{api_key_id}:
    get:
      operationId: getApiKey
      summary: Get api key
      tags:
        - accounts
      parameters:
        - name: api_key_id
          in: path
          description: api_key_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ApiKeyResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: GetApiKeyParams
                required:
                  - data
                  - params
                title: GetApiKeyResponse
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    put:
      operationId: updateApiKey
      summary: Update api key
      tags:
        - accounts
      parameters:
        - name: api_key_id
          in: path
          description: api_key_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApiKeyRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ApiKeyResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpdateApiKeyParams
                required:
                  - data
                  - params
                title: UpdateApiKeyResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    delete:
      operationId: deleteApiKey
      summary: Delete api key
      tags:
        - accounts
      parameters:
        - name: api_key_id
          in: path
          description: api_key_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DeleteResponse'
                  params:
                    type: object
                    description: Input parameters
                    title: DeleteApiKeyParams
                required:
                  - data
                  - params
                title: DeleteApiKeyResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /api-keys/count:
    get:
      operationId: countApiKeys
      summary: Count api keys
      tags:
        - accounts
      parameters:
        - name: environment_id
          in: query
          schema:
            type: string
        - name: require_environment
          in: query
          required: true
          schema:
            type: boolean
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      environment_id:
                        type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      require_environment:
                        type: boolean
                    title: CountApiKeysParams
                required:
                  - data
                  - params
                title: CountApiKeysResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /api-requests:
    get:
      operationId: listApiRequests
      summary: List api requests
      tags:
        - accounts
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: request_type
          in: query
          schema:
            type: string
        - name: environment_id
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApiKeyRequestListResponseData'
                    title: ListApiRequestsResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      environment_id:
                        type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                      request_type:
                        type: string
                    title: ListApiRequestsParams
                required:
                  - data
                  - params
                title: ListApiRequestsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /api-requests/{api_request_id}:
    get:
      operationId: getApiRequest
      summary: Get api request
      tags:
        - accounts
      parameters:
        - name: api_request_id
          in: path
          description: api_request_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ApiKeyRequestResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: GetApiRequestParams
                required:
                  - data
                  - params
                title: GetApiRequestResponse
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /api-requests/count:
    get:
      operationId: countApiRequests
      summary: Count api requests
      tags:
        - accounts
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: request_type
          in: query
          schema:
            type: string
        - name: environment_id
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      environment_id:
                        type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                      request_type:
                        type: string
                    title: CountApiRequestsParams
                required:
                  - data
                  - params
                title: CountApiRequestsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /audience/count-companies:
    post:
      operationId: countAudienceCompanies
      summary: Count audience companies
      tags:
        - features
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudienceRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    title: CountAudienceCompaniesParams
                required:
                  - data
                  - params
                title: CountAudienceCompaniesResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /audience/count-users:
    post:
      operationId: countAudienceUsers
      summary: Count audience users
      tags:
        - features
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudienceRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    title: CountAudienceUsersParams
                required:
                  - data
                  - params
                title: CountAudienceUsersResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /audience/get-companies:
    post:
      operationId: listAudienceCompanies
      summary: List audience companies
      tags:
        - features
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudienceRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CompanyDetailResponseData'
                    title: ListAudienceCompaniesResponseData
                  params:
                    type: object
                    description: Input parameters
                    title: ListAudienceCompaniesParams
                required:
                  - data
                  - params
                title: ListAudienceCompaniesResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /audience/get-users:
    post:
      operationId: listAudienceUsers
      summary: List audience users
      tags:
        - features
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudienceRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserDetailResponseData'
                    title: ListAudienceUsersResponseData
                  params:
                    type: object
                    description: Input parameters
                    title: ListAudienceUsersParams
                required:
                  - data
                  - params
                title: ListAudienceUsersResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/coupons:
    get:
      operationId: listCoupons
      summary: List coupons
      tags:
        - billing
      parameters:
        - name: is_active
          in: query
          schema:
            type: boolean
        - name: q
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BillingCouponResponseData'
                    title: ListCouponsResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      is_active:
                        type: boolean
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                    title: ListCouponsParams
                required:
                  - data
                  - params
                title: ListCouponsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    post:
      operationId: upsertBillingCoupon
      summary: Upsert billing coupon
      tags:
        - billing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCouponRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BillingCouponResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpsertBillingCouponParams
                required:
                  - data
                  - params
                title: UpsertBillingCouponResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/credits:
    get:
      operationId: listBillingCredits
      summary: List billing credits
      tags:
        - credits
      parameters:
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: name
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BillingCreditResponseData'
                    title: ListBillingCreditsResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      name:
                        type: string
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                    title: ListBillingCreditsParams
                required:
                  - data
                  - params
                title: ListBillingCreditsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    post:
      operationId: createBillingCredit
      summary: Create billing credit
      tags:
        - credits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBillingCreditRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BillingCreditResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: CreateBillingCreditParams
                required:
                  - data
                  - params
                title: CreateBillingCreditResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/credits/:credit_id:
    get:
      operationId: getSingleBillingCredit
      summary: Get single billing credit abc123
      tags:
        - credits
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BillingCreditResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: GetSingleBillingCreditParams
                required:
                  - data
                  - params
                title: GetSingleBillingCreditResponse
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    put:
      operationId: updateBillingCredit
      summary: Update billing credit
      tags:
        - credits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBillingCreditRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BillingCreditResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpdateBillingCreditParams
                required:
                  - data
                  - params
                title: UpdateBillingCreditResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    delete:
      operationId: softDeleteBillingCredit
      summary: Soft delete billing credit
      tags:
        - credits
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DeleteResponse'
                  params:
                    type: object
                    description: Input parameters
                    title: SoftDeleteBillingCreditParams
                required:
                  - data
                  - params
                title: SoftDeleteBillingCreditResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/credits/bundles:
    get:
      operationId: listCreditBundles
      summary: List credit bundles
      tags:
        - credits
      parameters:
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: credit_id
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
            enum:
              - active
              - inactive
        - name: bundle_type
          in: query
          schema:
            type: string
            enum:
              - fixed
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BillingCreditBundleResponseData'
                    title: ListCreditBundlesResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      bundle_type:
                        type: string
                        enum:
                          - fixed
                      credit_id:
                        type: string
                      ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      status:
                        type: string
                        enum:
                          - active
                          - inactive
                    title: ListCreditBundlesParams
                required:
                  - data
                  - params
                title: ListCreditBundlesResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    post:
      operationId: createCreditBundle
      summary: Create credit bundle
      tags:
        - credits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCreditBundleRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BillingCreditBundleResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: CreateCreditBundleParams
                required:
                  - data
                  - params
                title: CreateCreditBundleResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/credits/bundles/:bundle_id:
    get:
      operationId: getCreditBundle
      summary: Get credit bundle
      tags:
        - credits
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BillingCreditBundleResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: GetCreditBundleParams
                required:
                  - data
                  - params
                title: GetCreditBundleResponse
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    put:
      operationId: updateCreditBundleDetails
      summary: Update credit bundle details
      tags:
        - credits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCreditBundleDetailsRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BillingCreditBundleResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpdateCreditBundleDetailsParams
                required:
                  - data
                  - params
                title: UpdateCreditBundleDetailsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    delete:
      operationId: deleteCreditBundle
      summary: Delete credit bundle
      tags:
        - credits
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DeleteResponse'
                  params:
                    type: object
                    description: Input parameters
                    title: DeleteCreditBundleParams
                required:
                  - data
                  - params
                title: DeleteCreditBundleResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/credits/bundles/count:
    get:
      operationId: countCreditBundles
      summary: Count credit bundles
      tags:
        - credits
      parameters:
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: credit_id
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
            enum:
              - active
              - inactive
        - name: bundle_type
          in: query
          schema:
            type: string
            enum:
              - fixed
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      bundle_type:
                        type: string
                        enum:
                          - fixed
                      credit_id:
                        type: string
                      ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      status:
                        type: string
                        enum:
                          - active
                          - inactive
                    title: CountCreditBundlesParams
                required:
                  - data
                  - params
                title: CountCreditBundlesResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/credits/count:
    get:
      operationId: countBillingCredits
      summary: Count billing credits
      tags:
        - credits
      parameters:
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: name
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      name:
                        type: string
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                    title: CountBillingCreditsParams
                required:
                  - data
                  - params
                title: CountBillingCreditsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/credits/grants/:grant_id/zero-out:
    put:
      operationId: zeroOutGrant
      summary: Zero out grant
      tags:
        - credits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZeroOutGrantRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BillingCreditGrantResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: ZeroOutGrantParams
                required:
                  - data
                  - params
                title: ZeroOutGrantResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/credits/grants/company:
    post:
      operationId: grantBillingCreditsToCompany
      summary: Grant billing credits to company
      tags:
        - credits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCompanyCreditGrant'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BillingCreditGrantResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: GrantBillingCreditsToCompanyParams
                required:
                  - data
                  - params
                title: GrantBillingCreditsToCompanyResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/credits/grants/company/list:
    get:
      operationId: listCompanyGrants
      summary: List company grants
      tags:
        - credits
      parameters:
        - name: company_id
          in: query
          schema:
            type: string
        - name: order
          in: query
          schema:
            type: string
            enum:
              - created_at
              - expires_at
              - quantity
              - quantity_remaining
        - name: dir
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BillingCreditGrantResponseData'
                    title: ListCompanyGrantsResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      company_id:
                        type: string
                      dir:
                        type: string
                        enum:
                          - asc
                          - desc
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      order:
                        type: string
                        enum:
                          - created_at
                          - expires_at
                          - quantity
                          - quantity_remaining
                    title: ListCompanyGrantsParams
                required:
                  - data
                  - params
                title: ListCompanyGrantsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/credits/grants/count:
    get:
      operationId: countBillingCreditsGrants
      summary: Count billing credits grants
      tags:
        - credits
      parameters:
        - name: credit_id
          in: query
          schema:
            type: string
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      credit_id:
                        type: string
                      ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                    title: CountBillingCreditsGrantsParams
                required:
                  - data
                  - params
                title: CountBillingCreditsGrantsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/credits/grants/list:
    get:
      operationId: listGrantsForCredit
      summary: List grants for credit
      tags:
        - credits
      parameters:
        - name: credit_id
          in: query
          schema:
            type: string
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BillingCreditGrantResponseData'
                    title: ListGrantsForCreditResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      credit_id:
                        type: string
                      ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                    title: ListGrantsForCreditParams
                required:
                  - data
                  - params
                title: ListGrantsForCreditResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/credits/ledger:
    get:
      operationId: getEnrichedCreditLedger
      summary: Get enriched credit ledger
      tags:
        - credits
      parameters:
        - name: company_id
          in: query
          required: true
          schema:
            type: string
        - name: billing_credit_id
          in: query
          schema:
            type: string
        - name: feature_id
          in: query
          schema:
            type: string
        - name: period
          in: query
          required: true
          schema:
            type: string
            enum:
              - daily
              - weekly
              - monthly
              - raw
        - name: start_time
          in: query
          schema:
            type: string
        - name: end_time
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CreditLedgerEnrichedEntryResponseData'
                    title: GetEnrichedCreditLedgerResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      billing_credit_id:
                        type: string
                      company_id:
                        type: string
                      end_time:
                        type: string
                      feature_id:
                        type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      period:
                        type: string
                        enum:
                          - daily
                          - weekly
                          - monthly
                          - raw
                      start_time:
                        type: string
                    title: GetEnrichedCreditLedgerParams
                required:
                  - data
                  - params
                title: GetEnrichedCreditLedgerResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/credits/ledger/count:
    get:
      operationId: countCreditLedger
      summary: Count credit ledger
      tags:
        - credits
      parameters:
        - name: company_id
          in: query
          required: true
          schema:
            type: string
        - name: billing_credit_id
          in: query
          schema:
            type: string
        - name: feature_id
          in: query
          schema:
            type: string
        - name: period
          in: query
          required: true
          schema:
            type: string
            enum:
              - daily
              - weekly
              - monthly
              - raw
        - name: start_time
          in: query
          schema:
            type: string
        - name: end_time
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      billing_credit_id:
                        type: string
                      company_id:
                        type: string
                      end_time:
                        type: string
                      feature_id:
                        type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      period:
                        type: string
                        enum:
                          - daily
                          - weekly
                          - monthly
                          - raw
                      start_time:
                        type: string
                    title: CountCreditLedgerParams
                required:
                  - data
                  - params
                title: CountCreditLedgerResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/credits/plan-grants:
    get:
      operationId: listBillingPlanCreditGrants
      summary: List billing plan credit grants
      tags:
        - credits
      parameters:
        - name: credit_id
          in: query
          schema:
            type: string
        - name: plan_id
          in: query
          schema:
            type: string
        - name: plan_ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BillingPlanCreditGrantResponseData'
                    title: ListBillingPlanCreditGrantsResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      credit_id:
                        type: string
                      ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      plan_id:
                        type: string
                      plan_ids:
                        type: array
                        items:
                          type: string
                    title: ListBillingPlanCreditGrantsParams
                required:
                  - data
                  - params
                title: ListBillingPlanCreditGrantsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    post:
      operationId: createBillingPlanCreditGrant
      summary: Create billing plan credit grant
      tags:
        - credits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBillingPlanCreditGrantRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BillingPlanCreditGrantResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: CreateBillingPlanCreditGrantParams
                required:
                  - data
                  - params
                title: CreateBillingPlanCreditGrantResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/credits/plan-grants/:plan_grant_id:
    delete:
      operationId: deleteBillingPlanCreditGrant
      summary: Delete billing plan credit grant
      tags:
        - credits
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DeleteResponse'
                  params:
                    type: object
                    description: Input parameters
                    title: DeleteBillingPlanCreditGrantParams
                required:
                  - data
                  - params
                title: DeleteBillingPlanCreditGrantResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/credits/plan-grants/count:
    get:
      operationId: countBillingPlanCreditGrants
      summary: Count billing plan credit grants
      tags:
        - credits
      parameters:
        - name: credit_id
          in: query
          schema:
            type: string
        - name: plan_id
          in: query
          schema:
            type: string
        - name: plan_ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      credit_id:
                        type: string
                      ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      plan_id:
                        type: string
                      plan_ids:
                        type: array
                        items:
                          type: string
                    title: CountBillingPlanCreditGrantsParams
                required:
                  - data
                  - params
                title: CountBillingPlanCreditGrantsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/customer/upsert:
    post:
      operationId: upsertBillingCustomer
      summary: Upsert billing customer
      tags:
        - billing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBillingCustomerRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BillingCustomerResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpsertBillingCustomerParams
                required:
                  - data
                  - params
                title: UpsertBillingCustomerResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/customers:
    get:
      operationId: listCustomersWithSubscriptions
      summary: List customers with subscriptions
      tags:
        - billing
      parameters:
        - name: company_ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: name
          in: query
          schema:
            type: string
        - name: failed_to_import
          in: query
          schema:
            type: boolean
        - name: q
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BillingCustomerWithSubscriptionsResponseData'
                    title: ListCustomersWithSubscriptionsResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      company_ids:
                        type: array
                        items:
                          type: string
                      failed_to_import:
                        type: boolean
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      name:
                        type: string
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                    title: ListCustomersWithSubscriptionsParams
                required:
                  - data
                  - params
                title: ListCustomersWithSubscriptionsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/customers/count:
    get:
      operationId: countCustomers
      summary: Count customers
      tags:
        - billing
      parameters:
        - name: company_ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: name
          in: query
          schema:
            type: string
        - name: failed_to_import
          in: query
          schema:
            type: boolean
        - name: q
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      company_ids:
                        type: array
                        items:
                          type: string
                      failed_to_import:
                        type: boolean
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      name:
                        type: string
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                    title: CountCustomersParams
                required:
                  - data
                  - params
                title: CountCustomersResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/invoices:
    get:
      operationId: listInvoices
      summary: List invoices
      tags:
        - billing
      parameters:
        - name: company_id
          in: query
          schema:
            type: string
        - name: customer_external_id
          in: query
          required: true
          schema:
            type: string
        - name: subscription_external_id
          in: query
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/InvoiceResponseData'
                    title: ListInvoicesResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      company_id:
                        type: string
                      customer_external_id:
                        type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      subscription_external_id:
                        type: string
                    title: ListInvoicesParams
                required:
                  - data
                  - params
                title: ListInvoicesResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    post:
      operationId: upsertInvoice
      summary: Upsert invoice
      tags:
        - billing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInvoiceRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/InvoiceResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpsertInvoiceParams
                required:
                  - data
                  - params
                title: UpsertInvoiceResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/meter:
    get:
      operationId: listMeters
      summary: List meters
      tags:
        - billing
      parameters:
        - name: display_name
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BillingMeterResponseData'
                    title: ListMetersResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      display_name:
                        type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                    title: ListMetersParams
                required:
                  - data
                  - params
                title: ListMetersResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/meter/upsert:
    post:
      operationId: upsertBillingMeter
      summary: Upsert billing meter
      tags:
        - billing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMeterRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BillingMeterResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpsertBillingMeterParams
                required:
                  - data
                  - params
                title: UpsertBillingMeterResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/payment-methods:
    get:
      operationId: listPaymentMethods
      summary: List payment methods
      tags:
        - billing
      parameters:
        - name: company_id
          in: query
          schema:
            type: string
        - name: customer_external_id
          in: query
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PaymentMethodResponseData'
                    title: ListPaymentMethodsResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      company_id:
                        type: string
                      customer_external_id:
                        type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                    title: ListPaymentMethodsParams
                required:
                  - data
                  - params
                title: ListPaymentMethodsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    post:
      operationId: upsertPaymentMethod
      summary: Upsert payment method
      tags:
        - billing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentMethodRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PaymentMethodResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpsertPaymentMethodParams
                required:
                  - data
                  - params
                title: UpsertPaymentMethodResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/price:
    get:
      operationId: searchBillingPrices
      summary: Search billing prices
      tags:
        - billing
      parameters:
        - name: for_initial_plan
          in: query
          description: Filter for prices valid for initial plans (free prices only)
          schema:
            type: boolean
            description: Filter for prices valid for initial plans (free prices only)
        - name: for_trial_expiry_plan
          in: query
          description: Filter for prices valid for trial expiry plans (free prices only)
          schema:
            type: boolean
            description: Filter for prices valid for trial expiry plans (free prices only)
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: product_id
          in: query
          schema:
            type: string
        - name: interval
          in: query
          schema:
            type: string
        - name: price
          in: query
          schema:
            type: integer
        - name: q
          in: query
          schema:
            type: string
        - name: requires_payment_method
          in: query
          description: Filter for prices that require a payment method (inverse of ForInitialPlan)
          schema:
            type: boolean
            description: Filter for prices that require a payment method (inverse of ForInitialPlan)
        - name: tiers_mode
          in: query
          schema:
            type: string
            enum:
              - volume
              - graduated
        - name: usage_type
          in: query
          schema:
            type: string
            enum:
              - licensed
              - metered
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BillingPriceView'
                    title: SearchBillingPricesResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      for_initial_plan:
                        type: boolean
                        description: Filter for prices valid for initial plans (free prices only)
                      for_trial_expiry_plan:
                        type: boolean
                        description: Filter for prices valid for trial expiry plans (free prices only)
                      ids:
                        type: array
                        items:
                          type: string
                      interval:
                        type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      price:
                        type: integer
                      product_id:
                        type: string
                      q:
                        type: string
                      requires_payment_method:
                        type: boolean
                        description: Filter for prices that require a payment method (inverse of ForInitialPlan)
                      tiers_mode:
                        type: string
                        enum:
                          - volume
                          - graduated
                      usage_type:
                        type: string
                        enum:
                          - licensed
                          - metered
                    title: SearchBillingPricesParams
                required:
                  - data
                  - params
                title: SearchBillingPricesResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/price/upsert:
    post:
      operationId: upsertBillingPrice
      summary: Upsert billing price
      tags:
        - billing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBillingPriceRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BillingPriceResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpsertBillingPriceParams
                required:
                  - data
                  - params
                title: UpsertBillingPriceResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/product/{billing_id}:
    delete:
      operationId: deleteBillingProduct
      summary: Delete billing product
      tags:
        - billing
      parameters:
        - name: billing_id
          in: path
          description: billing_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DeleteResponse'
                  params:
                    type: object
                    description: Input parameters
                    title: DeleteBillingProductParams
                required:
                  - data
                  - params
                title: DeleteBillingProductResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/product/prices:
    get:
      operationId: listProductPrices
      summary: List product prices
      tags:
        - billing
      parameters:
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: name
          in: query
          schema:
            type: string
        - name: q
          in: query
          schema:
            type: string
        - name: price_usage_type
          in: query
          schema:
            type: string
            enum:
              - licensed
              - metered
        - name: without_linked_to_plan
          in: query
          description: Filter products that are not linked to any plan
          schema:
            type: boolean
            description: Filter products that are not linked to any plan
        - name: with_one_time_charges
          in: query
          description: Filter products that are one time charges
          schema:
            type: boolean
            description: Filter products that are one time charges
        - name: with_zero_price
          in: query
          description: Filter products that have zero price for free subscription type
          schema:
            type: boolean
            description: Filter products that have zero price for free subscription type
        - name: with_prices_only
          in: query
          description: Filter products that have prices
          schema:
            type: boolean
            description: Filter products that have prices
        - name: is_active
          in: query
          description: Filter products that are active
          schema:
            type: boolean
            description: Filter products that are active
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BillingPriceResponseData'
                    title: ListProductPricesResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      ids:
                        type: array
                        items:
                          type: string
                      is_active:
                        type: boolean
                        description: Filter products that are active
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      name:
                        type: string
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      price_usage_type:
                        type: string
                        enum:
                          - licensed
                          - metered
                      q:
                        type: string
                      with_one_time_charges:
                        type: boolean
                        description: Filter products that are one time charges
                      with_prices_only:
                        type: boolean
                        description: Filter products that have prices
                      with_zero_price:
                        type: boolean
                        description: Filter products that have zero price for free subscription type
                      without_linked_to_plan:
                        type: boolean
                        description: Filter products that are not linked to any plan
                    title: ListProductPricesParams
                required:
                  - data
                  - params
                title: ListProductPricesResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/product/prices/{billing_id}:
    delete:
      operationId: deleteProductPrice
      summary: Delete product price
      tags:
        - billing
      parameters:
        - name: billing_id
          in: path
          description: billing_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DeleteResponse'
                  params:
                    type: object
                    description: Input parameters
                    title: DeleteProductPriceParams
                required:
                  - data
                  - params
                title: DeleteProductPriceResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/product/upsert:
    post:
      operationId: upsertBillingProduct
      summary: Upsert billing product
      tags:
        - billing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBillingProductRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BillingProductResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpsertBillingProductParams
                required:
                  - data
                  - params
                title: UpsertBillingProductResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/products:
    get:
      operationId: listBillingProducts
      summary: List billing products
      tags:
        - billing
      parameters:
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: name
          in: query
          schema:
            type: string
        - name: q
          in: query
          schema:
            type: string
        - name: price_usage_type
          in: query
          schema:
            type: string
            enum:
              - licensed
              - metered
        - name: without_linked_to_plan
          in: query
          description: Filter products that are not linked to any plan
          schema:
            type: boolean
            description: Filter products that are not linked to any plan
        - name: with_one_time_charges
          in: query
          description: Filter products that are one time charges
          schema:
            type: boolean
            description: Filter products that are one time charges
        - name: with_zero_price
          in: query
          description: Filter products that have zero price for free subscription type
          schema:
            type: boolean
            description: Filter products that have zero price for free subscription type
        - name: with_prices_only
          in: query
          description: Filter products that have prices
          schema:
            type: boolean
            description: Filter products that have prices
        - name: is_active
          in: query
          description: Filter products that are active
          schema:
            type: boolean
            description: Filter products that are active
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BillingProductDetailResponseData'
                    title: ListBillingProductsResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      ids:
                        type: array
                        items:
                          type: string
                      is_active:
                        type: boolean
                        description: Filter products that are active
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      name:
                        type: string
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      price_usage_type:
                        type: string
                        enum:
                          - licensed
                          - metered
                      q:
                        type: string
                      with_one_time_charges:
                        type: boolean
                        description: Filter products that are one time charges
                      with_prices_only:
                        type: boolean
                        description: Filter products that have prices
                      with_zero_price:
                        type: boolean
                        description: Filter products that have zero price for free subscription type
                      without_linked_to_plan:
                        type: boolean
                        description: Filter products that are not linked to any plan
                    title: ListBillingProductsParams
                required:
                  - data
                  - params
                title: ListBillingProductsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/products/count:
    get:
      operationId: countBillingProducts
      summary: Count billing products
      tags:
        - billing
      parameters:
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: name
          in: query
          schema:
            type: string
        - name: q
          in: query
          schema:
            type: string
        - name: price_usage_type
          in: query
          schema:
            type: string
            enum:
              - licensed
              - metered
        - name: without_linked_to_plan
          in: query
          description: Filter products that are not linked to any plan
          schema:
            type: boolean
            description: Filter products that are not linked to any plan
        - name: with_one_time_charges
          in: query
          description: Filter products that are one time charges
          schema:
            type: boolean
            description: Filter products that are one time charges
        - name: with_zero_price
          in: query
          description: Filter products that have zero price for free subscription type
          schema:
            type: boolean
            description: Filter products that have zero price for free subscription type
        - name: with_prices_only
          in: query
          description: Filter products that have prices
          schema:
            type: boolean
            description: Filter products that have prices
        - name: is_active
          in: query
          description: Filter products that are active
          schema:
            type: boolean
            description: Filter products that are active
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      ids:
                        type: array
                        items:
                          type: string
                      is_active:
                        type: boolean
                        description: Filter products that are active
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      name:
                        type: string
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      price_usage_type:
                        type: string
                        enum:
                          - licensed
                          - metered
                      q:
                        type: string
                      with_one_time_charges:
                        type: boolean
                        description: Filter products that are one time charges
                      with_prices_only:
                        type: boolean
                        description: Filter products that have prices
                      with_zero_price:
                        type: boolean
                        description: Filter products that have zero price for free subscription type
                      without_linked_to_plan:
                        type: boolean
                        description: Filter products that are not linked to any plan
                    title: CountBillingProductsParams
                required:
                  - data
                  - params
                title: CountBillingProductsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /billing/subscription/upsert:
    post:
      operationId: upsertBillingSubscription
      summary: Upsert billing subscription
      tags:
        - billing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBillingSubscriptionRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BillingSubscriptionResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpsertBillingSubscriptionParams
                required:
                  - data
                  - params
                title: UpsertBillingSubscriptionResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /checkout-internal:
    post:
      operationId: checkoutInternal
      summary: Checkout internal
      tags:
        - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeSubscriptionInternalRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CheckoutSubscription'
                  params:
                    type: object
                    description: Input parameters
                    title: CheckoutInternalParams
                required:
                  - data
                  - params
                title: CheckoutInternalResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /checkout-internal/data:
    post:
      operationId: getCheckoutData
      summary: Get checkout data
      tags:
        - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutDataRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CheckoutDataResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: GetCheckoutDataParams
                required:
                  - data
                  - params
                title: GetCheckoutDataResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /checkout-internal/preview:
    post:
      operationId: previewCheckoutInternal
      summary: Preview checkout internal
      tags:
        - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeSubscriptionInternalRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PreviewSubscriptionChangeResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: PreviewCheckoutInternalParams
                required:
                  - data
                  - params
                title: PreviewCheckoutInternalResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /companies:
    get:
      operationId: listCompanies
      summary: List companies
      tags:
        - companies
      parameters:
        - name: ids
          in: query
          description: Filter companies by multiple company IDs (starts with comp_)
          schema:
            type: array
            description: Filter companies by multiple company IDs (starts with comp_)
            items:
              type: string
        - name: plan_id
          in: query
          description: Filter companies by plan ID (starts with plan_)
          schema:
            type: string
            description: Filter companies by plan ID (starts with plan_)
        - name: q
          in: query
          description: Search for companies by name, keys or string traits
          schema:
            type: string
            description: Search for companies by name, keys or string traits
        - name: without_feature_override_for
          in: query
          description: Filter out companies that already have a company override for the specified feature ID
          schema:
            type: string
            description: Filter out companies that already have a company override for the specified feature ID
        - name: without_plan
          in: query
          description: Filter out companies that have a plan
          schema:
            type: boolean
            description: Filter out companies that have a plan
        - name: with_subscription
          in: query
          description: Filter companies that have a subscription
          schema:
            type: boolean
            description: Filter companies that have a subscription
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CompanyDetailResponseData'
                    title: ListCompaniesResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      ids:
                        type: array
                        description: Filter companies by multiple company IDs (starts with comp_)
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      plan_id:
                        type: string
                        description: Filter companies by plan ID (starts with plan_)
                      q:
                        type: string
                        description: Search for companies by name, keys or string traits
                      with_subscription:
                        type: boolean
                        description: Filter companies that have a subscription
                      without_feature_override_for:
                        type: string
                        description: Filter out companies that already have a company override for the specified feature ID
                      without_plan:
                        type: boolean
                        description: Filter out companies that have a plan
                    title: ListCompaniesParams
                required:
                  - data
                  - params
                title: ListCompaniesResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    post:
      operationId: upsertCompany
      summary: Upsert company
      tags:
        - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertCompanyRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CompanyDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpsertCompanyParams
                required:
                  - data
                  - params
                title: UpsertCompanyResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /companies/{company_id}:
    get:
      operationId: getCompany
      summary: Get company
      tags:
        - companies
      parameters:
        - name: company_id
          in: path
          description: company_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CompanyDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: GetCompanyParams
                required:
                  - data
                  - params
                title: GetCompanyResponse
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    delete:
      operationId: deleteCompany
      summary: Delete company
      tags:
        - companies
      parameters:
        - name: company_id
          in: path
          description: company_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DeleteResponse'
                  params:
                    type: object
                    description: Input parameters
                    title: DeleteCompanyParams
                required:
                  - data
                  - params
                title: DeleteCompanyResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /companies/count:
    get:
      operationId: countCompanies
      summary: Count companies
      tags:
        - companies
      parameters:
        - name: ids
          in: query
          description: Filter companies by multiple company IDs (starts with comp_)
          schema:
            type: array
            description: Filter companies by multiple company IDs (starts with comp_)
            items:
              type: string
        - name: plan_id
          in: query
          description: Filter companies by plan ID (starts with plan_)
          schema:
            type: string
            description: Filter companies by plan ID (starts with plan_)
        - name: q
          in: query
          description: Search for companies by name, keys or string traits
          schema:
            type: string
            description: Search for companies by name, keys or string traits
        - name: without_feature_override_for
          in: query
          description: Filter out companies that already have a company override for the specified feature ID
          schema:
            type: string
            description: Filter out companies that already have a company override for the specified feature ID
        - name: without_plan
          in: query
          description: Filter out companies that have a plan
          schema:
            type: boolean
            description: Filter out companies that have a plan
        - name: with_subscription
          in: query
          description: Filter companies that have a subscription
          schema:
            type: boolean
            description: Filter companies that have a subscription
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      ids:
                        type: array
                        description: Filter companies by multiple company IDs (starts with comp_)
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      plan_id:
                        type: string
                        description: Filter companies by plan ID (starts with plan_)
                      q:
                        type: string
                        description: Search for companies by name, keys or string traits
                      with_subscription:
                        type: boolean
                        description: Filter companies that have a subscription
                      without_feature_override_for:
                        type: string
                        description: Filter out companies that already have a company override for the specified feature ID
                      without_plan:
                        type: boolean
                        description: Filter out companies that have a plan
                    title: CountCompaniesParams
                required:
                  - data
                  - params
                title: CountCompaniesResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /companies/count2:
    get:
      operationId: countCompaniesForAdvancedFilter
      summary: Count companies for advanced filter
      tags:
        - companies
      parameters:
        - name: ids
          in: query
          description: Filter companies by multiple company IDs (starts with comp_)
          schema:
            type: array
            description: Filter companies by multiple company IDs (starts with comp_)
            items:
              type: string
        - name: plan_ids
          in: query
          description: Filter companies by one or more plan IDs (each ID starts with plan_)
          schema:
            type: array
            description: Filter companies by one or more plan IDs (each ID starts with plan_)
            items:
              type: string
        - name: feature_ids
          in: query
          description: Filter companies by one or more feature IDs (each ID starts with feat_)
          schema:
            type: array
            description: Filter companies by one or more feature IDs (each ID starts with feat_)
            items:
              type: string
        - name: credit_type_ids
          in: query
          description: Filter companies by one or more credit type IDs (each ID starts with bcrd_)
          schema:
            type: array
            description: Filter companies by one or more credit type IDs (each ID starts with bcrd_)
            items:
              type: string
        - name: subscription_statuses
          in: query
          description: Filter companies by one or more subscription statuses (active, canceled, expired, incomplete, incomplete_expired, past_due, paused, trialing, unpaid)
          schema:
            type: array
            description: Filter companies by one or more subscription statuses (active, canceled, expired, incomplete, incomplete_expired, past_due, paused, trialing, unpaid)
            items:
              type: string
        - name: subscription_types
          in: query
          description: Filter companies by one or more subscription types (paid, free, trial)
          schema:
            type: array
            description: Filter companies by one or more subscription types (paid, free, trial)
            items:
              type: string
        - name: monetized_subscriptions
          in: query
          description: Filter companies that have monetized subscriptions
          schema:
            type: boolean
            description: Filter companies that have monetized subscriptions
        - name: q
          in: query
          description: Search for companies by name, keys or string traits
          schema:
            type: string
            description: Search for companies by name, keys or string traits
        - name: without_plan
          in: query
          description: Filter out companies that have a plan
          schema:
            type: boolean
            description: Filter out companies that have a plan
        - name: without_subscription
          in: query
          description: Filter out companies that have a subscription
          schema:
            type: boolean
            description: Filter out companies that have a subscription
        - name: sort_order_column
          in: query
          description: Column to sort by (e.g. name, created_at, last_seen_at)
          schema:
            type: string
            description: Column to sort by (e.g. name, created_at, last_seen_at)
        - name: sort_order_direction
          in: query
          description: Direction to sort by (asc or desc)
          schema:
            type: string
            description: Direction to sort by (asc or desc)
            enum:
              - asc
              - desc
        - name: display_properties
          in: query
          description: Select the display columns to return (e.g. plan, subscription, users, last_seen_at)
          schema:
            type: array
            description: Select the display columns to return (e.g. plan, subscription, users, last_seen_at)
            items:
              type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      credit_type_ids:
                        type: array
                        description: Filter companies by one or more credit type IDs (each ID starts with bcrd_)
                        items:
                          type: string
                      display_properties:
                        type: array
                        description: Select the display columns to return (e.g. plan, subscription, users, last_seen_at)
                        items:
                          type: string
                      feature_ids:
                        type: array
                        description: Filter companies by one or more feature IDs (each ID starts with feat_)
                        items:
                          type: string
                      ids:
                        type: array
                        description: Filter companies by multiple company IDs (starts with comp_)
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      monetized_subscriptions:
                        type: boolean
                        description: Filter companies that have monetized subscriptions
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      plan_ids:
                        type: array
                        description: Filter companies by one or more plan IDs (each ID starts with plan_)
                        items:
                          type: string
                      q:
                        type: string
                        description: Search for companies by name, keys or string traits
                      sort_order_column:
                        type: string
                        description: Column to sort by (e.g. name, created_at, last_seen_at)
                      sort_order_direction:
                        type: string
                        description: Direction to sort by (asc or desc)
                        enum:
                          - asc
                          - desc
                      subscription_statuses:
                        type: array
                        description: Filter companies by one or more subscription statuses (active, canceled, expired, incomplete, incomplete_expired, past_due, paused, trialing, unpaid)
                        items:
                          type: string
                      subscription_types:
                        type: array
                        description: Filter companies by one or more subscription types (paid, free, trial)
                        items:
                          type: string
                      without_plan:
                        type: boolean
                        description: Filter out companies that have a plan
                      without_subscription:
                        type: boolean
                        description: Filter out companies that have a subscription
                    title: CountCompaniesForAdvancedFilterParams
                required:
                  - data
                  - params
                title: CountCompaniesForAdvancedFilterResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /companies/create:
    post:
      operationId: createCompany
      summary: Create company
      tags:
        - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertCompanyRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CompanyDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: CreateCompanyParams
                required:
                  - data
                  - params
                title: CreateCompanyResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /companies/delete:
    post:
      operationId: deleteCompanyByKeys
      summary: Delete company by keys
      tags:
        - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeysRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CompanyResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: DeleteCompanyByKeysParams
                required:
                  - data
                  - params
                title: DeleteCompanyByKeysResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /companies/list2:
    get:
      operationId: listCompaniesForAdvancedFilter
      summary: List companies for advanced filter
      tags:
        - companies
      parameters:
        - name: ids
          in: query
          description: Filter companies by multiple company IDs (starts with comp_)
          schema:
            type: array
            description: Filter companies by multiple company IDs (starts with comp_)
            items:
              type: string
        - name: plan_ids
          in: query
          description: Filter companies by one or more plan IDs (each ID starts with plan_)
          schema:
            type: array
            description: Filter companies by one or more plan IDs (each ID starts with plan_)
            items:
              type: string
        - name: feature_ids
          in: query
          description: Filter companies by one or more feature IDs (each ID starts with feat_)
          schema:
            type: array
            description: Filter companies by one or more feature IDs (each ID starts with feat_)
            items:
              type: string
        - name: credit_type_ids
          in: query
          description: Filter companies by one or more credit type IDs (each ID starts with bcrd_)
          schema:
            type: array
            description: Filter companies by one or more credit type IDs (each ID starts with bcrd_)
            items:
              type: string
        - name: subscription_statuses
          in: query
          description: Filter companies by one or more subscription statuses (active, canceled, expired, incomplete, incomplete_expired, past_due, paused, trialing, unpaid)
          schema:
            type: array
            description: Filter companies by one or more subscription statuses (active, canceled, expired, incomplete, incomplete_expired, past_due, paused, trialing, unpaid)
            items:
              type: string
        - name: subscription_types
          in: query
          description: Filter companies by one or more subscription types (paid, free, trial)
          schema:
            type: array
            description: Filter companies by one or more subscription types (paid, free, trial)
            items:
              type: string
        - name: monetized_subscriptions
          in: query
          description: Filter companies that have monetized subscriptions
          schema:
            type: boolean
            description: Filter companies that have monetized subscriptions
        - name: q
          in: query
          description: Search for companies by name, keys or string traits
          schema:
            type: string
            description: Search for companies by name, keys or string traits
        - name: without_plan
          in: query
          description: Filter out companies that have a plan
          schema:
            type: boolean
            description: Filter out companies that have a plan
        - name: without_subscription
          in: query
          description: Filter out companies that have a subscription
          schema:
            type: boolean
            description: Filter out companies that have a subscription
        - name: sort_order_column
          in: query
          description: Column to sort by (e.g. name, created_at, last_seen_at)
          schema:
            type: string
            description: Column to sort by (e.g. name, created_at, last_seen_at)
        - name: sort_order_direction
          in: query
          description: Direction to sort by (asc or desc)
          schema:
            type: string
            description: Direction to sort by (asc or desc)
            enum:
              - asc
              - desc
        - name: display_properties
          in: query
          description: Select the display columns to return (e.g. plan, subscription, users, last_seen_at)
          schema:
            type: array
            description: Select the display columns to return (e.g. plan, subscription, users, last_seen_at)
            items:
              type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CompanyViewWithFeatureUsageResponseData'
                    title: ListCompaniesForAdvancedFilterResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      credit_type_ids:
                        type: array
                        description: Filter companies by one or more credit type IDs (each ID starts with bcrd_)
                        items:
                          type: string
                      display_properties:
                        type: array
                        description: Select the display columns to return (e.g. plan, subscription, users, last_seen_at)
                        items:
                          type: string
                      feature_ids:
                        type: array
                        description: Filter companies by one or more feature IDs (each ID starts with feat_)
                        items:
                          type: string
                      ids:
                        type: array
                        description: Filter companies by multiple company IDs (starts with comp_)
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      monetized_subscriptions:
                        type: boolean
                        description: Filter companies that have monetized subscriptions
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      plan_ids:
                        type: array
                        description: Filter companies by one or more plan IDs (each ID starts with plan_)
                        items:
                          type: string
                      q:
                        type: string
                        description: Search for companies by name, keys or string traits
                      sort_order_column:
                        type: string
                        description: Column to sort by (e.g. name, created_at, last_seen_at)
                      sort_order_direction:
                        type: string
                        description: Direction to sort by (asc or desc)
                        enum:
                          - asc
                          - desc
                      subscription_statuses:
                        type: array
                        description: Filter companies by one or more subscription statuses (active, canceled, expired, incomplete, incomplete_expired, past_due, paused, trialing, unpaid)
                        items:
                          type: string
                      subscription_types:
                        type: array
                        description: Filter companies by one or more subscription types (paid, free, trial)
                        items:
                          type: string
                      without_plan:
                        type: boolean
                        description: Filter out companies that have a plan
                      without_subscription:
                        type: boolean
                        description: Filter out companies that have a subscription
                    title: ListCompaniesForAdvancedFilterParams
                required:
                  - data
                  - params
                title: ListCompaniesForAdvancedFilterResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /companies/lookup:
    get:
      operationId: lookupCompany
      summary: Lookup company
      tags:
        - companies
      parameters:
        - name: keys
          in: query
          description: Key/value pairs
          required: true
          schema:
            additionalProperties:
              type: string
            type: object
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CompanyDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      keys:
                        additionalProperties:
                          type: string
                        type: object
                    title: LookupCompanyParams
                required:
                  - data
                  - params
                title: LookupCompanyResponse
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /company-crm-deals:
    get:
      operationId: getActiveDeals
      summary: Get active deals
      tags:
        - companies
      parameters:
        - name: company_id
          in: query
          required: true
          schema:
            type: string
        - name: deal_stage
          in: query
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CompanyCrmDealsResponseData'
                    title: GetActiveDealsResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      company_id:
                        type: string
                      deal_stage:
                        type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                    title: GetActiveDealsParams
                required:
                  - data
                  - params
                title: GetActiveDealsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /company-memberships:
    get:
      operationId: listCompanyMemberships
      summary: List company memberships
      tags:
        - companies
      parameters:
        - name: company_id
          in: query
          schema:
            type: string
        - name: user_id
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CompanyMembershipDetailResponseData'
                    title: ListCompanyMembershipsResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      company_id:
                        type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      user_id:
                        type: string
                    title: ListCompanyMembershipsParams
                required:
                  - data
                  - params
                title: ListCompanyMembershipsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    post:
      operationId: getOrCreateCompanyMembership
      summary: Get or create company membership
      tags:
        - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrCreateCompanyMembershipRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CompanyMembershipDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: GetOrCreateCompanyMembershipParams
                required:
                  - data
                  - params
                title: GetOrCreateCompanyMembershipResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /company-memberships/{company_membership_id}:
    delete:
      operationId: deleteCompanyMembership
      summary: Delete company membership
      tags:
        - companies
      parameters:
        - name: company_membership_id
          in: path
          description: company_membership_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DeleteResponse'
                  params:
                    type: object
                    description: Input parameters
                    title: DeleteCompanyMembershipParams
                required:
                  - data
                  - params
                title: DeleteCompanyMembershipResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /company-overrides:
    get:
      operationId: listCompanyOverrides
      summary: List company overrides
      tags:
        - entitlements
      parameters:
        - name: company_id
          in: query
          description: Filter company overrides by a single company ID (starting with comp_)
          schema:
            type: string
            description: Filter company overrides by a single company ID (starting with comp_)
        - name: company_ids
          in: query
          description: Filter company overrides by multiple company IDs (starting with comp_)
          schema:
            type: array
            description: Filter company overrides by multiple company IDs (starting with comp_)
            items:
              type: string
        - name: feature_id
          in: query
          description: Filter company overrides by a single feature ID (starting with feat_)
          schema:
            type: string
            description: Filter company overrides by a single feature ID (starting with feat_)
        - name: feature_ids
          in: query
          description: Filter company overrides by multiple feature IDs (starting with feat_)
          schema:
            type: array
            description: Filter company overrides by multiple feature IDs (starting with feat_)
            items:
              type: string
        - name: ids
          in: query
          description: Filter company overrides by multiple company override IDs (starting with cmov_)
          schema:
            type: array
            description: Filter company overrides by multiple company override IDs (starting with cmov_)
            items:
              type: string
        - name: without_expired
          in: query
          description: Filter company overrides by whether they have not expired
          schema:
            type: boolean
            description: Filter company overrides by whether they have not expired
        - name: q
          in: query
          description: Search for company overrides by feature or company name
          schema:
            type: string
            description: Search for company overrides by feature or company name
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CompanyOverrideResponseData'
                    title: ListCompanyOverridesResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      company_id:
                        type: string
                        description: Filter company overrides by a single company ID (starting with comp_)
                      company_ids:
                        type: array
                        description: Filter company overrides by multiple company IDs (starting with comp_)
                        items:
                          type: string
                      feature_id:
                        type: string
                        description: Filter company overrides by a single feature ID (starting with feat_)
                      feature_ids:
                        type: array
                        description: Filter company overrides by multiple feature IDs (starting with feat_)
                        items:
                          type: string
                      ids:
                        type: array
                        description: Filter company overrides by multiple company override IDs (starting with cmov_)
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                        description: Search for company overrides by feature or company name
                      without_expired:
                        type: boolean
                        description: Filter company overrides by whether they have not expired
                    title: ListCompanyOverridesParams
                required:
                  - data
                  - params
                title: ListCompanyOverridesResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    post:
      operationId: createCompanyOverride
      summary: Create company override
      tags:
        - entitlements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCompanyOverrideRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CompanyOverrideResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: CreateCompanyOverrideParams
                required:
                  - data
                  - params
                title: CreateCompanyOverrideResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /company-overrides/{company_override_id}:
    get:
      operationId: getCompanyOverride
      summary: Get company override
      tags:
        - entitlements
      parameters:
        - name: company_override_id
          in: path
          description: company_override_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CompanyOverrideResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: GetCompanyOverrideParams
                required:
                  - data
                  - params
                title: GetCompanyOverrideResponse
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    put:
      operationId: updateCompanyOverride
      summary: Update company override
      tags:
        - entitlements
      parameters:
        - name: company_override_id
          in: path
          description: company_override_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompanyOverrideRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CompanyOverrideResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpdateCompanyOverrideParams
                required:
                  - data
                  - params
                title: UpdateCompanyOverrideResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    delete:
      operationId: deleteCompanyOverride
      summary: Delete company override
      tags:
        - entitlements
      parameters:
        - name: company_override_id
          in: path
          description: company_override_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DeleteResponse'
                  params:
                    type: object
                    description: Input parameters
                    title: DeleteCompanyOverrideParams
                required:
                  - data
                  - params
                title: DeleteCompanyOverrideResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /company-overrides/count:
    get:
      operationId: countCompanyOverrides
      summary: Count company overrides
      tags:
        - entitlements
      parameters:
        - name: company_id
          in: query
          description: Filter company overrides by a single company ID (starting with comp_)
          schema:
            type: string
            description: Filter company overrides by a single company ID (starting with comp_)
        - name: company_ids
          in: query
          description: Filter company overrides by multiple company IDs (starting with comp_)
          schema:
            type: array
            description: Filter company overrides by multiple company IDs (starting with comp_)
            items:
              type: string
        - name: feature_id
          in: query
          description: Filter company overrides by a single feature ID (starting with feat_)
          schema:
            type: string
            description: Filter company overrides by a single feature ID (starting with feat_)
        - name: feature_ids
          in: query
          description: Filter company overrides by multiple feature IDs (starting with feat_)
          schema:
            type: array
            description: Filter company overrides by multiple feature IDs (starting with feat_)
            items:
              type: string
        - name: ids
          in: query
          description: Filter company overrides by multiple company override IDs (starting with cmov_)
          schema:
            type: array
            description: Filter company overrides by multiple company override IDs (starting with cmov_)
            items:
              type: string
        - name: without_expired
          in: query
          description: Filter company overrides by whether they have not expired
          schema:
            type: boolean
            description: Filter company overrides by whether they have not expired
        - name: q
          in: query
          description: Search for company overrides by feature or company name
          schema:
            type: string
            description: Search for company overrides by feature or company name
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      company_id:
                        type: string
                        description: Filter company overrides by a single company ID (starting with comp_)
                      company_ids:
                        type: array
                        description: Filter company overrides by multiple company IDs (starting with comp_)
                        items:
                          type: string
                      feature_id:
                        type: string
                        description: Filter company overrides by a single feature ID (starting with feat_)
                      feature_ids:
                        type: array
                        description: Filter company overrides by multiple feature IDs (starting with feat_)
                        items:
                          type: string
                      ids:
                        type: array
                        description: Filter company overrides by multiple company override IDs (starting with cmov_)
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                        description: Search for company overrides by feature or company name
                      without_expired:
                        type: boolean
                        description: Filter company overrides by whether they have not expired
                    title: CountCompanyOverridesParams
                required:
                  - data
                  - params
                title: CountCompanyOverridesResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /company-plans/{company_plan_id}:
    put:
      operationId: updateCompanyPlans
      summary: Update company plans
      tags:
        - plans
      parameters:
        - name: company_plan_id
          in: path
          description: company_plan_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompanyPlansRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CompanyDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpdateCompanyPlansParams
                required:
                  - data
                  - params
                title: UpdateCompanyPlansResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /company-subscriptions:
    get:
      operationId: getActiveCompanySubscription
      summary: Get active company subscription
      tags:
        - companies
      parameters:
        - name: company_id
          in: query
          schema:
            type: string
        - name: company_ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CompanySubscriptionResponseData'
                    title: GetActiveCompanySubscriptionResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      company_id:
                        type: string
                      company_ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                    title: GetActiveCompanySubscriptionParams
                required:
                  - data
                  - params
                title: GetActiveCompanySubscriptionResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /company-traits:
    post:
      operationId: upsertCompanyTrait
      summary: Upsert company trait
      tags:
        - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertTraitRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CompanyDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpsertCompanyTraitParams
                required:
                  - data
                  - params
                title: UpsertCompanyTraitResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /components:
    get:
      operationId: listComponents
      summary: List components
      tags:
        - components
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ComponentResponseData'
                    title: ListComponentsResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                    title: ListComponentsParams
                required:
                  - data
                  - params
                title: ListComponentsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    post:
      operationId: createComponent
      summary: Create component
      tags:
        - components
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateComponentRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ComponentResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: CreateComponentParams
                required:
                  - data
                  - params
                title: CreateComponentResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /components/{component_id}:
    get:
      operationId: getComponent
      summary: Get component
      tags:
        - components
      parameters:
        - name: component_id
          in: path
          description: component_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ComponentResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: GetComponentParams
                required:
                  - data
                  - params
                title: GetComponentResponse
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    put:
      operationId: updateComponent
      summary: Update component
      tags:
        - components
      parameters:
        - name: component_id
          in: path
          description: component_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateComponentRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ComponentResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpdateComponentParams
                required:
                  - data
                  - params
                title: UpdateComponentResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    delete:
      operationId: deleteComponent
      summary: Delete component
      tags:
        - components
      parameters:
        - name: component_id
          in: path
          description: component_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DeleteResponse'
                  params:
                    type: object
                    description: Input parameters
                    title: DeleteComponentParams
                required:
                  - data
                  - params
                title: DeleteComponentResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /components/count:
    get:
      operationId: countComponents
      summary: Count components
      tags:
        - components
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                    title: CountComponentsParams
                required:
                  - data
                  - params
                title: CountComponentsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /components/preview-data:
    get:
      operationId: previewComponentData
      summary: Preview component data
      tags:
        - components
      parameters:
        - name: company_id
          in: query
          schema:
            type: string
        - name: component_id
          in: query
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ComponentPreviewResponseData'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      company_id:
                        type: string
                      component_id:
                        type: string
                    title: PreviewComponentDataParams
                required:
                  - data
                  - params
                title: PreviewComponentDataResponse
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /crm/associations/deal-line-item:
    post:
      operationId: upsertDealLineItemAssociation
      summary: Upsert deal line item association
      tags:
        - crm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCrmDealLineItemAssociationRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CrmLineItemResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpsertDealLineItemAssociationParams
                required:
                  - data
                  - params
                title: UpsertDealLineItemAssociationResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /crm/deal-line-item/upsert:
    post:
      operationId: upsertLineItem
      summary: Upsert line item
      tags:
        - crm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCrmLineItemRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CrmLineItemResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpsertLineItemParams
                required:
                  - data
                  - params
                title: UpsertLineItemResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /crm/deals/upsert:
    post:
      operationId: upsertCrmDeal
      summary: Upsert crm deal
      tags:
        - crm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCrmDealRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CrmDealResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpsertCrmDealParams
                required:
                  - data
                  - params
                title: UpsertCrmDealResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /crm/products:
    get:
      operationId: listCrmProducts
      summary: List crm products
      tags:
        - crm
      parameters:
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: name
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CrmProductResponseData'
                    title: ListCrmProductsResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      name:
                        type: string
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                    title: ListCrmProductsParams
                required:
                  - data
                  - params
                title: ListCrmProductsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /crm/products/upsert:
    post:
      operationId: upsertCrmProduct
      summary: Upsert crm product
      tags:
        - crm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCrmProductRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CrmProductResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpsertCrmProductParams
                required:
                  - data
                  - params
                title: UpsertCrmProductResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /data-exports:
    post:
      operationId: createDataExport
      summary: Create data export
      tags:
        - dataexports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataExportRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DataExportResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: CreateDataExportParams
                required:
                  - data
                  - params
                title: CreateDataExportResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /data-exports/{data_export_id}/artifact:
    get:
      operationId: getDataExportArtifact
      summary: Get data export artifact
      tags:
        - dataexports
      parameters:
        - name: data_export_id
          in: path
          description: data_export_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
            application/octet-stream:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              description: Indicates whether the content is expected to be displayed inline by the client or treated as an attachment to be downloaded.
              schema:
                type: string
                example: attachment; filename="file.csv"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /entity-key-definitions:
    get:
      operationId: listEntityKeyDefinitions
      summary: List entity key definitions
      tags:
        - companies
      parameters:
        - name: entity_type
          in: query
          schema:
            type: string
            enum:
              - company
              - user
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: q
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/EntityKeyDefinitionResponseData'
                    title: ListEntityKeyDefinitionsResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      entity_type:
                        type: string
                        enum:
                          - company
                          - user
                      ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                    title: ListEntityKeyDefinitionsParams
                required:
                  - data
                  - params
                title: ListEntityKeyDefinitionsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /entity-key-definitions/count:
    get:
      operationId: countEntityKeyDefinitions
      summary: Count entity key definitions
      tags:
        - companies
      parameters:
        - name: entity_type
          in: query
          schema:
            type: string
            enum:
              - company
              - user
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: q
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      entity_type:
                        type: string
                        enum:
                          - company
                          - user
                      ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                    title: CountEntityKeyDefinitionsParams
                required:
                  - data
                  - params
                title: CountEntityKeyDefinitionsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /entity-trait-definitions:
    get:
      operationId: listEntityTraitDefinitions
      summary: List entity trait definitions
      tags:
        - companies
      parameters:
        - name: entity_type
          in: query
          schema:
            type: string
            enum:
              - company
              - user
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: q
          in: query
          schema:
            type: string
        - name: trait_type
          in: query
          schema:
            type: string
            enum:
              - boolean
              - currency
              - date
              - number
              - string
              - url
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/EntityTraitDefinitionResponseData'
                    title: ListEntityTraitDefinitionsResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      entity_type:
                        type: string
                        enum:
                          - company
                          - user
                      ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                      trait_type:
                        type: string
                        enum:
                          - boolean
                          - currency
                          - date
                          - number
                          - string
                          - url
                    title: ListEntityTraitDefinitionsParams
                required:
                  - data
                  - params
                title: ListEntityTraitDefinitionsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    post:
      operationId: getOrCreateEntityTraitDefinition
      summary: Get or create entity trait definition
      tags:
        - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEntityTraitDefinitionRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/EntityTraitDefinitionResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: GetOrCreateEntityTraitDefinitionParams
                required:
                  - data
                  - params
                title: GetOrCreateEntityTraitDefinitionResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /entity-trait-definitions/{entity_trait_definition_id}:
    get:
      operationId: getEntityTraitDefinition
      summary: Get entity trait definition
      tags:
        - companies
      parameters:
        - name: entity_trait_definition_id
          in: path
          description: entity_trait_definition_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/EntityTraitDefinitionResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: GetEntityTraitDefinitionParams
                required:
                  - data
                  - params
                title: GetEntityTraitDefinitionResponse
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    put:
      operationId: updateEntityTraitDefinition
      summary: Update entity trait definition
      tags:
        - companies
      parameters:
        - name: entity_trait_definition_id
          in: path
          description: entity_trait_definition_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEntityTraitDefinitionRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/EntityTraitDefinitionResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpdateEntityTraitDefinitionParams
                required:
                  - data
                  - params
                title: UpdateEntityTraitDefinitionResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /entity-trait-definitions/count:
    get:
      operationId: countEntityTraitDefinitions
      summary: Count entity trait definitions
      tags:
        - companies
      parameters:
        - name: entity_type
          in: query
          schema:
            type: string
            enum:
              - company
              - user
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: q
          in: query
          schema:
            type: string
        - name: trait_type
          in: query
          schema:
            type: string
            enum:
              - boolean
              - currency
              - date
              - number
              - string
              - url
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      entity_type:
                        type: string
                        enum:
                          - company
                          - user
                      ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                      trait_type:
                        type: string
                        enum:
                          - boolean
                          - currency
                          - date
                          - number
                          - string
                          - url
                    title: CountEntityTraitDefinitionsParams
                required:
                  - data
                  - params
                title: CountEntityTraitDefinitionsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /entity-trait-values:
    get:
      operationId: getEntityTraitValues
      summary: Get entity trait values
      tags:
        - companies
      parameters:
        - name: definition_id
          in: query
          required: true
          schema:
            type: string
        - name: q
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/EntityTraitValue'
                    title: GetEntityTraitValuesResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      definition_id:
                        type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                    title: GetEntityTraitValuesParams
                required:
                  - data
                  - params
                title: GetEntityTraitValuesResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /environments:
    get:
      operationId: listEnvironments
      summary: List environments
      tags:
        - accounts
      parameters:
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/EnvironmentResponseData'
                    title: ListEnvironmentsResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                    title: ListEnvironmentsParams
                required:
                  - data
                  - params
                title: ListEnvironmentsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    post:
      operationId: createEnvironment
      summary: Create environment
      tags:
        - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/EnvironmentDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: CreateEnvironmentParams
                required:
                  - data
                  - params
                title: CreateEnvironmentResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /environments/{environment_id}:
    get:
      operationId: getEnvironment
      summary: Get environment
      tags:
        - accounts
      parameters:
        - name: environment_id
          in: path
          description: environment_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/EnvironmentResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: GetEnvironmentParams
                required:
                  - data
                  - params
                title: GetEnvironmentResponse
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    put:
      operationId: updateEnvironment
      summary: Update environment
      tags:
        - accounts
      parameters:
        - name: environment_id
          in: path
          description: environment_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEnvironmentRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/EnvironmentResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpdateEnvironmentParams
                required:
                  - data
                  - params
                title: UpdateEnvironmentResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    delete:
      operationId: deleteEnvironment
      summary: Delete environment
      tags:
        - accounts
      parameters:
        - name: environment_id
          in: path
          description: environment_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DeleteResponse'
                  params:
                    type: object
                    description: Input parameters
                    title: DeleteEnvironmentParams
                required:
                  - data
                  - params
                title: DeleteEnvironmentResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /event-batch:
    post:
      operationId: createEventBatch
      summary: Create event batch
      tags:
        - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEventBatchRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/RawEventBatchResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: CreateEventBatchParams
                required:
                  - data
                  - params
                title: CreateEventBatchResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /event-types:
    get:
      operationId: getEventSummaries
      summary: Get event summaries
      tags:
        - events
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: event_subtypes
          in: query
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/EventSummaryResponseData'
                    title: GetEventSummariesResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      event_subtypes:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                    title: GetEventSummariesParams
                required:
                  - data
                  - params
                title: GetEventSummariesResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /events:
    get:
      operationId: listEvents
      summary: List events
      tags:
        - events
      parameters:
        - name: company_id
          in: query
          schema:
            type: string
        - name: event_subtype
          in: query
          schema:
            type: string
        - name: event_types
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - identify
                - track
                - flag_check
        - name: flag_id
          in: query
          schema:
            type: string
        - name: user_id
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/EventDetailResponseData'
                    title: ListEventsResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      company_id:
                        type: string
                      event_subtype:
                        type: string
                      event_types:
                        type: array
                        items:
                          type: string
                          enum:
                            - identify
                            - track
                            - flag_check
                      flag_id:
                        type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      user_id:
                        type: string
                    title: ListEventsParams
                required:
                  - data
                  - params
                title: ListEventsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    post:
      operationId: createEvent
      summary: Create event
      tags:
        - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEventRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/RawEventResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: CreateEventParams
                required:
                  - data
                  - params
                title: CreateEventResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /events/{event_id}:
    get:
      operationId: getEvent
      summary: Get event
      tags:
        - events
      parameters:
        - name: event_id
          in: path
          description: event_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/EventDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: GetEventParams
                required:
                  - data
                  - params
                title: GetEventResponse
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /feature-companies:
    get:
      operationId: listFeatureCompanies
      summary: List feature companies
      tags:
        - entitlements
      parameters:
        - name: feature_id
          in: query
          required: true
          schema:
            type: string
        - name: q
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/FeatureCompanyResponseData'
                    title: ListFeatureCompaniesResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      feature_id:
                        type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                    title: ListFeatureCompaniesParams
                required:
                  - data
                  - params
                title: ListFeatureCompaniesResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /feature-companies/count:
    get:
      operationId: countFeatureCompanies
      summary: Count feature companies
      tags:
        - entitlements
      parameters:
        - name: feature_id
          in: query
          required: true
          schema:
            type: string
        - name: q
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      feature_id:
                        type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                    title: CountFeatureCompaniesParams
                required:
                  - data
                  - params
                title: CountFeatureCompaniesResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /feature-usage:
    get:
      operationId: listFeatureUsage
      summary: List feature usage
      tags:
        - entitlements
      parameters:
        - name: company_id
          in: query
          schema:
            type: string
        - name: company_keys
          in: query
          schema:
            additionalProperties:
              type: string
            type: object
        - name: feature_ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: q
          in: query
          schema:
            type: string
        - name: without_negative_entitlements
          in: query
          schema:
            type: boolean
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/FeatureUsageResponseData'
                    title: ListFeatureUsageResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      company_id:
                        type: string
                      company_keys:
                        additionalProperties:
                          type: string
                        type: object
                      feature_ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                      without_negative_entitlements:
                        type: boolean
                    title: ListFeatureUsageParams
                required:
                  - data
                  - params
                title: ListFeatureUsageResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /feature-usage/count:
    get:
      operationId: countFeatureUsage
      summary: Count feature usage
      tags:
        - entitlements
      parameters:
        - name: company_id
          in: query
          schema:
            type: string
        - name: company_keys
          in: query
          schema:
            additionalProperties:
              type: string
            type: object
        - name: feature_ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: q
          in: query
          schema:
            type: string
        - name: without_negative_entitlements
          in: query
          schema:
            type: boolean
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      company_id:
                        type: string
                      company_keys:
                        additionalProperties:
                          type: string
                        type: object
                      feature_ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                      without_negative_entitlements:
                        type: boolean
                    title: CountFeatureUsageParams
                required:
                  - data
                  - params
                title: CountFeatureUsageResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /feature-users:
    get:
      operationId: listFeatureUsers
      summary: List feature users
      tags:
        - entitlements
      parameters:
        - name: feature_id
          in: query
          required: true
          schema:
            type: string
        - name: q
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/FeatureCompanyUserResponseData'
                    title: ListFeatureUsersResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      feature_id:
                        type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                    title: ListFeatureUsersParams
                required:
                  - data
                  - params
                title: ListFeatureUsersResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /feature-users/count:
    get:
      operationId: countFeatureUsers
      summary: Count feature users
      tags:
        - entitlements
      parameters:
        - name: feature_id
          in: query
          required: true
          schema:
            type: string
        - name: q
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      feature_id:
                        type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                    title: CountFeatureUsersParams
                required:
                  - data
                  - params
                title: CountFeatureUsersResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /features:
    get:
      operationId: listFeatures
      summary: List features
      tags:
        - features
      parameters:
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: q
          in: query
          description: Search by feature name or ID
          schema:
            type: string
            description: Search by feature name or ID
        - name: without_company_override_for
          in: query
          description: Filter out features that already have a company override for the specified company ID
          schema:
            type: string
            description: Filter out features that already have a company override for the specified company ID
        - name: without_plan_entitlement_for
          in: query
          description: Filter out features that already have a plan entitlement for the specified plan ID
          schema:
            type: string
            description: Filter out features that already have a plan entitlement for the specified plan ID
        - name: feature_type
          in: query
          description: Filter by one or more feature types (boolean, event, trait)
          schema:
            type: array
            description: Filter by one or more feature types (boolean, event, trait)
            items:
              type: string
        - name: boolean_require_event
          in: query
          description: Only return boolean features if there is an associated event. Automatically includes boolean in the feature types filter.
          schema:
            type: boolean
            description: Only return boolean features if there is an associated event. Automatically includes boolean in the feature types filter.
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/FeatureDetailResponseData'
                    title: ListFeaturesResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      boolean_require_event:
                        type: boolean
                        description: Only return boolean features if there is an associated event. Automatically includes boolean in the feature types filter.
                      feature_type:
                        type: array
                        description: Filter by one or more feature types (boolean, event, trait)
                        items:
                          type: string
                      ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                        description: Search by feature name or ID
                      without_company_override_for:
                        type: string
                        description: Filter out features that already have a company override for the specified company ID
                      without_plan_entitlement_for:
                        type: string
                        description: Filter out features that already have a plan entitlement for the specified plan ID
                    title: ListFeaturesParams
                required:
                  - data
                  - params
                title: ListFeaturesResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    post:
      operationId: createFeature
      summary: Create feature
      tags:
        - features
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFeatureRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/FeatureDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: CreateFeatureParams
                required:
                  - data
                  - params
                title: CreateFeatureResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /features/{feature_id}:
    get:
      operationId: getFeature
      summary: Get feature
      tags:
        - features
      parameters:
        - name: feature_id
          in: path
          description: feature_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/FeatureDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: GetFeatureParams
                required:
                  - data
                  - params
                title: GetFeatureResponse
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    put:
      operationId: updateFeature
      summary: Update feature
      tags:
        - features
      parameters:
        - name: feature_id
          in: path
          description: feature_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFeatureRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/FeatureDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpdateFeatureParams
                required:
                  - data
                  - params
                title: UpdateFeatureResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    delete:
      operationId: deleteFeature
      summary: Delete feature
      tags:
        - features
      parameters:
        - name: feature_id
          in: path
          description: feature_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DeleteResponse'
                  params:
                    type: object
                    description: Input parameters
                    title: DeleteFeatureParams
                required:
                  - data
                  - params
                title: DeleteFeatureResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /features/count:
    get:
      operationId: countFeatures
      summary: Count features
      tags:
        - features
      parameters:
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: q
          in: query
          description: Search by feature name or ID
          schema:
            type: string
            description: Search by feature name or ID
        - name: without_company_override_for
          in: query
          description: Filter out features that already have a company override for the specified company ID
          schema:
            type: string
            description: Filter out features that already have a company override for the specified company ID
        - name: without_plan_entitlement_for
          in: query
          description: Filter out features that already have a plan entitlement for the specified plan ID
          schema:
            type: string
            description: Filter out features that already have a plan entitlement for the specified plan ID
        - name: feature_type
          in: query
          description: Filter by one or more feature types (boolean, event, trait)
          schema:
            type: array
            description: Filter by one or more feature types (boolean, event, trait)
            items:
              type: string
        - name: boolean_require_event
          in: query
          description: Only return boolean features if there is an associated event. Automatically includes boolean in the feature types filter.
          schema:
            type: boolean
            description: Only return boolean features if there is an associated event. Automatically includes boolean in the feature types filter.
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      boolean_require_event:
                        type: boolean
                        description: Only return boolean features if there is an associated event. Automatically includes boolean in the feature types filter.
                      feature_type:
                        type: array
                        description: Filter by one or more feature types (boolean, event, trait)
                        items:
                          type: string
                      ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                        description: Search by feature name or ID
                      without_company_override_for:
                        type: string
                        description: Filter out features that already have a company override for the specified company ID
                      without_plan_entitlement_for:
                        type: string
                        description: Filter out features that already have a plan entitlement for the specified plan ID
                    title: CountFeaturesParams
                required:
                  - data
                  - params
                title: CountFeaturesResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /flags:
    get:
      operationId: listFlags
      summary: List flags
      tags:
        - features
      parameters:
        - name: feature_id
          in: query
          schema:
            type: string
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: q
          in: query
          description: Search by flag name, key, or ID
          schema:
            type: string
            description: Search by flag name, key, or ID
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/FlagDetailResponseData'
                    title: ListFlagsResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      feature_id:
                        type: string
                      ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                        description: Search by flag name, key, or ID
                    title: ListFlagsParams
                required:
                  - data
                  - params
                title: ListFlagsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    post:
      operationId: createFlag
      summary: Create flag
      tags:
        - features
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFlagRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/FlagDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: CreateFlagParams
                required:
                  - data
                  - params
                title: CreateFlagResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /flags/{flag_id}:
    get:
      operationId: getFlag
      summary: Get flag
      tags:
        - features
      parameters:
        - name: flag_id
          in: path
          description: flag_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/FlagDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: GetFlagParams
                required:
                  - data
                  - params
                title: GetFlagResponse
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    put:
      operationId: updateFlag
      summary: Update flag
      tags:
        - features
      parameters:
        - name: flag_id
          in: path
          description: flag_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFlagRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/FlagDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpdateFlagParams
                required:
                  - data
                  - params
                title: UpdateFlagResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    delete:
      operationId: deleteFlag
      summary: Delete flag
      tags:
        - features
      parameters:
        - name: flag_id
          in: path
          description: flag_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DeleteResponse'
                  params:
                    type: object
                    description: Input parameters
                    title: DeleteFlagParams
                required:
                  - data
                  - params
                title: DeleteFlagResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /flags/{flag_id}/rules:
    put:
      operationId: updateFlagRules
      summary: Update flag rules
      tags:
        - features
      parameters:
        - name: flag_id
          in: path
          description: flag_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFlagRulesRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/RulesDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpdateFlagRulesParams
                required:
                  - data
                  - params
                title: UpdateFlagRulesResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /flags/{key}/check:
    post:
      operationId: checkFlag
      summary: Check flag
      tags:
        - features
      parameters:
        - name: key
          in: path
          description: key
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckFlagRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CheckFlagResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: CheckFlagParams
                required:
                  - data
                  - params
                title: CheckFlagResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /flags/check:
    post:
      operationId: checkFlags
      summary: Check flags
      tags:
        - features
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckFlagRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CheckFlagsResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: CheckFlagsParams
                required:
                  - data
                  - params
                title: CheckFlagsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /flags/count:
    get:
      operationId: countFlags
      summary: Count flags
      tags:
        - features
      parameters:
        - name: feature_id
          in: query
          schema:
            type: string
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: q
          in: query
          description: Search by flag name, key, or ID
          schema:
            type: string
            description: Search by flag name, key, or ID
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      feature_id:
                        type: string
                      ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                        description: Search by flag name, key, or ID
                    title: CountFlagsParams
                required:
                  - data
                  - params
                title: CountFlagsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /manage-plan:
    post:
      operationId: managePlan
      summary: Manage plan
      tags:
        - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagePlanRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ManagePlanResponseResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: ManagePlanParams
                required:
                  - data
                  - params
                title: ManagePlanResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /manage-plan/preview:
    post:
      operationId: previewManagePlan
      summary: Preview manage plan
      tags:
        - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagePlanRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ManagePlanPreviewResponseResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: PreviewManagePlanParams
                required:
                  - data
                  - params
                title: PreviewManagePlanResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /plan-audiences/{plan_audience_id}:
    get:
      operationId: getAudience
      summary: Get audience
      tags:
        - plans
      parameters:
        - name: plan_audience_id
          in: path
          description: plan_audience_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PlanAudienceDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: GetAudienceParams
                required:
                  - data
                  - params
                title: GetAudienceResponse
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    put:
      operationId: updateAudience
      summary: Update audience
      tags:
        - plans
      parameters:
        - name: plan_audience_id
          in: path
          description: plan_audience_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAudienceRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PlanAudienceDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpdateAudienceParams
                required:
                  - data
                  - params
                title: UpdateAudienceResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    delete:
      operationId: deleteAudience
      summary: Delete audience
      tags:
        - plans
      parameters:
        - name: plan_audience_id
          in: path
          description: plan_audience_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DeleteResponse'
                  params:
                    type: object
                    description: Input parameters
                    title: DeleteAudienceParams
                required:
                  - data
                  - params
                title: DeleteAudienceResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /plan-entitlements:
    get:
      operationId: listPlanEntitlements
      summary: List plan entitlements
      tags:
        - entitlements
      parameters:
        - name: feature_id
          in: query
          description: Filter plan entitlements by a single feature ID (starting with feat_)
          schema:
            type: string
            description: Filter plan entitlements by a single feature ID (starting with feat_)
        - name: feature_ids
          in: query
          description: Filter plan entitlements by multiple feature IDs (starting with feat_)
          schema:
            type: array
            description: Filter plan entitlements by multiple feature IDs (starting with feat_)
            items:
              type: string
        - name: ids
          in: query
          description: Filter plan entitlements by multiple plan entitlement IDs (starting with pltl_)
          schema:
            type: array
            description: Filter plan entitlements by multiple plan entitlement IDs (starting with pltl_)
            items:
              type: string
        - name: plan_id
          in: query
          description: Filter plan entitlements by a single plan ID (starting with plan_)
          schema:
            type: string
            description: Filter plan entitlements by a single plan ID (starting with plan_)
        - name: plan_ids
          in: query
          description: Filter plan entitlements by multiple plan IDs (starting with plan_)
          schema:
            type: array
            description: Filter plan entitlements by multiple plan IDs (starting with plan_)
            items:
              type: string
        - name: q
          in: query
          description: Search for plan entitlements by feature or company name
          schema:
            type: string
            description: Search for plan entitlements by feature or company name
        - name: with_metered_products
          in: query
          description: Filter plan entitlements only with metered products
          schema:
            type: boolean
            description: Filter plan entitlements only with metered products
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlanEntitlementResponseData'
                    title: ListPlanEntitlementsResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      feature_id:
                        type: string
                        description: Filter plan entitlements by a single feature ID (starting with feat_)
                      feature_ids:
                        type: array
                        description: Filter plan entitlements by multiple feature IDs (starting with feat_)
                        items:
                          type: string
                      ids:
                        type: array
                        description: Filter plan entitlements by multiple plan entitlement IDs (starting with pltl_)
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      plan_id:
                        type: string
                        description: Filter plan entitlements by a single plan ID (starting with plan_)
                      plan_ids:
                        type: array
                        description: Filter plan entitlements by multiple plan IDs (starting with plan_)
                        items:
                          type: string
                      q:
                        type: string
                        description: Search for plan entitlements by feature or company name
                      with_metered_products:
                        type: boolean
                        description: Filter plan entitlements only with metered products
                    title: ListPlanEntitlementsParams
                required:
                  - data
                  - params
                title: ListPlanEntitlementsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    post:
      operationId: createPlanEntitlement
      summary: Create plan entitlement
      tags:
        - entitlements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlanEntitlementRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PlanEntitlementResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: CreatePlanEntitlementParams
                required:
                  - data
                  - params
                title: CreatePlanEntitlementResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /plan-entitlements/{plan_entitlement_id}:
    get:
      operationId: getPlanEntitlement
      summary: Get plan entitlement
      tags:
        - entitlements
      parameters:
        - name: plan_entitlement_id
          in: path
          description: plan_entitlement_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PlanEntitlementResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: GetPlanEntitlementParams
                required:
                  - data
                  - params
                title: GetPlanEntitlementResponse
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    put:
      operationId: updatePlanEntitlement
      summary: Update plan entitlement
      tags:
        - entitlements
      parameters:
        - name: plan_entitlement_id
          in: path
          description: plan_entitlement_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlanEntitlementRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PlanEntitlementResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpdatePlanEntitlementParams
                required:
                  - data
                  - params
                title: UpdatePlanEntitlementResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    delete:
      operationId: deletePlanEntitlement
      summary: Delete plan entitlement
      tags:
        - entitlements
      parameters:
        - name: plan_entitlement_id
          in: path
          description: plan_entitlement_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DeleteResponse'
                  params:
                    type: object
                    description: Input parameters
                    title: DeletePlanEntitlementParams
                required:
                  - data
                  - params
                title: DeletePlanEntitlementResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /plan-entitlements/count:
    get:
      operationId: countPlanEntitlements
      summary: Count plan entitlements
      tags:
        - entitlements
      parameters:
        - name: feature_id
          in: query
          description: Filter plan entitlements by a single feature ID (starting with feat_)
          schema:
            type: string
            description: Filter plan entitlements by a single feature ID (starting with feat_)
        - name: feature_ids
          in: query
          description: Filter plan entitlements by multiple feature IDs (starting with feat_)
          schema:
            type: array
            description: Filter plan entitlements by multiple feature IDs (starting with feat_)
            items:
              type: string
        - name: ids
          in: query
          description: Filter plan entitlements by multiple plan entitlement IDs (starting with pltl_)
          schema:
            type: array
            description: Filter plan entitlements by multiple plan entitlement IDs (starting with pltl_)
            items:
              type: string
        - name: plan_id
          in: query
          description: Filter plan entitlements by a single plan ID (starting with plan_)
          schema:
            type: string
            description: Filter plan entitlements by a single plan ID (starting with plan_)
        - name: plan_ids
          in: query
          description: Filter plan entitlements by multiple plan IDs (starting with plan_)
          schema:
            type: array
            description: Filter plan entitlements by multiple plan IDs (starting with plan_)
            items:
              type: string
        - name: q
          in: query
          description: Search for plan entitlements by feature or company name
          schema:
            type: string
            description: Search for plan entitlements by feature or company name
        - name: with_metered_products
          in: query
          description: Filter plan entitlements only with metered products
          schema:
            type: boolean
            description: Filter plan entitlements only with metered products
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      feature_id:
                        type: string
                        description: Filter plan entitlements by a single feature ID (starting with feat_)
                      feature_ids:
                        type: array
                        description: Filter plan entitlements by multiple feature IDs (starting with feat_)
                        items:
                          type: string
                      ids:
                        type: array
                        description: Filter plan entitlements by multiple plan entitlement IDs (starting with pltl_)
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      plan_id:
                        type: string
                        description: Filter plan entitlements by a single plan ID (starting with plan_)
                      plan_ids:
                        type: array
                        description: Filter plan entitlements by multiple plan IDs (starting with plan_)
                        items:
                          type: string
                      q:
                        type: string
                        description: Search for plan entitlements by feature or company name
                      with_metered_products:
                        type: boolean
                        description: Filter plan entitlements only with metered products
                    title: CountPlanEntitlementsParams
                required:
                  - data
                  - params
                title: CountPlanEntitlementsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /plan-groups:
    get:
      operationId: getPlanGroup
      summary: Get plan group
      tags:
        - plangroups
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PlanGroupDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: GetPlanGroupParams
                required:
                  - data
                  - params
                title: GetPlanGroupResponse
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    post:
      operationId: createPlanGroup
      summary: Create plan group
      tags:
        - plangroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlanGroupRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PlanGroupResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: CreatePlanGroupParams
                required:
                  - data
                  - params
                title: CreatePlanGroupResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /plan-groups/{plan_group_id}:
    put:
      operationId: updatePlanGroup
      summary: Update plan group
      tags:
        - plangroups
      parameters:
        - name: plan_group_id
          in: path
          description: plan_group_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlanGroupRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PlanGroupResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpdatePlanGroupParams
                required:
                  - data
                  - params
                title: UpdatePlanGroupResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /plan-traits:
    get:
      operationId: listPlanTraits
      summary: List plan traits
      tags:
        - companies
      parameters:
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: plan_id
          in: query
          schema:
            type: string
        - name: trait_id
          in: query
          schema:
            type: string
        - name: trait_ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlanTraitResponseData'
                    title: ListPlanTraitsResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      plan_id:
                        type: string
                      trait_id:
                        type: string
                      trait_ids:
                        type: array
                        items:
                          type: string
                    title: ListPlanTraitsParams
                required:
                  - data
                  - params
                title: ListPlanTraitsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    post:
      operationId: createPlanTrait
      summary: Create plan trait
      tags:
        - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlanTraitRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PlanTraitResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: CreatePlanTraitParams
                required:
                  - data
                  - params
                title: CreatePlanTraitResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /plan-traits/{plan_trait_id}:
    get:
      operationId: getPlanTrait
      summary: Get plan trait
      tags:
        - companies
      parameters:
        - name: plan_trait_id
          in: path
          description: plan_trait_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PlanTraitResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: GetPlanTraitParams
                required:
                  - data
                  - params
                title: GetPlanTraitResponse
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    put:
      operationId: updatePlanTrait
      summary: Update plan trait
      tags:
        - companies
      parameters:
        - name: plan_trait_id
          in: path
          description: plan_trait_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlanTraitRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PlanTraitResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpdatePlanTraitParams
                required:
                  - data
                  - params
                title: UpdatePlanTraitResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    delete:
      operationId: deletePlanTrait
      summary: Delete plan trait
      tags:
        - companies
      parameters:
        - name: plan_trait_id
          in: path
          description: plan_trait_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DeleteResponse'
                  params:
                    type: object
                    description: Input parameters
                    title: DeletePlanTraitParams
                required:
                  - data
                  - params
                title: DeletePlanTraitResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /plan-traits/bulk:
    post:
      operationId: updatePlanTraitsBulk
      summary: Update plan traits bulk
      tags:
        - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlanTraitBulkRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlanTraitResponseData'
                    title: UpdatePlanTraitsBulkResponseData
                  params:
                    type: object
                    description: Input parameters
                    title: UpdatePlanTraitsBulkParams
                required:
                  - data
                  - params
                title: UpdatePlanTraitsBulkResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /plan-traits/count:
    get:
      operationId: countPlanTraits
      summary: Count plan traits
      tags:
        - companies
      parameters:
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: plan_id
          in: query
          schema:
            type: string
        - name: trait_id
          in: query
          schema:
            type: string
        - name: trait_ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      plan_id:
                        type: string
                      trait_id:
                        type: string
                      trait_ids:
                        type: array
                        items:
                          type: string
                    title: CountPlanTraitsParams
                required:
                  - data
                  - params
                title: CountPlanTraitsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /plans:
    get:
      operationId: listPlans
      summary: List plans
      tags:
        - plans
      parameters:
        - name: company_id
          in: query
          schema:
            type: string
        - name: for_fallback_plan
          in: query
          description: Filter for plans valid as fallback plans (not linked to billing)
          schema:
            type: boolean
            description: Filter for plans valid as fallback plans (not linked to billing)
        - name: for_initial_plan
          in: query
          description: Filter for plans valid as initial plans (not linked to billing, free, or auto-cancelling trial)
          schema:
            type: boolean
            description: Filter for plans valid as initial plans (not linked to billing, free, or auto-cancelling trial)
        - name: for_trial_expiry_plan
          in: query
          description: Filter for plans valid as trial expiry plans (not linked to billing or free)
          schema:
            type: boolean
            description: Filter for plans valid as trial expiry plans (not linked to billing or free)
        - name: has_product_id
          in: query
          description: Filter out plans that do not have a billing product ID
          schema:
            type: boolean
            description: Filter out plans that do not have a billing product ID
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: plan_type
          in: query
          description: Filter by plan type
          schema:
            type: string
            description: Filter by plan type
            enum:
              - plan
              - add_on
        - name: q
          in: query
          schema:
            type: string
        - name: requires_payment_method
          in: query
          description: Filter for plans that require a payment method (inverse of ForInitialPlan)
          schema:
            type: boolean
            description: Filter for plans that require a payment method (inverse of ForInitialPlan)
        - name: without_entitlement_for
          in: query
          description: Filter out plans that already have a plan entitlement for the specified feature ID
          schema:
            type: string
            description: Filter out plans that already have a plan entitlement for the specified feature ID
        - name: without_product_id
          in: query
          description: Filter out plans that have a billing product ID
          schema:
            type: boolean
            description: Filter out plans that have a billing product ID
        - name: without_paid_product_id
          in: query
          description: Filter out plans that have a paid billing product ID
          schema:
            type: boolean
            description: Filter out plans that have a paid billing product ID
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlanDetailResponseData'
                    title: ListPlansResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      company_id:
                        type: string
                      for_fallback_plan:
                        type: boolean
                        description: Filter for plans valid as fallback plans (not linked to billing)
                      for_initial_plan:
                        type: boolean
                        description: Filter for plans valid as initial plans (not linked to billing, free, or auto-cancelling trial)
                      for_trial_expiry_plan:
                        type: boolean
                        description: Filter for plans valid as trial expiry plans (not linked to billing or free)
                      has_product_id:
                        type: boolean
                        description: Filter out plans that do not have a billing product ID
                      ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      plan_type:
                        type: string
                        description: Filter by plan type
                        enum:
                          - plan
                          - add_on
                      q:
                        type: string
                      requires_payment_method:
                        type: boolean
                        description: Filter for plans that require a payment method (inverse of ForInitialPlan)
                      without_entitlement_for:
                        type: string
                        description: Filter out plans that already have a plan entitlement for the specified feature ID
                      without_paid_product_id:
                        type: boolean
                        description: Filter out plans that have a paid billing product ID
                      without_product_id:
                        type: boolean
                        description: Filter out plans that have a billing product ID
                    title: ListPlansParams
                required:
                  - data
                  - params
                title: ListPlansResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    post:
      operationId: createPlan
      summary: Create plan
      tags:
        - plans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlanRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PlanDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: CreatePlanParams
                required:
                  - data
                  - params
                title: CreatePlanResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /plans/{plan_id}:
    get:
      operationId: getPlan
      summary: Get plan
      tags:
        - plans
      parameters:
        - name: plan_id
          in: path
          description: plan_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PlanDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: GetPlanParams
                required:
                  - data
                  - params
                title: GetPlanResponse
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    put:
      operationId: updatePlan
      summary: Update plan
      tags:
        - plans
      parameters:
        - name: plan_id
          in: path
          description: plan_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlanRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PlanDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpdatePlanParams
                required:
                  - data
                  - params
                title: UpdatePlanResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    delete:
      operationId: deletePlan
      summary: Delete plan
      tags:
        - plans
      parameters:
        - name: plan_id
          in: path
          description: plan_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DeleteResponse'
                  params:
                    type: object
                    description: Input parameters
                    title: DeletePlanParams
                required:
                  - data
                  - params
                title: DeletePlanResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /plans/{plan_id}/billing_products:
    put:
      operationId: upsertBillingProductPlan
      summary: Upsert billing product plan
      tags:
        - plans
      parameters:
        - name: plan_id
          in: path
          description: plan_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertBillingProductRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BillingProductPlanResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpsertBillingProductPlanParams
                required:
                  - data
                  - params
                title: UpsertBillingProductPlanResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /plans/count:
    get:
      operationId: countPlans
      summary: Count plans
      tags:
        - plans
      parameters:
        - name: company_id
          in: query
          schema:
            type: string
        - name: for_fallback_plan
          in: query
          description: Filter for plans valid as fallback plans (not linked to billing)
          schema:
            type: boolean
            description: Filter for plans valid as fallback plans (not linked to billing)
        - name: for_initial_plan
          in: query
          description: Filter for plans valid as initial plans (not linked to billing, free, or auto-cancelling trial)
          schema:
            type: boolean
            description: Filter for plans valid as initial plans (not linked to billing, free, or auto-cancelling trial)
        - name: for_trial_expiry_plan
          in: query
          description: Filter for plans valid as trial expiry plans (not linked to billing or free)
          schema:
            type: boolean
            description: Filter for plans valid as trial expiry plans (not linked to billing or free)
        - name: has_product_id
          in: query
          description: Filter out plans that do not have a billing product ID
          schema:
            type: boolean
            description: Filter out plans that do not have a billing product ID
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: plan_type
          in: query
          description: Filter by plan type
          schema:
            type: string
            description: Filter by plan type
            enum:
              - plan
              - add_on
        - name: q
          in: query
          schema:
            type: string
        - name: requires_payment_method
          in: query
          description: Filter for plans that require a payment method (inverse of ForInitialPlan)
          schema:
            type: boolean
            description: Filter for plans that require a payment method (inverse of ForInitialPlan)
        - name: without_entitlement_for
          in: query
          description: Filter out plans that already have a plan entitlement for the specified feature ID
          schema:
            type: string
            description: Filter out plans that already have a plan entitlement for the specified feature ID
        - name: without_product_id
          in: query
          description: Filter out plans that have a billing product ID
          schema:
            type: boolean
            description: Filter out plans that have a billing product ID
        - name: without_paid_product_id
          in: query
          description: Filter out plans that have a paid billing product ID
          schema:
            type: boolean
            description: Filter out plans that have a paid billing product ID
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      company_id:
                        type: string
                      for_fallback_plan:
                        type: boolean
                        description: Filter for plans valid as fallback plans (not linked to billing)
                      for_initial_plan:
                        type: boolean
                        description: Filter for plans valid as initial plans (not linked to billing, free, or auto-cancelling trial)
                      for_trial_expiry_plan:
                        type: boolean
                        description: Filter for plans valid as trial expiry plans (not linked to billing or free)
                      has_product_id:
                        type: boolean
                        description: Filter out plans that do not have a billing product ID
                      ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      plan_type:
                        type: string
                        description: Filter by plan type
                        enum:
                          - plan
                          - add_on
                      q:
                        type: string
                      requires_payment_method:
                        type: boolean
                        description: Filter for plans that require a payment method (inverse of ForInitialPlan)
                      without_entitlement_for:
                        type: string
                        description: Filter out plans that already have a plan entitlement for the specified feature ID
                      without_paid_product_id:
                        type: boolean
                        description: Filter out plans that have a paid billing product ID
                      without_product_id:
                        type: boolean
                        description: Filter out plans that have a billing product ID
                    title: CountPlansParams
                required:
                  - data
                  - params
                title: CountPlansResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /plans/issues:
    get:
      operationId: listPlanIssues
      summary: List plan issues
      tags:
        - plans
      parameters:
        - name: plan_id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlanIssueResponseData'
                    title: ListPlanIssuesResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      plan_id:
                        type: string
                    title: ListPlanIssuesParams
                required:
                  - data
                  - params
                title: ListPlanIssuesResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /quickstart:
    post:
      operationId: quickstart
      summary: Quickstart
      tags:
        - accounts
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/QuickstartResp'
                  params:
                    type: object
                    description: Input parameters
                    title: QuickstartParams
                required:
                  - data
                  - params
                title: QuickstartResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /segment-integration:
    get:
      operationId: getSegmentIntegrationStatus
      summary: Get segment integration status
      tags:
        - events
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/SegmentStatusResp'
                  params:
                    type: object
                    description: Input parameters
                    title: GetSegmentIntegrationStatusParams
                required:
                  - data
                  - params
                title: GetSegmentIntegrationStatusResponse
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /subscription/{subscription_id}/edit-trial-end:
    put:
      operationId: updateCustomerSubscriptionTrialEnd
      summary: Update customer subscription trial end
      tags:
        - checkout
      parameters:
        - name: subscription_id
          in: path
          description: subscription_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrialEndRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BillingSubscriptionView'
                  params:
                    type: object
                    description: Input parameters
                    title: UpdateCustomerSubscriptionTrialEndParams
                required:
                  - data
                  - params
                title: UpdateCustomerSubscriptionTrialEndResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /temporary-access-tokens:
    post:
      operationId: issueTemporaryAccessToken
      summary: Issue temporary access token
      tags:
        - accesstokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueTemporaryAccessTokenRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/IssueTemporaryAccessTokenResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: IssueTemporaryAccessTokenParams
                required:
                  - data
                  - params
                title: IssueTemporaryAccessTokenResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /usage-by-company:
    get:
      operationId: getFeatureUsageByCompany
      summary: Get feature usage by company
      tags:
        - entitlements
      parameters:
        - name: keys
          in: query
          description: Key/value pairs
          required: true
          schema:
            additionalProperties:
              type: string
            type: object
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/FeatureUsageDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      keys:
                        additionalProperties:
                          type: string
                        type: object
                    title: GetFeatureUsageByCompanyParams
                required:
                  - data
                  - params
                title: GetFeatureUsageByCompanyResponse
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /user-traits:
    post:
      operationId: upsertUserTrait
      summary: Upsert user trait
      tags:
        - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertTraitRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UserDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpsertUserTraitParams
                required:
                  - data
                  - params
                title: UpsertUserTraitResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /users:
    get:
      operationId: listUsers
      summary: List users
      tags:
        - companies
      parameters:
        - name: company_id
          in: query
          description: Filter users by company ID (starts with comp_)
          schema:
            type: string
            description: Filter users by company ID (starts with comp_)
        - name: ids
          in: query
          description: Filter users by multiple user IDs (starts with user_)
          schema:
            type: array
            description: Filter users by multiple user IDs (starts with user_)
            items:
              type: string
        - name: plan_id
          in: query
          description: Filter users by plan ID (starts with plan_)
          schema:
            type: string
            description: Filter users by plan ID (starts with plan_)
        - name: q
          in: query
          description: Search for users by name, keys or string traits
          schema:
            type: string
            description: Search for users by name, keys or string traits
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserDetailResponseData'
                    title: ListUsersResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      company_id:
                        type: string
                        description: Filter users by company ID (starts with comp_)
                      ids:
                        type: array
                        description: Filter users by multiple user IDs (starts with user_)
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      plan_id:
                        type: string
                        description: Filter users by plan ID (starts with plan_)
                      q:
                        type: string
                        description: Search for users by name, keys or string traits
                    title: ListUsersParams
                required:
                  - data
                  - params
                title: ListUsersResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    post:
      operationId: upsertUser
      summary: Upsert user
      tags:
        - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertUserRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UserDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpsertUserParams
                required:
                  - data
                  - params
                title: UpsertUserResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /users/{user_id}:
    get:
      operationId: getUser
      summary: Get user
      tags:
        - companies
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UserDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: GetUserParams
                required:
                  - data
                  - params
                title: GetUserResponse
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    delete:
      operationId: deleteUser
      summary: Delete user
      tags:
        - companies
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DeleteResponse'
                  params:
                    type: object
                    description: Input parameters
                    title: DeleteUserParams
                required:
                  - data
                  - params
                title: DeleteUserResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /users/count:
    get:
      operationId: countUsers
      summary: Count users
      tags:
        - companies
      parameters:
        - name: company_id
          in: query
          description: Filter users by company ID (starts with comp_)
          schema:
            type: string
            description: Filter users by company ID (starts with comp_)
        - name: ids
          in: query
          description: Filter users by multiple user IDs (starts with user_)
          schema:
            type: array
            description: Filter users by multiple user IDs (starts with user_)
            items:
              type: string
        - name: plan_id
          in: query
          description: Filter users by plan ID (starts with plan_)
          schema:
            type: string
            description: Filter users by plan ID (starts with plan_)
        - name: q
          in: query
          description: Search for users by name, keys or string traits
          schema:
            type: string
            description: Search for users by name, keys or string traits
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      company_id:
                        type: string
                        description: Filter users by company ID (starts with comp_)
                      ids:
                        type: array
                        description: Filter users by multiple user IDs (starts with user_)
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      plan_id:
                        type: string
                        description: Filter users by plan ID (starts with plan_)
                      q:
                        type: string
                        description: Search for users by name, keys or string traits
                    title: CountUsersParams
                required:
                  - data
                  - params
                title: CountUsersResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /users/create:
    post:
      operationId: createUser
      summary: Create user
      tags:
        - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertUserRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UserDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: CreateUserParams
                required:
                  - data
                  - params
                title: CreateUserResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /users/delete:
    post:
      operationId: deleteUserByKeys
      summary: Delete user by keys
      tags:
        - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeysRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UserResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: DeleteUserByKeysParams
                required:
                  - data
                  - params
                title: DeleteUserByKeysResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /users/lookup:
    get:
      operationId: lookupUser
      summary: Lookup user
      tags:
        - companies
      parameters:
        - name: keys
          in: query
          description: Key/value pairs
          required: true
          schema:
            additionalProperties:
              type: string
            type: object
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UserDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      keys:
                        additionalProperties:
                          type: string
                        type: object
                    title: LookupUserParams
                required:
                  - data
                  - params
                title: LookupUserResponse
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /webhook-events:
    get:
      operationId: listWebhookEvents
      summary: List webhook events
      tags:
        - webhooks
      parameters:
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: q
          in: query
          schema:
            type: string
        - name: webhook_id
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/WebhookEventDetailResponseData'
                    title: ListWebhookEventsResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                      webhook_id:
                        type: string
                    title: ListWebhookEventsParams
                required:
                  - data
                  - params
                title: ListWebhookEventsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /webhook-events/{webhook_event_id}:
    get:
      operationId: getWebhookEvent
      summary: Get webhook event
      tags:
        - webhooks
      parameters:
        - name: webhook_event_id
          in: path
          description: webhook_event_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/WebhookEventDetailResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: GetWebhookEventParams
                required:
                  - data
                  - params
                title: GetWebhookEventResponse
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /webhook-events/count:
    get:
      operationId: countWebhookEvents
      summary: Count webhook events
      tags:
        - webhooks
      parameters:
        - name: ids
          in: query
          schema:
            type: array
            items:
              type: string
        - name: q
          in: query
          schema:
            type: string
        - name: webhook_id
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      ids:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                      webhook_id:
                        type: string
                    title: CountWebhookEventsParams
                required:
                  - data
                  - params
                title: CountWebhookEventsResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /webhooks:
    get:
      operationId: listWebhooks
      summary: List webhooks
      tags:
        - webhooks
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/WebhookResponseData'
                    title: ListWebhooksResponseData
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                    title: ListWebhooksParams
                required:
                  - data
                  - params
                title: ListWebhooksResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    post:
      operationId: createWebhook
      summary: Create webhook
      tags:
        - webhooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebhookRequestBody'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/WebhookResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: CreateWebhookParams
                required:
                  - data
                  - params
                title: CreateWebhookResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /webhooks/{webhook_id}:
    get:
      operationId: getWebhook
      summary: Get webhook
      tags:
        - webhooks
      parameters:
        - name: webhook_id
          in: path
          description: webhook_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/WebhookResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: GetWebhookParams
                required:
                  - data
                  - params
                title: GetWebhookResponse
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    put:
      operationId: updateWebhook
      summary: Update webhook
      tags:
        - webhooks
      parameters:
        - name: webhook_id
          in: path
          description: webhook_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWebhookRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/WebhookResponseData'
                  params:
                    type: object
                    description: Input parameters
                    title: UpdateWebhookParams
                required:
                  - data
                  - params
                title: UpdateWebhookResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
    delete:
      operationId: deleteWebhook
      summary: Delete webhook
      tags:
        - webhooks
      parameters:
        - name: webhook_id
          in: path
          description: webhook_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/DeleteResponse'
                  params:
                    type: object
                    description: Input parameters
                    title: DeleteWebhookParams
                required:
                  - data
                  - params
                title: DeleteWebhookResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
  /webhooks/count:
    get:
      operationId: countWebhooks
      summary: Count webhooks
      tags:
        - webhooks
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Page limit (default 100)
          schema:
            type: integer
            description: Page limit (default 100)
            example: "100"
        - name: offset
          in: query
          description: Page offset (default 0)
          schema:
            type: integer
            description: Page offset (default 0)
            example: "0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CountResponse'
                  params:
                    type: object
                    description: Input parameters
                    properties:
                      limit:
                        type: integer
                        description: Page limit (default 100)
                        example: "100"
                      offset:
                        type: integer
                        description: Page offset (default 0)
                        example: "0"
                      q:
                        type: string
                    title: CountWebhooksParams
                required:
                  - data
                  - params
                title: CountWebhooksResponse
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
tags:
  - name: accesstokens
  - name: accounts
  - name: companies
  - name: plangroups
  - name: credits
  - name: events
  - name: features
  - name: plans
  - name: entitlements
  - name: billing
  - name: crm
  - name: webhooks
  - name: components
  - name: checkout
  - name: dataexports
