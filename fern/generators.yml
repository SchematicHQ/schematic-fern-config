api:
  specs:
    - openapi: ../schematic.yaml
      overrides: ../overrides.yaml
      origin: https://openapi.schematichq.com/latest.yml
      settings:
        optional-additional-properties: false
groups:
  python-sdk:
    generators:
      - name: fernapi/fern-python-sdk
        version: 4.32.1
        output:
          location: pypi
          package-name: "schematichq"
          token: ${PYPI_API_TOKEN}
        github:
          repository: schematichq/schematic-python
          mode: pull-request
        config:
          inline_request_params: true
          client:
            class_name: BaseSchematic
            filename: base_client.py
            exported_class_name: Schematic
            exported_filename: client.py
          additional_init_exports:
            - from: client
              imports:
                - AsyncSchematic
                - AsyncSchematicConfig
                - LocalCache
                - Schematic
                - SchematicConfig

  csharp-sdk:
    generators:
      - name: fernapi/fern-csharp-sdk
        version: 2.0.2
        github:
          repository: schematichq/schematic-csharp
          mode: pull-request
        output:
          location: nuget
          package-name: SchematicHQ.Client
          api-key: ${NUGET_API_TOKEN}
        config:
          namespace: SchematicHQ.Client
          client-class-name: SchematicApi
          exported-client-class-name: Schematic
          extra-dependencies:
            moq: "4.20.70"
            "Moq.Contrib.HttpClient": "1.4.0"

  ts-sdk:
    generators:
      - name: fernapi/fern-typescript-node-sdk
        version: 0.51.7
        api:
          settings:
            unions: v1
        output:
          location: npm
          package-name: "@schematichq/schematic-typescript-node"
          token: ${NPM_API_TOKEN}
        github:
          repository: schematichq/schematic-node
          mode: pull-request
        smart-casing: true
        config:
          allowCustomFetcher: true
          includeApiReference: true
          namespaceExport: Schematic
          packageJson:
            browser:
              crypto: false
              timers: false
            dependencies:
              form-data: "^4.0.4"
            devDependencies:
              esbuild: "^0.25.9"
            scripts:
              build: "node build.js"
              "build:legacy": "tsc"
              prepack: ""
            main: "./dist/index.js"
            types: "./dist/index.d.ts"
            files:
              - "dist/**/*.js"
              - "dist/**/*.d.ts"
              - "!dist/**/*.js.map"
              - "!dist/**/*.test.*"
              - "README.md"

          skipResponseValidation: true
          # streamType: wrapper
          # fileResponseType: stream
          # formDataSupport: Node16
          # fetchSupport: node-fetch

  go-sdk:
    generators:
      - name: fernapi/fern-go-sdk
        version: 1.13.15
        github:
          repository: schematichq/schematic-go
          mode: pull-request
        config:
          exportedClientName: SchematicClient
          module:
            path: github.com/SchematicHQ/schematic-go
            version: "1.18"
          packageName: schematichq
        smart-casing: true

  java-sdk:
    generators:
      - name: fernapi/fern-java-sdk
        version: 3.10.2
        output:
          location: maven
          coordinate: com.schematichq:schematic-java
          username: ${MAVEN_USERNAME}
          password: ${MAVEN_PASSWORD}
          signature:
            keyId: ${MAVEN_CENTRAL_SECRET_KEY_KEY_ID}
            password: ${MAVEN_CENTRAL_SECRET_KEY_PASSWORD}
            secretKey: ${MAVEN_CENTRAL_SECRET_KEY}
        github:
          repository: schematichq/schematic-java
          mode: pull-request
        config:
          client-class-name: BaseSchematic
          generate-unknown-as-json-node: true
          custom-dependencies:
            - "testImplementation org.mockito:mockito-core:5.3.1"
            - "testImplementation org.mockito:mockito-junit-jupiter:5.3.1"
